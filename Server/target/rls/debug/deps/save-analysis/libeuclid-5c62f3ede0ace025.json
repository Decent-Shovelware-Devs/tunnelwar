{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10","program":"C:\\Users\\erumn\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","euclid","C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"std\"","-C","metadata=5c62f3ede0ace025","-C","extra-filename=-5c62f3ede0ace025","--out-dir","c:\\Users\\erumn\\Documents\\tunnelwar\\Server\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\erumn\\Documents\\tunnelwar\\Server\\target\\rls\\debug\\deps","--extern","num_traits=c:\\Users\\erumn\\Documents\\tunnelwar\\Server\\target\\rls\\debug\\deps\\libnum_traits-fa97fe690c80751c.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\erumn\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\erumn\\Documents\\tunnelwar\\Server\\target\\rls\\debug\\deps\\libeuclid-5c62f3ede0ace025.rmeta"},"prelude":{"crate_id":{"name":"euclid","disambiguator":[15353783282401585465,14197572694670320216]},"crate_root":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src","external_crates":[{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[4886921161452974022,9452701908620647308]}},{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[3203561457090851205,4632072058037203867]}},{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[3169376498131592849,9803978538207206865]}},{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","num":4,"id":{"name":"num_traits","disambiguator":[5545123555373420864,15441968419284286927]}},{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","num":5,"id":{"name":"std","disambiguator":[2953284957370121905,516218847044108999]}},{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","num":6,"id":{"name":"alloc","disambiguator":[9199649512872691809,295485750221223515]}},{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","num":7,"id":{"name":"libc","disambiguator":[8443236399884245798,5222098755004489868]}},{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","num":8,"id":{"name":"unwind","disambiguator":[6875631416372754603,10839808870381595949]}},{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[1502820548942319655,12324332090615114041]}},{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","num":10,"id":{"name":"backtrace","disambiguator":[430706850608609257,9838809896428719127]}},{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14503357713055743246,17731918345561731946]}},{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[5693586899772496405,17220236988479499600]}},{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[1060170945230123807,4750192540160149325]}},{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[5837979218880944404,14867613958503134191]}}],"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":427,"byte_end":4618,"line_start":10,"line_end":127,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":3564},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2051,"byte_end":2056,"line_start":53,"line_end":53,"column_start":16,"column_end":21},"alias_span":null,"name":"Angle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2073,"byte_end":2078,"line_start":54,"line_end":54,"column_start":16,"column_end":21},"alias_span":null,"name":"Box2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2096,"byte_end":2102,"line_start":55,"line_end":55,"column_start":17,"column_end":23},"alias_span":null,"name":"Length","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1525},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2119,"byte_end":2124,"line_start":56,"line_end":56,"column_start":16,"column_end":21},"alias_span":null,"name":"Scale","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2168},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2147,"byte_end":2158,"line_start":57,"line_end":57,"column_start":22,"column_end":33},"alias_span":null,"name":"Transform2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2331},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2181,"byte_end":2192,"line_start":58,"line_end":58,"column_start":22,"column_end":33},"alias_span":null,"name":"Transform3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2210,"byte_end":2217,"line_start":59,"line_end":59,"column_start":17,"column_end":24},"alias_span":null,"name":"Point2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2219,"byte_end":2226,"line_start":59,"line_end":59,"column_start":26,"column_end":33},"alias_span":null,"name":"Point3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2228,"byte_end":2234,"line_start":59,"line_end":59,"column_start":35,"column_end":41},"alias_span":null,"name":"point2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1068},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2236,"byte_end":2242,"line_start":59,"line_end":59,"column_start":43,"column_end":49},"alias_span":null,"name":"point3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2796},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2262,"byte_end":2270,"line_start":60,"line_end":60,"column_start":18,"column_end":26},"alias_span":null,"name":"Vector2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3017},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2272,"byte_end":2280,"line_start":60,"line_end":60,"column_start":28,"column_end":36},"alias_span":null,"name":"Vector3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3272},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2282,"byte_end":2286,"line_start":60,"line_end":60,"column_start":38,"column_end":42},"alias_span":null,"name":"vec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3275},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2288,"byte_end":2292,"line_start":60,"line_end":60,"column_start":44,"column_end":48},"alias_span":null,"name":"vec3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3724},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2312,"byte_end":2324,"line_start":61,"line_end":61,"column_start":18,"column_end":30},"alias_span":null,"name":"BoolVector2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3742},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2326,"byte_end":2338,"line_start":61,"line_end":61,"column_start":32,"column_end":44},"alias_span":null,"name":"BoolVector3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3278},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2340,"byte_end":2345,"line_start":61,"line_end":61,"column_start":46,"column_end":51},"alias_span":null,"name":"bvec2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3279},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2347,"byte_end":2352,"line_start":61,"line_end":61,"column_start":53,"column_end":58},"alias_span":null,"name":"bvec3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2372,"byte_end":2389,"line_start":62,"line_end":62,"column_start":18,"column_end":35},"alias_span":null,"name":"HomogeneousVector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3761},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2409,"byte_end":2417,"line_start":63,"line_end":63,"column_start":19,"column_end":27},"alias_span":null,"name":"NonEmpty","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1258},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2435,"byte_end":2439,"line_start":65,"line_end":65,"column_start":16,"column_end":20},"alias_span":null,"name":"rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2441,"byte_end":2445,"line_start":65,"line_end":65,"column_start":22,"column_end":26},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3663},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2464,"byte_end":2480,"line_start":66,"line_end":66,"column_start":17,"column_end":33},"alias_span":null,"name":"RigidTransform3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3469},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2499,"byte_end":2504,"line_start":67,"line_end":67,"column_start":17,"column_end":22},"alias_span":null,"name":"box3d","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3305},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2506,"byte_end":2511,"line_start":67,"line_end":67,"column_start":24,"column_end":29},"alias_span":null,"name":"Box3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2507},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2536,"byte_end":2549,"line_start":68,"line_end":68,"column_start":23,"column_end":36},"alias_span":null,"name":"Translation2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2624},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2551,"byte_end":2564,"line_start":68,"line_end":68,"column_start":38,"column_end":51},"alias_span":null,"name":"Translation3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2586,"byte_end":2596,"line_start":69,"line_end":69,"column_start":20,"column_end":30},"alias_span":null,"name":"Rotation2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2598,"byte_end":2608,"line_start":69,"line_end":69,"column_start":32,"column_end":42},"alias_span":null,"name":"Rotation3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1648},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2633,"byte_end":2646,"line_start":70,"line_end":70,"column_start":23,"column_end":36},"alias_span":null,"name":"SideOffsets2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1745},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2663,"byte_end":2669,"line_start":71,"line_end":71,"column_start":16,"column_end":22},"alias_span":null,"name":"Size2D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1941},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2671,"byte_end":2677,"line_start":71,"line_end":71,"column_start":24,"column_end":30},"alias_span":null,"name":"Size3D","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1914},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2679,"byte_end":2684,"line_start":71,"line_end":71,"column_start":32,"column_end":37},"alias_span":null,"name":"size2","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2686,"byte_end":2691,"line_start":71,"line_end":71,"column_start":39,"column_end":44},"alias_span":null,"name":"size3","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2708,"byte_end":2712,"line_start":72,"line_end":72,"column_start":15,"column_end":19},"alias_span":null,"name":"Trig","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":427,"byte_end":4618,"line_start":10,"line_end":127,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":16},{"krate":0,"index":21},{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":33},{"krate":0,"index":36},{"krate":0,"index":39},{"krate":0,"index":42},{"krate":0,"index":43},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":51},{"krate":0,"index":139},{"krate":0,"index":146},{"krate":0,"index":151},{"krate":0,"index":346},{"krate":0,"index":424},{"krate":0,"index":444},{"krate":0,"index":605},{"krate":0,"index":1071},{"krate":0,"index":1261},{"krate":0,"index":1309},{"krate":0,"index":1505},{"krate":0,"index":1634},{"krate":0,"index":1709},{"krate":0,"index":2137},{"krate":0,"index":2295},{"krate":0,"index":2476},{"krate":0,"index":2743},{"krate":0,"index":2752},{"krate":0,"index":3280},{"krate":0,"index":3472},{"krate":0,"index":3788},{"krate":0,"index":3808},{"krate":0,"index":3807},{"krate":0,"index":3805},{"krate":0,"index":3803},{"krate":0,"index":3800},{"krate":0,"index":3801},{"krate":0,"index":3797},{"krate":0,"index":3798},{"krate":0,"index":3795},{"krate":0,"index":3793},{"krate":0,"index":3790},{"krate":0,"index":3522}],"decl_id":null,"docs":" A collection of strongly typed math tools for computer graphics with an inclination\n towards 2d graphics and layout.","sig":null,"attributes":[{"value":"no_std","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":450,"byte_end":456,"line_start":10,"line_end":10,"column_start":24,"column_end":30}},{"value":"! A collection of strongly typed math tools for computer graphics with an inclination","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":460,"byte_end":547,"line_start":12,"line_end":12,"column_start":1,"column_end":88}},{"value":"! towards 2d graphics and layout.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":548,"byte_end":583,"line_start":13,"line_end":13,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":584,"byte_end":587,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"! All types are generic over the scalar type of their component (`f32`, `i32`, etc.),","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":588,"byte_end":675,"line_start":15,"line_end":15,"column_start":1,"column_end":88}},{"value":"! and tagged with a generic Unit parameter which is useful to prevent mixing","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":676,"byte_end":754,"line_start":16,"line_end":16,"column_start":1,"column_end":79}},{"value":"! values from different spaces. For example it should not be legal to translate","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":755,"byte_end":836,"line_start":17,"line_end":17,"column_start":1,"column_end":82}},{"value":"! a screen-space position by a world-space vector and this can be expressed using","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":837,"byte_end":920,"line_start":18,"line_end":18,"column_start":1,"column_end":84}},{"value":"! the generic Unit parameter.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":921,"byte_end":952,"line_start":19,"line_end":19,"column_start":1,"column_end":32}},{"value":"!","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":953,"byte_end":956,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! This unit system is not mandatory and all structures have an alias","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":957,"byte_end":1027,"line_start":21,"line_end":21,"column_start":1,"column_end":71}},{"value":"! with the default unit: `UnknownUnit`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1028,"byte_end":1069,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"! for example ```default::Point2D<T>``` is equivalent to ```Point2D<T, UnknownUnit>```.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1070,"byte_end":1159,"line_start":23,"line_end":23,"column_start":1,"column_end":90}},{"value":"! Client code typically creates a set of aliases for each type and doesn't need","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1160,"byte_end":1241,"line_start":24,"line_end":24,"column_start":1,"column_end":82}},{"value":"! to deal with the specifics of typed units further. For example:","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1242,"byte_end":1309,"line_start":25,"line_end":25,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1310,"byte_end":1313,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1314,"byte_end":1325,"line_start":27,"line_end":27,"column_start":1,"column_end":12}},{"value":"! use euclid::*;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1326,"byte_end":1344,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"! pub struct ScreenSpace;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1345,"byte_end":1372,"line_start":29,"line_end":29,"column_start":1,"column_end":28}},{"value":"! pub type ScreenPoint = Point2D<f32, ScreenSpace>;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1373,"byte_end":1426,"line_start":30,"line_end":30,"column_start":1,"column_end":54}},{"value":"! pub type ScreenSize = Size2D<f32, ScreenSpace>;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1427,"byte_end":1478,"line_start":31,"line_end":31,"column_start":1,"column_end":52}},{"value":"! pub struct WorldSpace;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1479,"byte_end":1505,"line_start":32,"line_end":32,"column_start":1,"column_end":27}},{"value":"! pub type WorldPoint = Point3D<f32, WorldSpace>;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1506,"byte_end":1557,"line_start":33,"line_end":33,"column_start":1,"column_end":52}},{"value":"! pub type ProjectionMatrix = Transform3D<f32, WorldSpace, ScreenSpace>;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1558,"byte_end":1632,"line_start":34,"line_end":34,"column_start":1,"column_end":75}},{"value":"! // etc...","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1633,"byte_end":1646,"line_start":35,"line_end":35,"column_start":1,"column_end":14}},{"value":"! ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1647,"byte_end":1654,"line_start":36,"line_end":36,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1655,"byte_end":1658,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"! All euclid types are marked `#[repr(C)]` in order to facilitate exposing them to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1659,"byte_end":1743,"line_start":38,"line_end":38,"column_start":1,"column_end":85}},{"value":"! foreign function interfaces (provided the underlying scalar type is also `repr(C)`).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1744,"byte_end":1832,"line_start":39,"line_end":39,"column_start":1,"column_end":89}},{"value":"!","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1833,"byte_end":1836,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"deny(unconditional_recursion)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":1837,"byte_end":1870,"line_start":41,"line_end":41,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":3564},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":6565,"byte_end":6570,"line_start":22,"line_end":22,"column_start":12,"column_end":17},"name":"Angle","qualname":"::angle::Angle","value":"Angle { radians }","parent":null,"children":[{"krate":0,"index":3566}],"decl_id":null,"docs":" An angle in radians\n","sig":null,"attributes":[{"value":"/ An angle in radians","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":6404,"byte_end":6427,"line_start":19,"line_end":19,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":3566},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":6584,"byte_end":6591,"line_start":23,"line_end":23,"column_start":9,"column_end":16},"name":"radians","qualname":"::angle::Angle::radians","value":"T","parent":{"krate":0,"index":3564},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":76},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":6643,"byte_end":6650,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"radians","qualname":"<Angle<T>>::radians","value":"fn (radians: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":6622,"byte_end":6631,"line_start":27,"line_end":27,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":77},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":6731,"byte_end":6734,"line_start":33,"line_end":33,"column_start":12,"column_end":15},"name":"get","qualname":"<Angle<T>>::get","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":6710,"byte_end":6719,"line_start":32,"line_end":32,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":80},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":6841,"byte_end":6848,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"degrees","qualname":"<Angle<T>>::degrees","value":"fn (deg: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":6820,"byte_end":6829,"line_start":42,"line_end":42,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":6974,"byte_end":6984,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"to_degrees","qualname":"<Angle<T>>::to_degrees","value":"fn (self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":6953,"byte_end":6962,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":7238,"byte_end":7246,"line_start":60,"line_end":60,"column_start":12,"column_end":20},"name":"positive","qualname":"<Angle<T>>::positive","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns this angle in the [0..2*PI[ range.\n","sig":null,"attributes":[{"value":"/ Returns this angle in the [0..2*PI[ range.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":7180,"byte_end":7226,"line_start":59,"line_end":59,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":85},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":7507,"byte_end":7513,"line_start":70,"line_end":70,"column_start":12,"column_end":18},"name":"signed","qualname":"<Angle<T>>::signed","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns this angle in the ]-PI..PI] range.\n","sig":null,"attributes":[{"value":"/ Returns this angle in the ]-PI..PI] range.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":7449,"byte_end":7495,"line_start":69,"line_end":69,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":88},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":7685,"byte_end":7692,"line_start":80,"line_end":80,"column_start":12,"column_end":19},"name":"sin_cos","qualname":"<Angle<T>>::sin_cos","value":"fn (self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Returns (sin(self), cos(self)).\n","sig":null,"attributes":[{"value":"/ Returns (sin(self), cos(self)).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":7638,"byte_end":7673,"line_start":79,"line_end":79,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":91},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":7800,"byte_end":7804,"line_start":89,"line_end":89,"column_start":12,"column_end":16},"name":"zero","qualname":"<Angle<T>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":7933,"byte_end":7935,"line_start":98,"line_end":98,"column_start":12,"column_end":14},"name":"pi","qualname":"<Angle<T>>::pi","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":7998,"byte_end":8004,"line_start":102,"line_end":102,"column_start":12,"column_end":18},"name":"two_pi","qualname":"<Angle<T>>::two_pi","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":8077,"byte_end":8086,"line_start":106,"line_end":106,"column_start":12,"column_end":21},"name":"frac_pi_2","qualname":"<Angle<T>>::frac_pi_2","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":8156,"byte_end":8165,"line_start":110,"line_end":110,"column_start":12,"column_end":21},"name":"frac_pi_3","qualname":"<Angle<T>>::frac_pi_3","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":8235,"byte_end":8244,"line_start":114,"line_end":114,"column_start":12,"column_end":21},"name":"frac_pi_4","qualname":"<Angle<T>>::frac_pi_4","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxeq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"approxeq","qualname":"::approxeq","value":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxeq.rs","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":145},{"krate":0,"index":3597},{"krate":0,"index":3600}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxeq.rs","byte_start":12342,"byte_end":12350,"line_start":11,"line_end":11,"column_start":11,"column_end":19},"name":"ApproxEq","qualname":"::approxeq::ApproxEq","value":"ApproxEq<Eps>","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144}],"decl_id":null,"docs":" Trait for testing approximate equality\n","sig":null,"attributes":[{"value":"/ Trait for testing approximate equality","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxeq.rs","byte_start":12289,"byte_end":12331,"line_start":10,"line_end":10,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxeq.rs","byte_start":12395,"byte_end":12409,"line_start":13,"line_end":13,"column_start":8,"column_end":22},"name":"approx_epsilon","qualname":"::approxeq::ApproxEq::approx_epsilon","value":"fn () -> Eps","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Default epsilon value\n","sig":null,"attributes":[{"value":"/ Default epsilon value","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxeq.rs","byte_start":12362,"byte_end":12387,"line_start":12,"line_end":12,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxeq.rs","byte_start":12547,"byte_end":12560,"line_start":17,"line_end":17,"column_start":8,"column_end":21},"name":"approx_eq_eps","qualname":"::approxeq::ApproxEq::approx_eq_eps","value":"fn (&self, other: &Self, approx_epsilon: &Eps) -> bool","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Returns `true` is this object is approximately equal to the other one, using\n a provided epsilon value.\n","sig":null,"attributes":[{"value":"/ Returns `true` is this object is approximately equal to the other one, using","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxeq.rs","byte_start":12425,"byte_end":12505,"line_start":15,"line_end":15,"column_start":5,"column_end":85}},{"value":"/ a provided epsilon value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxeq.rs","byte_start":12510,"byte_end":12539,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxeq.rs","byte_start":12752,"byte_end":12761,"line_start":21,"line_end":21,"column_start":8,"column_end":17},"name":"approx_eq","qualname":"::approxeq::ApproxEq::approx_eq","value":"fn (&self, other: &Self) -> bool","parent":{"krate":0,"index":140},"children":[],"decl_id":null,"docs":" Returns `true` is this object is approximately equal to the other one, using\n the `approx_epsilon()` epsilon value.\n","sig":null,"attributes":[{"value":"/ Returns `true` is this object is approximately equal to the other one, using","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxeq.rs","byte_start":12618,"byte_end":12698,"line_start":19,"line_end":19,"column_start":5,"column_end":85}},{"value":"/ the `approx_epsilon()` epsilon value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxeq.rs","byte_start":12703,"byte_end":12744,"line_start":20,"line_end":20,"column_start":5,"column_end":46}}]},{"kind":"Mod","id":{"krate":0,"index":146},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxord.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"approxord","qualname":"::approxord","value":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxord.rs","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":149}],"decl_id":null,"docs":" Utilities for testing approximate ordering - especially true for\n floating point types, where NaN's cannot be ordered.\n","sig":null,"attributes":[{"value":"! Utilities for testing approximate ordering - especially true for","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxord.rs","byte_start":13738,"byte_end":13806,"line_start":10,"line_end":10,"column_start":1,"column_end":69}},{"value":"! floating point types, where NaN's cannot be ordered.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxord.rs","byte_start":13807,"byte_end":13863,"line_start":11,"line_end":11,"column_start":1,"column_end":57}}]},{"kind":"Function","id":{"krate":0,"index":147},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxord.rs","byte_start":13872,"byte_end":13875,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"min","qualname":"::approxord::min","value":"fn <T> (x: T, y: T) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":149},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\approxord.rs","byte_start":13975,"byte_end":13978,"line_start":21,"line_end":21,"column_start":8,"column_end":11},"name":"max","qualname":"::approxord::max","value":"fn <T> (x: T, y: T) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":15543,"byte_end":15548,"line_start":36,"line_end":36,"column_start":12,"column_end":17},"name":"Box2D","qualname":"::box2d::Box2D","value":"Box2D { min, max }","parent":null,"children":[{"krate":0,"index":183},{"krate":0,"index":184}],"decl_id":null,"docs":" An axis aligned rectangle represented by its minimum and maximum coordinates.\n","sig":null,"attributes":[{"value":"/ An axis aligned rectangle represented by its minimum and maximum coordinates.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":15266,"byte_end":15347,"line_start":32,"line_end":32,"column_start":1,"column_end":82}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":15348,"byte_end":15358,"line_start":33,"line_end":33,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":183},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":15565,"byte_end":15568,"line_start":37,"line_end":37,"column_start":9,"column_end":12},"name":"min","qualname":"::box2d::Box2D::min","value":"point::Point2D<T, U>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":184},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":15593,"byte_end":15596,"line_start":38,"line_end":38,"column_start":9,"column_end":12},"name":"max","qualname":"::box2d::Box2D::max","value":"point::Point2D<T, U>","parent":{"krate":0,"index":180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":215},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":16744,"byte_end":16747,"line_start":86,"line_end":86,"column_start":18,"column_end":21},"name":"new","qualname":"<Box2D<T, U>>::new","value":"fn (min: Point2D<T, U>, max: Point2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor.\n","sig":null,"attributes":[{"value":"/ Constructor.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":16696,"byte_end":16712,"line_start":84,"line_end":84,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":16717,"byte_end":16726,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":17015,"byte_end":17024,"line_start":100,"line_end":100,"column_start":12,"column_end":21},"name":"from_size","qualname":"<Box2D<T, U>>::from_size","value":"fn (size: Size2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Box2D of the given size, at offset zero.\n","sig":null,"attributes":[{"value":"/ Creates a Box2D of the given size, at offset zero.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":16935,"byte_end":16989,"line_start":98,"line_end":98,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":16994,"byte_end":17003,"line_start":99,"line_end":99,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":17501,"byte_end":17512,"line_start":116,"line_end":116,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<Box2D<T, U>>::is_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the box has a negative area.","sig":null,"attributes":[{"value":"/ Returns true if the box has a negative area.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":17246,"byte_end":17294,"line_start":111,"line_end":111,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":17299,"byte_end":17302,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ The common interpretation for a negative box is to consider it empty. It can be obtained","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":17307,"byte_end":17399,"line_start":113,"line_end":113,"column_start":5,"column_end":97}},{"value":"/ by calculating the intersection of two boxes that do not intersect.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":17404,"byte_end":17475,"line_start":114,"line_end":114,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":17480,"byte_end":17489,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":17675,"byte_end":17695,"line_start":122,"line_end":122,"column_start":12,"column_end":32},"name":"is_empty_or_negative","qualname":"<Box2D<T, U>>::is_empty_or_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the size is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns true if the size is zero or negative.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":17600,"byte_end":17649,"line_start":120,"line_end":120,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":17654,"byte_end":17663,"line_start":121,"line_end":121,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":17857,"byte_end":17867,"line_start":128,"line_end":128,"column_start":12,"column_end":22},"name":"intersects","qualname":"<Box2D<T, U>>::intersects","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the two boxes intersect.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the two boxes intersect.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":17785,"byte_end":17831,"line_start":126,"line_end":126,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":17836,"byte_end":17845,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":18293,"byte_end":18301,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"contains","qualname":"<Box2D<T, U>>::contains","value":"fn (&self, p: Point2D<T, U>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this box contains the point. Points are considered\n in the box if they are on the front, left or top faces, but outside if they\n are on the back, right or bottom faces.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this box contains the point. Points are considered","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":18063,"byte_end":18135,"line_start":135,"line_end":135,"column_start":5,"column_end":77}},{"value":"/ in the box if they are on the front, left or top faces, but outside if they","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":18140,"byte_end":18219,"line_start":136,"line_end":136,"column_start":5,"column_end":84}},{"value":"/ are on the back, right or bottom faces.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":18224,"byte_end":18267,"line_start":137,"line_end":137,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":18272,"byte_end":18281,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":227},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":18671,"byte_end":18683,"line_start":148,"line_end":148,"column_start":12,"column_end":24},"name":"contains_box","qualname":"<Box2D<T, U>>::contains_box","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this box contains the interior of the other box. Always\n returns `true` if other is empty, and always returns `false` if other is\n nonempty but this box is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this box contains the interior of the other box. Always","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":18447,"byte_end":18524,"line_start":144,"line_end":144,"column_start":5,"column_end":82}},{"value":"/ returns `true` if other is empty, and always returns `false` if other is","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":18529,"byte_end":18605,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ nonempty but this box is empty.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":18610,"byte_end":18645,"line_start":146,"line_end":146,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":18650,"byte_end":18659,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":18989,"byte_end":19001,"line_start":160,"line_end":160,"column_start":12,"column_end":24},"name":"to_non_empty","qualname":"<Box2D<T, U>>::to_non_empty","value":"fn (&self) -> Option<NonEmpty<Self>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":18968,"byte_end":18977,"line_start":159,"line_end":159,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":19299,"byte_end":19311,"line_start":171,"line_end":171,"column_start":12,"column_end":24},"name":"intersection","qualname":"<Box2D<T, U>>::intersection","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersection of two boxes.","sig":null,"attributes":[{"value":"/ Computes the intersection of two boxes.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":19154,"byte_end":19197,"line_start":167,"line_end":167,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":19202,"byte_end":19205,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ The result is a negative box if the boxes do not intersect.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":19210,"byte_end":19273,"line_start":169,"line_end":169,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":19278,"byte_end":19287,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":19760,"byte_end":19776,"line_start":186,"line_end":186,"column_start":12,"column_end":28},"name":"try_intersection","qualname":"<Box2D<T, U>>::try_intersection","value":"fn (&self, other: &Self) -> Option<NonEmpty<Self>>","parent":null,"children":[],"decl_id":null,"docs":" Computes the intersection of two boxes, returning `None` if the boxes do not intersect.\n","sig":null,"attributes":[{"value":"/ Computes the intersection of two boxes, returning `None` if the boxes do not intersect.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":19643,"byte_end":19734,"line_start":184,"line_end":184,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":19739,"byte_end":19748,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20146,"byte_end":20155,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"translate","qualname":"<Box2D<T, U>>::translate","value":"fn (&self, by: Vector2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the same box, translated by a vector.\n","sig":null,"attributes":[{"value":"/ Returns the same box, translated by a vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20071,"byte_end":20120,"line_start":201,"line_end":201,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20125,"byte_end":20134,"line_start":202,"line_end":202,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":241},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20382,"byte_end":20386,"line_start":216,"line_end":216,"column_start":12,"column_end":16},"name":"size","qualname":"<Box2D<T, U>>::size","value":"fn (&self) -> Size2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20361,"byte_end":20370,"line_start":215,"line_end":215,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":242},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20483,"byte_end":20488,"line_start":221,"line_end":221,"column_start":12,"column_end":17},"name":"width","qualname":"<Box2D<T, U>>::width","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20462,"byte_end":20471,"line_start":220,"line_end":220,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20567,"byte_end":20573,"line_start":226,"line_end":226,"column_start":12,"column_end":18},"name":"height","qualname":"<Box2D<T, U>>::height","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20546,"byte_end":20555,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":244},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20652,"byte_end":20659,"line_start":231,"line_end":231,"column_start":12,"column_end":19},"name":"to_rect","qualname":"<Box2D<T, U>>::to_rect","value":"fn (&self) -> Rect<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20631,"byte_end":20640,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20992,"byte_end":20999,"line_start":246,"line_end":246,"column_start":12,"column_end":19},"name":"inflate","qualname":"<Box2D<T, U>>::inflate","value":"fn (&self, width: T, height: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inflates the box by the specified sizes on each side respectively.\n","sig":null,"attributes":[{"value":"/ Inflates the box by the specified sizes on each side respectively.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20880,"byte_end":20950,"line_start":243,"line_end":243,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20955,"byte_end":20964,"line_start":244,"line_end":244,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20969,"byte_end":20980,"line_start":245,"line_end":245,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":252},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":21543,"byte_end":21552,"line_start":262,"line_end":262,"column_start":12,"column_end":21},"name":"inner_box","qualname":"<Box2D<T, U>>::inner_box","value":"fn (&self, offsets: SideOffsets2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculate the size and position of an inner box.","sig":null,"attributes":[{"value":"/ Calculate the size and position of an inner box.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":21315,"byte_end":21367,"line_start":258,"line_end":258,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":21372,"byte_end":21375,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ Subtracts the side offsets from all sides. The horizontal, vertical","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":21380,"byte_end":21451,"line_start":260,"line_end":260,"column_start":5,"column_end":76}},{"value":"/ and applicate offsets must not be larger than the original side length.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":21456,"byte_end":21531,"line_start":261,"line_end":261,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":21900,"byte_end":21909,"line_start":272,"line_end":272,"column_start":12,"column_end":21},"name":"outer_box","qualname":"<Box2D<T, U>>::outer_box","value":"fn (&self, offsets: SideOffsets2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculate the b and position of an outer box.","sig":null,"attributes":[{"value":"/ Calculate the b and position of an outer box.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":21763,"byte_end":21812,"line_start":269,"line_end":269,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":21817,"byte_end":21820,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ Add the offsets to all sides. The expanded box is returned.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":21825,"byte_end":21888,"line_start":271,"line_end":271,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":22266,"byte_end":22277,"line_start":286,"line_end":286,"column_start":12,"column_end":23},"name":"from_points","qualname":"<Box2D<T, U>>::from_points","value":"fn <I> (points: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest box containing all of the provided points.\n","sig":null,"attributes":[{"value":"/ Returns the smallest box containing all of the provided points.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":22187,"byte_end":22254,"line_start":285,"line_end":285,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":23324,"byte_end":23328,"line_start":328,"line_end":328,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Box2D<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this box and another box.\n","sig":null,"attributes":[{"value":"/ Linearly interpolate between this box and another box.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":23240,"byte_end":23298,"line_start":326,"line_end":326,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":23303,"byte_end":23312,"line_start":327,"line_end":327,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":23582,"byte_end":23588,"line_start":340,"line_end":340,"column_start":12,"column_end":18},"name":"center","qualname":"<Box2D<T, U>>::center","value":"fn (&self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":23793,"byte_end":23798,"line_start":351,"line_end":351,"column_start":12,"column_end":17},"name":"union","qualname":"<Box2D<T, U>>::union","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":23772,"byte_end":23781,"line_start":350,"line_end":350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":274},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":24198,"byte_end":24203,"line_start":370,"line_end":370,"column_start":12,"column_end":17},"name":"scale","qualname":"<Box2D<T, U>>::scale","value":"fn <S> (&self, x: S, y: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":24177,"byte_end":24186,"line_start":369,"line_end":369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":279},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":24546,"byte_end":24550,"line_start":386,"line_end":386,"column_start":12,"column_end":16},"name":"area","qualname":"<Box2D<T, U>>::area","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":24525,"byte_end":24534,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":24742,"byte_end":24746,"line_start":397,"line_end":397,"column_start":12,"column_end":16},"name":"zero","qualname":"<Box2D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all sides to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all sides to zero.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":24687,"byte_end":24730,"line_start":396,"line_end":396,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":24937,"byte_end":24945,"line_start":408,"line_end":408,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Box2D<T, U>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the size is zero.\n","sig":null,"attributes":[{"value":"/ Returns true if the size is zero.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":24874,"byte_end":24911,"line_start":406,"line_end":406,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":24916,"byte_end":24925,"line_start":407,"line_end":407,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":313},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26125,"byte_end":26135,"line_start":463,"line_end":463,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Box2D<T, U>>::to_untyped","value":"fn (&self) -> Box2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26045,"byte_end":26099,"line_start":461,"line_end":461,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26104,"byte_end":26113,"line_start":462,"line_end":462,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26308,"byte_end":26320,"line_start":469,"line_end":469,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Box2D<T, U>>::from_untyped","value":"fn (c: &Box2D<T, UnknownUnit>) -> Box2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26246,"byte_end":26282,"line_start":467,"line_end":467,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26287,"byte_end":26296,"line_start":468,"line_end":468,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":315},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26533,"byte_end":26542,"line_start":478,"line_end":478,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Box2D<T, U>>::cast_unit","value":"fn <V> (&self) -> Box2D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26490,"byte_end":26507,"line_start":476,"line_end":476,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26512,"byte_end":26521,"line_start":477,"line_end":477,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":320},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":27080,"byte_end":27084,"line_start":493,"line_end":493,"column_start":12,"column_end":16},"name":"cast","qualname":"<Box2D<T, U>>::cast","value":"fn <NewT> (&self) -> Box2D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26700,"byte_end":26774,"line_start":487,"line_end":487,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26779,"byte_end":26782,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26787,"byte_end":26874,"line_start":489,"line_end":489,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26879,"byte_end":26967,"line_start":490,"line_end":490,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26972,"byte_end":27054,"line_start":491,"line_end":491,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":27059,"byte_end":27068,"line_start":492,"line_end":492,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":27601,"byte_end":27609,"line_start":505,"line_end":505,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Box2D<T, U>>::try_cast","value":"fn <NewT> (&self) -> Option<Box2D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":27226,"byte_end":27309,"line_start":500,"line_end":500,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":27314,"byte_end":27317,"line_start":501,"line_end":501,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":27322,"byte_end":27409,"line_start":502,"line_end":502,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":27414,"byte_end":27502,"line_start":503,"line_end":503,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":27507,"byte_end":27589,"line_start":504,"line_end":504,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":327},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28412,"byte_end":28417,"line_start":527,"line_end":527,"column_start":12,"column_end":17},"name":"round","qualname":"<Box2D<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box with edges rounded to integer coordinates, such that\n the returned box has the same set of pixel centers as the original\n one.\n Values equal to 0.5 round up.\n Suitable for most places where integral device coordinates\n are needed, but note that any translation should be applied first to\n avoid pixel rounding errors.\n Note that this is *not* rounding to nearest integer if the values are negative.\n They are always rounding as floor(n + 0.5).\n","sig":null,"attributes":[{"value":"/ Return a box with edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":27868,"byte_end":27937,"line_start":517,"line_end":517,"column_start":5,"column_end":74}},{"value":"/ the returned box has the same set of pixel centers as the original","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":27942,"byte_end":28012,"line_start":518,"line_end":518,"column_start":5,"column_end":75}},{"value":"/ one.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28017,"byte_end":28025,"line_start":519,"line_end":519,"column_start":5,"column_end":13}},{"value":"/ Values equal to 0.5 round up.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28030,"byte_end":28063,"line_start":520,"line_end":520,"column_start":5,"column_end":38}},{"value":"/ Suitable for most places where integral device coordinates","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28068,"byte_end":28130,"line_start":521,"line_end":521,"column_start":5,"column_end":67}},{"value":"/ are needed, but note that any translation should be applied first to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28135,"byte_end":28207,"line_start":522,"line_end":522,"column_start":5,"column_end":77}},{"value":"/ avoid pixel rounding errors.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28212,"byte_end":28244,"line_start":523,"line_end":523,"column_start":5,"column_end":37}},{"value":"/ Note that this is *not* rounding to nearest integer if the values are negative.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28249,"byte_end":28332,"line_start":524,"line_end":524,"column_start":5,"column_end":88}},{"value":"/ They are always rounding as floor(n + 0.5).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28337,"byte_end":28384,"line_start":525,"line_end":525,"column_start":5,"column_end":52}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28389,"byte_end":28400,"line_start":526,"line_end":526,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":331},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28711,"byte_end":28719,"line_start":539,"line_end":539,"column_start":12,"column_end":20},"name":"round_in","qualname":"<Box2D<T, U>>::round_in","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box with faces/edges rounded to integer coordinates, such that\n the original box contains the resulting box.\n","sig":null,"attributes":[{"value":"/ Return a box with faces/edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28555,"byte_end":28630,"line_start":536,"line_end":536,"column_start":5,"column_end":80}},{"value":"/ the original box contains the resulting box.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28635,"byte_end":28683,"line_start":537,"line_end":537,"column_start":5,"column_end":53}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28688,"byte_end":28699,"line_start":538,"line_end":538,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":332},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29009,"byte_end":29018,"line_start":548,"line_end":548,"column_start":12,"column_end":21},"name":"round_out","qualname":"<Box2D<T, U>>::round_out","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box with faces/edges rounded to integer coordinates, such that\n the original box is contained in the resulting box.\n","sig":null,"attributes":[{"value":"/ Return a box with faces/edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28846,"byte_end":28921,"line_start":545,"line_end":545,"column_start":5,"column_end":80}},{"value":"/ the original box is contained in the resulting box.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28926,"byte_end":28981,"line_start":546,"line_end":546,"column_start":5,"column_end":60}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28986,"byte_end":28997,"line_start":547,"line_end":547,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":336},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29283,"byte_end":29289,"line_start":559,"line_end":559,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Box2D<T, U>>::to_f32","value":"fn (&self) -> Box2D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` box.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` box.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29230,"byte_end":29257,"line_start":557,"line_end":557,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29262,"byte_end":29271,"line_start":558,"line_end":558,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":337},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29400,"byte_end":29406,"line_start":565,"line_end":565,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Box2D<T, U>>::to_f64","value":"fn (&self) -> Box2D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` box.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` box.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29347,"byte_end":29374,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29379,"byte_end":29388,"line_start":564,"line_end":564,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":338},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29763,"byte_end":29771,"line_start":575,"line_end":575,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Box2D<T, U>>::to_usize","value":"fn (&self) -> Box2D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` box, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` box, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29464,"byte_end":29521,"line_start":569,"line_end":569,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29526,"byte_end":29529,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point boxes, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29534,"byte_end":29609,"line_start":571,"line_end":571,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29614,"byte_end":29689,"line_start":572,"line_end":572,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29694,"byte_end":29737,"line_start":573,"line_end":573,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29742,"byte_end":29751,"line_start":574,"line_end":574,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":339},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30128,"byte_end":30134,"line_start":585,"line_end":585,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Box2D<T, U>>::to_u32","value":"fn (&self) -> Box2D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` box, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` box, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29831,"byte_end":29886,"line_start":579,"line_end":579,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29891,"byte_end":29894,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point boxes, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29899,"byte_end":29974,"line_start":581,"line_end":581,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29979,"byte_end":30054,"line_start":582,"line_end":582,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30059,"byte_end":30102,"line_start":583,"line_end":583,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30107,"byte_end":30116,"line_start":584,"line_end":584,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30489,"byte_end":30495,"line_start":595,"line_end":595,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Box2D<T, U>>::to_i32","value":"fn (&self) -> Box2D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` box, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` box, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30192,"byte_end":30247,"line_start":589,"line_end":589,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30252,"byte_end":30255,"line_start":590,"line_end":590,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point boxes, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30260,"byte_end":30335,"line_start":591,"line_end":591,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30340,"byte_end":30415,"line_start":592,"line_end":592,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30420,"byte_end":30463,"line_start":593,"line_end":593,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30468,"byte_end":30477,"line_start":594,"line_end":594,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":341},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30850,"byte_end":30856,"line_start":605,"line_end":605,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Box2D<T, U>>::to_i64","value":"fn (&self) -> Box2D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` box, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` box, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30553,"byte_end":30608,"line_start":599,"line_end":599,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30613,"byte_end":30616,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point boxes, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30621,"byte_end":30696,"line_start":601,"line_end":601,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30701,"byte_end":30776,"line_start":602,"line_end":602,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30781,"byte_end":30824,"line_start":603,"line_end":603,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30829,"byte_end":30838,"line_start":604,"line_end":604,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":364},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":38388,"byte_end":38405,"line_start":26,"line_end":26,"column_start":12,"column_end":29},"name":"HomogeneousVector","qualname":"::homogen::HomogeneousVector","value":"HomogeneousVector { x, y, z, w, _unit }","parent":null,"children":[{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"decl_id":null,"docs":" Homogeneous vector in 3D space.\n","sig":null,"attributes":[{"value":"/ Homogeneous vector in 3D space.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":38330,"byte_end":38365,"line_start":24,"line_end":24,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":38366,"byte_end":38376,"line_start":25,"line_end":25,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":367},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":38422,"byte_end":38423,"line_start":27,"line_end":27,"column_start":9,"column_end":10},"name":"x","qualname":"::homogen::HomogeneousVector::x","value":"T","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":38436,"byte_end":38437,"line_start":28,"line_end":28,"column_start":9,"column_end":10},"name":"y","qualname":"::homogen::HomogeneousVector::y","value":"T","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":38450,"byte_end":38451,"line_start":29,"line_end":29,"column_start":9,"column_end":10},"name":"z","qualname":"::homogen::HomogeneousVector::z","value":"T","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":38464,"byte_end":38465,"line_start":30,"line_end":30,"column_start":9,"column_end":10},"name":"w","qualname":"::homogen::HomogeneousVector::w","value":"T","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":371},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":38497,"byte_end":38502,"line_start":32,"line_end":32,"column_start":9,"column_end":14},"name":"_unit","qualname":"::homogen::HomogeneousVector::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":364},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":40175,"byte_end":40178,"line_start":96,"line_end":96,"column_start":18,"column_end":21},"name":"new","qualname":"<HomogeneousVector<T, U>>::new","value":"fn (x: T, y: T, z: T, w: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values directly.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":40097,"byte_end":40143,"line_start":94,"line_end":94,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":40148,"byte_end":40157,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":40510,"byte_end":40520,"line_start":107,"line_end":107,"column_start":12,"column_end":22},"name":"to_point2d","qualname":"<HomogeneousVector<T, U>>::to_point2d","value":"fn (&self) -> Option<Point2D<T, U>>","parent":null,"children":[],"decl_id":null,"docs":" Convert into Cartesian 2D point.","sig":null,"attributes":[{"value":"/ Convert into Cartesian 2D point.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":40370,"byte_end":40406,"line_start":103,"line_end":103,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":40411,"byte_end":40414,"line_start":104,"line_end":104,"column_start":5,"column_end":8}},{"value":"/ Returns None if the point is on or behind the W=0 hemisphere.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":40419,"byte_end":40484,"line_start":105,"line_end":105,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":40489,"byte_end":40498,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":40847,"byte_end":40857,"line_start":119,"line_end":119,"column_start":12,"column_end":22},"name":"to_point3d","qualname":"<HomogeneousVector<T, U>>::to_point3d","value":"fn (&self) -> Option<Point3D<T, U>>","parent":null,"children":[],"decl_id":null,"docs":" Convert into Cartesian 3D point.","sig":null,"attributes":[{"value":"/ Convert into Cartesian 3D point.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":40707,"byte_end":40743,"line_start":115,"line_end":115,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":40748,"byte_end":40751,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Returns None if the point is on or behind the W=0 hemisphere.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":40756,"byte_end":40821,"line_start":117,"line_end":117,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":40826,"byte_end":40835,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":424},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"num","qualname":"::num","value":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":433},{"krate":0,"index":436},{"krate":0,"index":438},{"krate":0,"index":440},{"krate":0,"index":442},{"krate":0,"index":443},{"krate":0,"index":3603},{"krate":0,"index":3605},{"krate":0,"index":3607},{"krate":0,"index":3609},{"krate":0,"index":3611},{"krate":0,"index":3613},{"krate":0,"index":3615},{"krate":0,"index":3617},{"krate":0,"index":3619},{"krate":0,"index":3621},{"krate":0,"index":3623},{"krate":0,"index":3625},{"krate":0,"index":3627},{"krate":0,"index":3629},{"krate":0,"index":3631},{"krate":0,"index":3633},{"krate":0,"index":3635},{"krate":0,"index":3637},{"krate":0,"index":3639},{"krate":0,"index":3641},{"krate":0,"index":3643},{"krate":0,"index":3645},{"krate":0,"index":3647},{"krate":0,"index":3649},{"krate":0,"index":3651},{"krate":0,"index":3653},{"krate":0,"index":3655},{"krate":0,"index":3657},{"krate":0,"index":3659},{"krate":0,"index":3661}],"decl_id":null,"docs":" A one-dimensional length, tagged with its units.\n","sig":null,"attributes":[{"value":"! A one-dimensional length, tagged with its units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":43575,"byte_end":43627,"line_start":9,"line_end":9,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":426},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":43656,"byte_end":43660,"line_start":13,"line_end":13,"column_start":11,"column_end":15},"name":"Zero","qualname":"::num::Zero","value":"Zero","parent":null,"children":[{"krate":0,"index":427}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":427},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":43670,"byte_end":43674,"line_start":14,"line_end":14,"column_start":8,"column_end":12},"name":"zero","qualname":"::num::Zero::zero","value":"fn () -> Self","parent":{"krate":0,"index":426},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":431},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":43801,"byte_end":43804,"line_start":23,"line_end":23,"column_start":11,"column_end":14},"name":"One","qualname":"::num::One","value":"One","parent":null,"children":[{"krate":0,"index":432}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":43814,"byte_end":43817,"line_start":24,"line_end":24,"column_start":8,"column_end":11},"name":"one","qualname":"::num::One::one","value":"fn () -> Self","parent":{"krate":0,"index":431},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":436},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44000,"byte_end":44005,"line_start":34,"line_end":34,"column_start":11,"column_end":16},"name":"Round","qualname":"::num::Round","value":"Round: Copy","parent":null,"children":[{"krate":0,"index":437}],"decl_id":null,"docs":" Defines the nearest integer value to the original value.\n","sig":null,"attributes":[{"value":"/ Defines the nearest integer value to the original value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":43929,"byte_end":43989,"line_start":33,"line_end":33,"column_start":1,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44170,"byte_end":44175,"line_start":39,"line_end":39,"column_start":8,"column_end":13},"name":"round","qualname":"::num::Round::round","value":"fn (self) -> Self","parent":{"krate":0,"index":436},"children":[],"decl_id":null,"docs":" Rounds to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds to the nearest integer value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44018,"byte_end":44058,"line_start":35,"line_end":35,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44063,"byte_end":44066,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44071,"byte_end":44146,"line_start":37,"line_end":37,"column_start":5,"column_end":80}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44151,"byte_end":44162,"line_start":38,"line_end":38,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44275,"byte_end":44280,"line_start":42,"line_end":42,"column_start":11,"column_end":16},"name":"Floor","qualname":"::num::Floor","value":"Floor: Copy","parent":null,"children":[{"krate":0,"index":439}],"decl_id":null,"docs":" Defines the biggest integer equal or lower than the original value.\n","sig":null,"attributes":[{"value":"/ Defines the biggest integer equal or lower than the original value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44193,"byte_end":44264,"line_start":41,"line_end":41,"column_start":1,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44478,"byte_end":44483,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"floor","qualname":"::num::Floor::floor","value":"fn (self) -> Self","parent":{"krate":0,"index":438},"children":[],"decl_id":null,"docs":" Rounds to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds to the biggest integer equal or lower than the original value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44293,"byte_end":44366,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44371,"byte_end":44374,"line_start":44,"line_end":44,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44379,"byte_end":44454,"line_start":45,"line_end":45,"column_start":5,"column_end":80}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44459,"byte_end":44470,"line_start":46,"line_end":46,"column_start":5,"column_end":16}}]},{"kind":"Trait","id":{"krate":0,"index":440},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44586,"byte_end":44590,"line_start":50,"line_end":50,"column_start":11,"column_end":15},"name":"Ceil","qualname":"::num::Ceil","value":"Ceil: Copy","parent":null,"children":[{"krate":0,"index":441}],"decl_id":null,"docs":" Defines the smallest integer equal or greater than the original value.\n","sig":null,"attributes":[{"value":"/ Defines the smallest integer equal or greater than the original value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44501,"byte_end":44575,"line_start":49,"line_end":49,"column_start":1,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44791,"byte_end":44795,"line_start":55,"line_end":55,"column_start":8,"column_end":12},"name":"ceil","qualname":"::num::Ceil::ceil","value":"fn (self) -> Self","parent":{"krate":0,"index":440},"children":[],"decl_id":null,"docs":" Rounds to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds to the smallest integer equal or greater than the original value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44603,"byte_end":44679,"line_start":51,"line_end":51,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44684,"byte_end":44687,"line_start":52,"line_end":52,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44692,"byte_end":44767,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44772,"byte_end":44783,"line_start":54,"line_end":54,"column_start":5,"column_end":16}}]},{"kind":"Struct","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":47516,"byte_end":47522,"line_start":40,"line_end":40,"column_start":12,"column_end":18},"name":"Length","qualname":"::length::Length","value":"","parent":null,"children":[],"decl_id":null,"docs":" A one-dimensional distance, with value represented by `T` and unit of measurement `Unit`.","sig":null,"attributes":[{"value":"/ A one-dimensional distance, with value represented by `T` and unit of measurement `Unit`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":46828,"byte_end":46921,"line_start":26,"line_end":26,"column_start":1,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":46922,"byte_end":46925,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `T` can be any numeric type, for example a primitive type like `u64` or `f32`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":46926,"byte_end":47008,"line_start":28,"line_end":28,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":47009,"byte_end":47012,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ `Unit` is not used in the representation of a `Length` value. It is used only at compile time","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":47013,"byte_end":47110,"line_start":30,"line_end":30,"column_start":1,"column_end":98}},{"value":"/ to ensure that a `Length` stored with one unit is converted explicitly before being used in an","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":47111,"byte_end":47209,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ expression that requires a different unit.  It may be a type without values, such as an empty","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":47210,"byte_end":47307,"line_start":32,"line_end":32,"column_start":1,"column_end":98}},{"value":"/ enum.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":47308,"byte_end":47317,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":47318,"byte_end":47321,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ You can multiply a `Length` by a `scale::Scale` to convert it from one unit to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":47322,"byte_end":47404,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/ another. See the [`Scale`] docs for an example.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":47405,"byte_end":47456,"line_start":36,"line_end":36,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":47457,"byte_end":47460,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ [`Scale`]: struct.Scale.html","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":47461,"byte_end":47493,"line_start":38,"line_end":38,"column_start":1,"column_end":33}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":47494,"byte_end":47504,"line_start":39,"line_end":39,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":485},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48436,"byte_end":48439,"line_start":82,"line_end":82,"column_start":18,"column_end":21},"name":"new","qualname":"<Length<T, U>>::new","value":"fn (x: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Associate a value with a unit of measure.\n","sig":null,"attributes":[{"value":"/ Associate a value with a unit of measure.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48359,"byte_end":48404,"line_start":80,"line_end":80,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48409,"byte_end":48418,"line_start":81,"line_end":81,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48606,"byte_end":48609,"line_start":89,"line_end":89,"column_start":12,"column_end":15},"name":"get","qualname":"<Length<T, U>>::get","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unpack the underlying value from the wrapper, cloning it.\n","sig":null,"attributes":[{"value":"/ Unpack the underlying value from the wrapper, cloning it.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48533,"byte_end":48594,"line_start":88,"line_end":88,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48701,"byte_end":48710,"line_start":95,"line_end":95,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Length<T, U>>::cast_unit","value":"fn <V> (&self) -> Length<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48658,"byte_end":48675,"line_start":93,"line_end":93,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48680,"byte_end":48689,"line_start":94,"line_end":94,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":49363,"byte_end":49367,"line_start":116,"line_end":116,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Length<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this length and another length.","sig":null,"attributes":[{"value":"/ Linearly interpolate between this length and another length.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48786,"byte_end":48850,"line_start":99,"line_end":99,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48855,"byte_end":48858,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48863,"byte_end":48876,"line_start":101,"line_end":101,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48881,"byte_end":48884,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48889,"byte_end":48900,"line_start":103,"line_end":103,"column_start":5,"column_end":16}},{"value":"/ use euclid::default::Length;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48905,"byte_end":48937,"line_start":104,"line_end":104,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48942,"byte_end":48945,"line_start":105,"line_end":105,"column_start":5,"column_end":8}},{"value":"/ let from = Length::new(0.0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48950,"byte_end":48982,"line_start":106,"line_end":106,"column_start":5,"column_end":37}},{"value":"/ let to = Length::new(8.0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48987,"byte_end":49017,"line_start":107,"line_end":107,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":49022,"byte_end":49025,"line_start":108,"line_end":108,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), Length::new(-8.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":49030,"byte_end":49085,"line_start":109,"line_end":109,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  0.0), Length::new( 0.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":49090,"byte_end":49145,"line_start":110,"line_end":110,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  0.5), Length::new( 4.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":49150,"byte_end":49205,"line_start":111,"line_end":111,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  1.0), Length::new( 8.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":49210,"byte_end":49265,"line_start":112,"line_end":112,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  2.0), Length::new(16.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":49270,"byte_end":49325,"line_start":113,"line_end":113,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":49330,"byte_end":49337,"line_start":114,"line_end":114,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":49342,"byte_end":49351,"line_start":115,"line_end":115,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":496},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":49744,"byte_end":49748,"line_start":128,"line_end":128,"column_start":12,"column_end":16},"name":"cast","qualname":"<Length<T, U>>::cast","value":"fn <NewT> (&self) -> Length<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":49644,"byte_end":49718,"line_start":126,"line_end":126,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":49723,"byte_end":49732,"line_start":127,"line_end":127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":49931,"byte_end":49939,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Length<T, U>>::try_cast","value":"fn <NewT> (&self) -> Option<Length<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":49836,"byte_end":49919,"line_start":132,"line_end":132,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":640},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":62146,"byte_end":62153,"line_start":31,"line_end":31,"column_start":12,"column_end":19},"name":"Point2D","qualname":"::point::Point2D","value":"Point2D { x, y, _unit }","parent":null,"children":[{"krate":0,"index":643},{"krate":0,"index":644},{"krate":0,"index":645}],"decl_id":null,"docs":" A 2d Point tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 2d Point tagged with a unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":62089,"byte_end":62123,"line_start":29,"line_end":29,"column_start":1,"column_end":35}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":62124,"byte_end":62134,"line_start":30,"line_end":30,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":643},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":62170,"byte_end":62171,"line_start":32,"line_end":32,"column_start":9,"column_end":10},"name":"x","qualname":"::point::Point2D::x","value":"T","parent":{"krate":0,"index":640},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":644},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":62184,"byte_end":62185,"line_start":33,"line_end":33,"column_start":9,"column_end":10},"name":"y","qualname":"::point::Point2D::y","value":"T","parent":{"krate":0,"index":640},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":645},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":62217,"byte_end":62222,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"_unit","qualname":"::point::Point2D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":640},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":680},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":64344,"byte_end":64350,"line_start":123,"line_end":123,"column_start":12,"column_end":18},"name":"origin","qualname":"<Point2D<T, U>>::origin","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all components to zero.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":64270,"byte_end":64318,"line_start":121,"line_end":121,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":64323,"byte_end":64332,"line_start":122,"line_end":122,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":681},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":64519,"byte_end":64523,"line_start":132,"line_end":132,"column_start":12,"column_end":16},"name":"zero","qualname":"<Point2D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The same as [`origin()`](#method.origin).\n","sig":null,"attributes":[{"value":"/ The same as [`origin()`](#method.origin).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":64448,"byte_end":64493,"line_start":130,"line_end":130,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":64498,"byte_end":64507,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":682},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":64679,"byte_end":64682,"line_start":141,"line_end":141,"column_start":18,"column_end":21},"name":"new","qualname":"<Point2D<T, U>>::new","value":"fn (x: T, y: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values directly.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":64601,"byte_end":64647,"line_start":139,"line_end":139,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":64652,"byte_end":64661,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":683},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":64897,"byte_end":64909,"line_start":151,"line_end":151,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Point2D<T, U>>::from_lengths","value":"fn (x: Length<T, U>, y: Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking properly Lengths instead of scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking properly Lengths instead of scalar values.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":64806,"byte_end":64871,"line_start":149,"line_end":149,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":64876,"byte_end":64885,"line_start":150,"line_end":150,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65052,"byte_end":65064,"line_start":157,"line_end":157,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Point2D<T, U>>::from_untyped","value":"fn (p: Point2D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":64990,"byte_end":65026,"line_start":155,"line_end":155,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65031,"byte_end":65040,"line_start":156,"line_end":156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65265,"byte_end":65271,"line_start":165,"line_end":165,"column_start":12,"column_end":18},"name":"extend","qualname":"<Point2D<T, U>>::extend","value":"fn (&self, z: T) -> Point3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d point from this one, using the specified z value.\n","sig":null,"attributes":[{"value":"/ Create a 3d point from this one, using the specified z value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65174,"byte_end":65239,"line_start":163,"line_end":163,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65244,"byte_end":65253,"line_start":164,"line_end":164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65479,"byte_end":65488,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Point2D<T, U>>::to_vector","value":"fn (&self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this point into a vector.","sig":null,"attributes":[{"value":"/ Cast this point into a vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65349,"byte_end":65383,"line_start":169,"line_end":169,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65388,"byte_end":65391,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ Equivalent to subtracting the origin from this point.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65396,"byte_end":65453,"line_start":171,"line_end":171,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65458,"byte_end":65467,"line_start":172,"line_end":172,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65913,"byte_end":65915,"line_start":194,"line_end":194,"column_start":12,"column_end":14},"name":"yx","qualname":"<Point2D<T, U>>::yx","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Swap x and y.","sig":null,"attributes":[{"value":"/ Swap x and y.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65634,"byte_end":65651,"line_start":181,"line_end":181,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65656,"byte_end":65659,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65664,"byte_end":65677,"line_start":183,"line_end":183,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65682,"byte_end":65685,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65690,"byte_end":65701,"line_start":185,"line_end":185,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point2D, point2};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65706,"byte_end":65742,"line_start":186,"line_end":186,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65747,"byte_end":65761,"line_start":187,"line_end":187,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65766,"byte_end":65769,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ let point: Point2D<_, Mm> = point2(1, -8);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65774,"byte_end":65820,"line_start":189,"line_end":189,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65825,"byte_end":65828,"line_start":190,"line_end":190,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.yx(), point2(-8, 1));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65833,"byte_end":65875,"line_start":191,"line_end":191,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65880,"byte_end":65887,"line_start":192,"line_end":192,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65892,"byte_end":65901,"line_start":193,"line_end":193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66346,"byte_end":66356,"line_start":212,"line_end":212,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Point2D<T, U>>::to_untyped","value":"fn (&self) -> Point2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65975,"byte_end":66029,"line_start":198,"line_end":198,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66034,"byte_end":66037,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66042,"byte_end":66055,"line_start":200,"line_end":200,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66060,"byte_end":66063,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66068,"byte_end":66079,"line_start":202,"line_end":202,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point2D, point2};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66084,"byte_end":66120,"line_start":203,"line_end":203,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66125,"byte_end":66139,"line_start":204,"line_end":204,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66144,"byte_end":66147,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ let point: Point2D<_, Mm> = point2(1, -8);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66152,"byte_end":66198,"line_start":206,"line_end":206,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66203,"byte_end":66206,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.x, point.to_untyped().x);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66211,"byte_end":66257,"line_start":208,"line_end":208,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(point.y, point.to_untyped().y);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66262,"byte_end":66308,"line_start":209,"line_end":209,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66313,"byte_end":66320,"line_start":210,"line_end":210,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66325,"byte_end":66334,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66829,"byte_end":66838,"line_start":231,"line_end":231,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Point2D<T, U>>::cast_unit","value":"fn <V> (&self) -> Point2D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit, preserving the numeric value.","sig":null,"attributes":[{"value":"/ Cast the unit, preserving the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66435,"byte_end":66483,"line_start":216,"line_end":216,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66488,"byte_end":66491,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66496,"byte_end":66509,"line_start":218,"line_end":218,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66514,"byte_end":66517,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66522,"byte_end":66533,"line_start":220,"line_end":220,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point2D, point2};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66538,"byte_end":66574,"line_start":221,"line_end":221,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66579,"byte_end":66593,"line_start":222,"line_end":222,"column_start":5,"column_end":19}},{"value":"/ enum Cm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66598,"byte_end":66612,"line_start":223,"line_end":223,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66617,"byte_end":66620,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ let point: Point2D<_, Mm> = point2(1, -8);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66625,"byte_end":66671,"line_start":225,"line_end":225,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66676,"byte_end":66679,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.x, point.cast_unit::<Cm>().x);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66684,"byte_end":66735,"line_start":227,"line_end":227,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(point.y, point.cast_unit::<Cm>().y);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66740,"byte_end":66791,"line_start":228,"line_end":228,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66796,"byte_end":66803,"line_start":229,"line_end":229,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66808,"byte_end":66817,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":694},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67208,"byte_end":67216,"line_start":248,"line_end":248,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Point2D<T, U>>::to_array","value":"fn (&self) -> [T; 2]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x and y.","sig":null,"attributes":[{"value":"/ Cast into an array with x and y.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66910,"byte_end":66946,"line_start":235,"line_end":235,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66951,"byte_end":66954,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66959,"byte_end":66972,"line_start":237,"line_end":237,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66977,"byte_end":66980,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":66985,"byte_end":66996,"line_start":239,"line_end":239,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point2D, point2};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67001,"byte_end":67037,"line_start":240,"line_end":240,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67042,"byte_end":67056,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67061,"byte_end":67064,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ let point: Point2D<_, Mm> = point2(1, -8);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67069,"byte_end":67115,"line_start":243,"line_end":243,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67120,"byte_end":67123,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.to_array(), [1, -8]);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67128,"byte_end":67170,"line_start":245,"line_end":245,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67175,"byte_end":67182,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67187,"byte_end":67196,"line_start":247,"line_end":247,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":696},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67569,"byte_end":67577,"line_start":265,"line_end":265,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Point2D<T, U>>::to_tuple","value":"fn (&self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x and y.","sig":null,"attributes":[{"value":"/ Cast into a tuple with x and y.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67272,"byte_end":67307,"line_start":252,"line_end":252,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67312,"byte_end":67315,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67320,"byte_end":67333,"line_start":254,"line_end":254,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67338,"byte_end":67341,"line_start":255,"line_end":255,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67346,"byte_end":67357,"line_start":256,"line_end":256,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point2D, point2};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67362,"byte_end":67398,"line_start":257,"line_end":257,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67403,"byte_end":67417,"line_start":258,"line_end":258,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67422,"byte_end":67425,"line_start":259,"line_end":259,"column_start":5,"column_end":8}},{"value":"/ let point: Point2D<_, Mm> = point2(1, -8);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67430,"byte_end":67476,"line_start":260,"line_end":260,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67481,"byte_end":67484,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.to_tuple(), (1, -8));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67489,"byte_end":67531,"line_start":262,"line_end":262,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67536,"byte_end":67543,"line_start":263,"line_end":263,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67548,"byte_end":67557,"line_start":264,"line_end":264,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67720,"byte_end":67725,"line_start":271,"line_end":271,"column_start":12,"column_end":17},"name":"to_3d","qualname":"<Point2D<T, U>>::to_3d","value":"fn (&self) -> Point3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 3d point with z-coordinate equals to zero.\n","sig":null,"attributes":[{"value":"/ Convert into a 3d point with z-coordinate equals to zero.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67633,"byte_end":67694,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67699,"byte_end":67708,"line_start":270,"line_end":270,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":698},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68201,"byte_end":68206,"line_start":290,"line_end":290,"column_start":12,"column_end":17},"name":"round","qualname":"<Point2D<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67839,"byte_end":67894,"line_start":278,"line_end":278,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67899,"byte_end":67902,"line_start":279,"line_end":279,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67907,"byte_end":67982,"line_start":280,"line_end":280,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67987,"byte_end":67990,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":67995,"byte_end":68006,"line_start":282,"line_end":282,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point2;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68011,"byte_end":68036,"line_start":283,"line_end":283,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68041,"byte_end":68055,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68060,"byte_end":68063,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point2::<_, Mm>(-0.1, -0.8).round(), point2::<_, Mm>(0.0, -1.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68068,"byte_end":68147,"line_start":286,"line_end":286,"column_start":5,"column_end":84}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68152,"byte_end":68159,"line_start":287,"line_end":287,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68164,"byte_end":68173,"line_start":288,"line_end":288,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68178,"byte_end":68189,"line_start":289,"line_end":289,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68710,"byte_end":68714,"line_start":309,"line_end":309,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Point2D<T, U>>::ceil","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68314,"byte_end":68405,"line_start":297,"line_end":297,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68410,"byte_end":68413,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68418,"byte_end":68493,"line_start":299,"line_end":299,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68498,"byte_end":68501,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68506,"byte_end":68517,"line_start":301,"line_end":301,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point2;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68522,"byte_end":68547,"line_start":302,"line_end":302,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68552,"byte_end":68566,"line_start":303,"line_end":303,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68571,"byte_end":68574,"line_start":304,"line_end":304,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point2::<_, Mm>(-0.1, -0.8).ceil(), point2::<_, Mm>(0.0, 0.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68579,"byte_end":68656,"line_start":305,"line_end":305,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68661,"byte_end":68668,"line_start":306,"line_end":306,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68673,"byte_end":68682,"line_start":307,"line_end":307,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68687,"byte_end":68698,"line_start":308,"line_end":308,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":700},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69215,"byte_end":69220,"line_start":328,"line_end":328,"column_start":12,"column_end":17},"name":"floor","qualname":"<Point2D<T, U>>::floor","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68819,"byte_end":68907,"line_start":316,"line_end":316,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68912,"byte_end":68915,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":68920,"byte_end":68995,"line_start":318,"line_end":318,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69000,"byte_end":69003,"line_start":319,"line_end":319,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69008,"byte_end":69019,"line_start":320,"line_end":320,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point2;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69024,"byte_end":69049,"line_start":321,"line_end":321,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69054,"byte_end":69068,"line_start":322,"line_end":322,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69073,"byte_end":69076,"line_start":323,"line_end":323,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point2::<_, Mm>(-0.1, -0.8).floor(), point2::<_, Mm>(-1.0, -1.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69081,"byte_end":69161,"line_start":324,"line_end":324,"column_start":5,"column_end":85}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69166,"byte_end":69173,"line_start":325,"line_end":325,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69178,"byte_end":69187,"line_start":326,"line_end":326,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69192,"byte_end":69203,"line_start":327,"line_end":327,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69969,"byte_end":69973,"line_start":353,"line_end":353,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Point2D<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this point and another point.","sig":null,"attributes":[{"value":"/ Linearly interpolate between this point and another point.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69328,"byte_end":69390,"line_start":335,"line_end":335,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69395,"byte_end":69398,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69403,"byte_end":69416,"line_start":337,"line_end":337,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69421,"byte_end":69424,"line_start":338,"line_end":338,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69429,"byte_end":69440,"line_start":339,"line_end":339,"column_start":5,"column_end":16}},{"value":"/ use euclid::point2;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69445,"byte_end":69468,"line_start":340,"line_end":340,"column_start":5,"column_end":28}},{"value":"/ use euclid::default::Point2D;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69473,"byte_end":69506,"line_start":341,"line_end":341,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69511,"byte_end":69514,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ let from: Point2D<_> = point2(0.0, 10.0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69519,"byte_end":69564,"line_start":343,"line_end":343,"column_start":5,"column_end":50}},{"value":"/ let to:  Point2D<_> = point2(8.0, -4.0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69569,"byte_end":69613,"line_start":344,"line_end":344,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69618,"byte_end":69621,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), point2(-8.0,  24.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69626,"byte_end":69683,"line_start":346,"line_end":346,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(from.lerp(to,  0.0), point2( 0.0,  10.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69688,"byte_end":69745,"line_start":347,"line_end":347,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(from.lerp(to,  0.5), point2( 4.0,   3.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69750,"byte_end":69807,"line_start":348,"line_end":348,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(from.lerp(to,  1.0), point2( 8.0,  -4.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69812,"byte_end":69869,"line_start":349,"line_end":349,"column_start":5,"column_end":62}},{"value":"/ assert_eq!(from.lerp(to,  2.0), point2(16.0, -18.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69874,"byte_end":69931,"line_start":350,"line_end":350,"column_start":5,"column_end":62}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69936,"byte_end":69943,"line_start":351,"line_end":351,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":69948,"byte_end":69957,"line_start":352,"line_end":352,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":705},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":70311,"byte_end":70314,"line_start":367,"line_end":367,"column_start":12,"column_end":15},"name":"min","qualname":"<Point2D<T, U>>::min","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":70290,"byte_end":70299,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":70435,"byte_end":70438,"line_start":372,"line_end":372,"column_start":12,"column_end":15},"name":"max","qualname":"<Point2D<T, U>>::max","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":70414,"byte_end":70423,"line_start":371,"line_end":371,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":707},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":70732,"byte_end":70737,"line_start":381,"line_end":381,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Point2D<T, U>>::clamp","value":"fn (&self, start: Self, end: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the point each component of which clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the point each component of which clamped by corresponding","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":70538,"byte_end":70608,"line_start":376,"line_end":376,"column_start":5,"column_end":75}},{"value":"/ components of `start` and `end`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":70613,"byte_end":70649,"line_start":377,"line_end":377,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":70654,"byte_end":70657,"line_start":378,"line_end":378,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":70662,"byte_end":70706,"line_start":379,"line_end":379,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":70711,"byte_end":70720,"line_start":380,"line_end":380,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":71279,"byte_end":71283,"line_start":396,"line_end":396,"column_start":12,"column_end":16},"name":"cast","qualname":"<Point2D<T, U>>::cast","value":"fn <NewT> (&self) -> Point2D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":70899,"byte_end":70973,"line_start":390,"line_end":390,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":70978,"byte_end":70981,"line_start":391,"line_end":391,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":70986,"byte_end":71073,"line_start":392,"line_end":392,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":71078,"byte_end":71166,"line_start":393,"line_end":393,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":71171,"byte_end":71253,"line_start":394,"line_end":394,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":71258,"byte_end":71267,"line_start":395,"line_end":395,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":71747,"byte_end":71755,"line_start":405,"line_end":405,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Point2D<T, U>>::try_cast","value":"fn <NewT> (&self) -> Option<Point2D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":71372,"byte_end":71455,"line_start":400,"line_end":400,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":71460,"byte_end":71463,"line_start":401,"line_end":401,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":71468,"byte_end":71555,"line_start":402,"line_end":402,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":71560,"byte_end":71648,"line_start":403,"line_end":403,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":71653,"byte_end":71735,"line_start":404,"line_end":404,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":715},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72071,"byte_end":72077,"line_start":416,"line_end":416,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Point2D<T, U>>::to_f32","value":"fn (&self) -> Point2D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` point.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` point.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72016,"byte_end":72045,"line_start":414,"line_end":414,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72050,"byte_end":72059,"line_start":415,"line_end":415,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72192,"byte_end":72198,"line_start":422,"line_end":422,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Point2D<T, U>>::to_f64","value":"fn (&self) -> Point2D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` point.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` point.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72137,"byte_end":72166,"line_start":420,"line_end":420,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72171,"byte_end":72180,"line_start":421,"line_end":421,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72552,"byte_end":72560,"line_start":432,"line_end":432,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Point2D<T, U>>::to_usize","value":"fn (&self) -> Point2D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` point, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72258,"byte_end":72317,"line_start":426,"line_end":426,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72322,"byte_end":72325,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72330,"byte_end":72406,"line_start":428,"line_end":428,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72411,"byte_end":72485,"line_start":429,"line_end":429,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72490,"byte_end":72526,"line_start":430,"line_end":430,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72531,"byte_end":72540,"line_start":431,"line_end":431,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72914,"byte_end":72920,"line_start":442,"line_end":442,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Point2D<T, U>>::to_u32","value":"fn (&self) -> Point2D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` point, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72622,"byte_end":72679,"line_start":436,"line_end":436,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72684,"byte_end":72687,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72692,"byte_end":72768,"line_start":438,"line_end":438,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72773,"byte_end":72847,"line_start":439,"line_end":439,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72852,"byte_end":72888,"line_start":440,"line_end":440,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72893,"byte_end":72902,"line_start":441,"line_end":441,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":719},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73270,"byte_end":73276,"line_start":452,"line_end":452,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Point2D<T, U>>::to_i32","value":"fn (&self) -> Point2D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an i32 point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an i32 point, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":72980,"byte_end":73035,"line_start":446,"line_end":446,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73040,"byte_end":73043,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73048,"byte_end":73124,"line_start":448,"line_end":448,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73129,"byte_end":73203,"line_start":449,"line_end":449,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73208,"byte_end":73244,"line_start":450,"line_end":450,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73249,"byte_end":73258,"line_start":451,"line_end":451,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":720},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73626,"byte_end":73632,"line_start":462,"line_end":462,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Point2D<T, U>>::to_i64","value":"fn (&self) -> Point2D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an i64 point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an i64 point, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73336,"byte_end":73391,"line_start":456,"line_end":456,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73396,"byte_end":73399,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73404,"byte_end":73480,"line_start":458,"line_end":458,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73485,"byte_end":73559,"line_start":459,"line_end":459,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73564,"byte_end":73600,"line_start":460,"line_end":460,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73605,"byte_end":73614,"line_start":461,"line_end":461,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73769,"byte_end":73777,"line_start":469,"line_end":469,"column_start":12,"column_end":20},"name":"add_size","qualname":"<Point2D<T, U>>::add_size","value":"fn (&self, other: &Size2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73748,"byte_end":73757,"line_start":468,"line_end":468,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":79165,"byte_end":79172,"line_start":702,"line_end":702,"column_start":12,"column_end":19},"name":"Point3D","qualname":"::point::Point3D","value":"Point3D { x, y, z, _unit }","parent":null,"children":[{"krate":0,"index":853},{"krate":0,"index":854},{"krate":0,"index":855},{"krate":0,"index":856}],"decl_id":null,"docs":" A 3d Point tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 3d Point tagged with a unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":79108,"byte_end":79142,"line_start":700,"line_end":700,"column_start":1,"column_end":35}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":79143,"byte_end":79153,"line_start":701,"line_end":701,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":853},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":79189,"byte_end":79190,"line_start":703,"line_end":703,"column_start":9,"column_end":10},"name":"x","qualname":"::point::Point3D::x","value":"T","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":854},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":79203,"byte_end":79204,"line_start":704,"line_end":704,"column_start":9,"column_end":10},"name":"y","qualname":"::point::Point3D::y","value":"T","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":855},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":79217,"byte_end":79218,"line_start":705,"line_end":705,"column_start":9,"column_end":10},"name":"z","qualname":"::point::Point3D::z","value":"T","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":856},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":79250,"byte_end":79255,"line_start":707,"line_end":707,"column_start":9,"column_end":14},"name":"_unit","qualname":"::point::Point3D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":850},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":891},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":81536,"byte_end":81542,"line_start":800,"line_end":800,"column_start":12,"column_end":18},"name":"origin","qualname":"<Point3D<T, U>>::origin","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all components to zero.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":81462,"byte_end":81510,"line_start":798,"line_end":798,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":81515,"byte_end":81524,"line_start":799,"line_end":799,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":892},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":81725,"byte_end":81729,"line_start":809,"line_end":809,"column_start":12,"column_end":16},"name":"zero","qualname":"<Point3D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The same as [`origin()`](#method.origin).\n","sig":null,"attributes":[{"value":"/ The same as [`origin()`](#method.origin).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":81654,"byte_end":81699,"line_start":807,"line_end":807,"column_start":5,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":81704,"byte_end":81713,"line_start":808,"line_end":808,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":893},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":81885,"byte_end":81888,"line_start":818,"line_end":818,"column_start":18,"column_end":21},"name":"new","qualname":"<Point3D<T, U>>::new","value":"fn (x: T, y: T, z: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values directly.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":81807,"byte_end":81853,"line_start":816,"line_end":816,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":81858,"byte_end":81867,"line_start":817,"line_end":817,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":894},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82124,"byte_end":82136,"line_start":829,"line_end":829,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Point3D<T, U>>::from_lengths","value":"fn (x: Length<T, U>, y: Length<T, U>, z: Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking properly Lengths instead of scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking properly Lengths instead of scalar values.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82033,"byte_end":82098,"line_start":827,"line_end":827,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82103,"byte_end":82112,"line_start":828,"line_end":828,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":895},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82301,"byte_end":82313,"line_start":835,"line_end":835,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Point3D<T, U>>::from_untyped","value":"fn (p: Point3D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82239,"byte_end":82275,"line_start":833,"line_end":833,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82280,"byte_end":82289,"line_start":834,"line_end":834,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":899},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82556,"byte_end":82565,"line_start":845,"line_end":845,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Point3D<T, U>>::to_vector","value":"fn (&self) -> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this point into a vector.","sig":null,"attributes":[{"value":"/ Cast this point into a vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82428,"byte_end":82462,"line_start":841,"line_end":841,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82467,"byte_end":82470,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ Equivalent to subtracting the origin to this point.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82475,"byte_end":82530,"line_start":843,"line_end":843,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82535,"byte_end":82544,"line_start":844,"line_end":844,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":900},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82821,"byte_end":82823,"line_start":856,"line_end":856,"column_start":12,"column_end":14},"name":"xy","qualname":"<Point3D<T, U>>::xy","value":"fn (&self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d point using this point's x and y coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d point using this point's x and y coordinates","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82734,"byte_end":82795,"line_start":854,"line_end":854,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82800,"byte_end":82809,"line_start":855,"line_end":855,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":901},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82979,"byte_end":82981,"line_start":862,"line_end":862,"column_start":12,"column_end":14},"name":"xz","qualname":"<Point3D<T, U>>::xz","value":"fn (&self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d point using this point's x and z coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d point using this point's x and z coordinates","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82892,"byte_end":82953,"line_start":860,"line_end":860,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82958,"byte_end":82967,"line_start":861,"line_end":861,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":902},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83137,"byte_end":83139,"line_start":868,"line_end":868,"column_start":12,"column_end":14},"name":"yz","qualname":"<Point3D<T, U>>::yz","value":"fn (&self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d point using this point's x and z coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d point using this point's x and z coordinates","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83050,"byte_end":83111,"line_start":866,"line_end":866,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83116,"byte_end":83125,"line_start":867,"line_end":867,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":903},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83515,"byte_end":83523,"line_start":885,"line_end":885,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Point3D<T, U>>::to_array","value":"fn (&self) -> [T; 3]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x, y and z.","sig":null,"attributes":[{"value":"/ Cast into an array with x, y and z.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83208,"byte_end":83247,"line_start":872,"line_end":872,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83252,"byte_end":83255,"line_start":873,"line_end":873,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83260,"byte_end":83273,"line_start":874,"line_end":874,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83278,"byte_end":83281,"line_start":875,"line_end":875,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83286,"byte_end":83297,"line_start":876,"line_end":876,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point3D, point3};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83302,"byte_end":83338,"line_start":877,"line_end":877,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83343,"byte_end":83357,"line_start":878,"line_end":878,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83362,"byte_end":83365,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ let point: Point3D<_, Mm> = point3(1, -8, 0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83370,"byte_end":83419,"line_start":880,"line_end":880,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83424,"byte_end":83427,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.to_array(), [1, -8, 0]);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83432,"byte_end":83477,"line_start":882,"line_end":882,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83482,"byte_end":83489,"line_start":883,"line_end":883,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83494,"byte_end":83503,"line_start":884,"line_end":884,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":905},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83608,"byte_end":83619,"line_start":890,"line_end":890,"column_start":12,"column_end":23},"name":"to_array_4d","qualname":"<Point3D<T, U>>::to_array_4d","value":"fn (&self) -> [T; 4]","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83587,"byte_end":83596,"line_start":889,"line_end":889,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":907},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84031,"byte_end":84039,"line_start":910,"line_end":910,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Point3D<T, U>>::to_tuple","value":"fn (&self) -> (T, T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x, y and z.","sig":null,"attributes":[{"value":"/ Cast into a tuple with x, y and z.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83725,"byte_end":83763,"line_start":897,"line_end":897,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83768,"byte_end":83771,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83776,"byte_end":83789,"line_start":899,"line_end":899,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83794,"byte_end":83797,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83802,"byte_end":83813,"line_start":901,"line_end":901,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point3D, point3};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83818,"byte_end":83854,"line_start":902,"line_end":902,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83859,"byte_end":83873,"line_start":903,"line_end":903,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83878,"byte_end":83881,"line_start":904,"line_end":904,"column_start":5,"column_end":8}},{"value":"/ let point: Point3D<_, Mm> = point3(1, -8, 0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83886,"byte_end":83935,"line_start":905,"line_end":905,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83940,"byte_end":83943,"line_start":906,"line_end":906,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.to_tuple(), (1, -8, 0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83948,"byte_end":83993,"line_start":907,"line_end":907,"column_start":5,"column_end":50}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":83998,"byte_end":84005,"line_start":908,"line_end":908,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84010,"byte_end":84019,"line_start":909,"line_end":909,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":908},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84127,"byte_end":84138,"line_start":915,"line_end":915,"column_start":12,"column_end":23},"name":"to_tuple_4d","qualname":"<Point3D<T, U>>::to_tuple_4d","value":"fn (&self) -> (T, T, T, T)","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84106,"byte_end":84115,"line_start":914,"line_end":914,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84675,"byte_end":84685,"line_start":937,"line_end":937,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Point3D<T, U>>::to_untyped","value":"fn (&self) -> Point3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84250,"byte_end":84304,"line_start":922,"line_end":922,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84309,"byte_end":84312,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84317,"byte_end":84330,"line_start":924,"line_end":924,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84335,"byte_end":84338,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84343,"byte_end":84354,"line_start":926,"line_end":926,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point3D, point3};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84359,"byte_end":84395,"line_start":927,"line_end":927,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84400,"byte_end":84414,"line_start":928,"line_end":928,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84419,"byte_end":84422,"line_start":929,"line_end":929,"column_start":5,"column_end":8}},{"value":"/ let point: Point3D<_, Mm> = point3(1, -8, 0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84427,"byte_end":84476,"line_start":930,"line_end":930,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84481,"byte_end":84484,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.x, point.to_untyped().x);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84489,"byte_end":84535,"line_start":932,"line_end":932,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(point.y, point.to_untyped().y);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84540,"byte_end":84586,"line_start":933,"line_end":933,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(point.z, point.to_untyped().z);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84591,"byte_end":84637,"line_start":934,"line_end":934,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84642,"byte_end":84649,"line_start":935,"line_end":935,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84654,"byte_end":84663,"line_start":936,"line_end":936,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":910},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85225,"byte_end":85234,"line_start":957,"line_end":957,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Point3D<T, U>>::cast_unit","value":"fn <V> (&self) -> Point3D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit, preserving the numeric value.","sig":null,"attributes":[{"value":"/ Cast the unit, preserving the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84772,"byte_end":84820,"line_start":941,"line_end":941,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84825,"byte_end":84828,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84833,"byte_end":84846,"line_start":943,"line_end":943,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84851,"byte_end":84854,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84859,"byte_end":84870,"line_start":945,"line_end":945,"column_start":5,"column_end":16}},{"value":"/ # use euclid::{Point3D, point3};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84875,"byte_end":84911,"line_start":946,"line_end":946,"column_start":5,"column_end":41}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84916,"byte_end":84930,"line_start":947,"line_end":947,"column_start":5,"column_end":19}},{"value":"/ enum Cm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84935,"byte_end":84949,"line_start":948,"line_end":948,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84954,"byte_end":84957,"line_start":949,"line_end":949,"column_start":5,"column_end":8}},{"value":"/ let point: Point3D<_, Mm> = point3(1, -8, 0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":84962,"byte_end":85011,"line_start":950,"line_end":950,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85016,"byte_end":85019,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point.x, point.cast_unit::<Cm>().x);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85024,"byte_end":85075,"line_start":952,"line_end":952,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(point.y, point.cast_unit::<Cm>().y);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85080,"byte_end":85131,"line_start":953,"line_end":953,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(point.z, point.cast_unit::<Cm>().z);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85136,"byte_end":85187,"line_start":954,"line_end":954,"column_start":5,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85192,"byte_end":85199,"line_start":955,"line_end":955,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85204,"byte_end":85213,"line_start":956,"line_end":956,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":912},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85368,"byte_end":85373,"line_start":963,"line_end":963,"column_start":12,"column_end":17},"name":"to_2d","qualname":"<Point3D<T, U>>::to_2d","value":"fn (&self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 2d point.\n","sig":null,"attributes":[{"value":"/ Convert into a 2d point.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85314,"byte_end":85342,"line_start":961,"line_end":961,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85347,"byte_end":85356,"line_start":962,"line_end":962,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":913},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85801,"byte_end":85806,"line_start":979,"line_end":979,"column_start":12,"column_end":17},"name":"round","qualname":"<Point3D<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85429,"byte_end":85484,"line_start":967,"line_end":967,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85489,"byte_end":85492,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85497,"byte_end":85572,"line_start":969,"line_end":969,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85577,"byte_end":85580,"line_start":970,"line_end":970,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85585,"byte_end":85596,"line_start":971,"line_end":971,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point3;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85601,"byte_end":85626,"line_start":972,"line_end":972,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85631,"byte_end":85645,"line_start":973,"line_end":973,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85650,"byte_end":85653,"line_start":974,"line_end":974,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point3::<_, Mm>(-0.1, -0.8, 0.4).round(), point3::<_, Mm>(0.0, -1.0, 0.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85658,"byte_end":85747,"line_start":975,"line_end":975,"column_start":5,"column_end":94}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85752,"byte_end":85759,"line_start":976,"line_end":976,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85764,"byte_end":85773,"line_start":977,"line_end":977,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85778,"byte_end":85789,"line_start":978,"line_end":978,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":914},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86336,"byte_end":86340,"line_start":998,"line_end":998,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Point3D<T, U>>::ceil","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":85930,"byte_end":86021,"line_start":986,"line_end":986,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86026,"byte_end":86029,"line_start":987,"line_end":987,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86034,"byte_end":86109,"line_start":988,"line_end":988,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86114,"byte_end":86117,"line_start":989,"line_end":989,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86122,"byte_end":86133,"line_start":990,"line_end":990,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point3;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86138,"byte_end":86163,"line_start":991,"line_end":991,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86168,"byte_end":86182,"line_start":992,"line_end":992,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86187,"byte_end":86190,"line_start":993,"line_end":993,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point3::<_, Mm>(-0.1, -0.8, 0.4).ceil(), point3::<_, Mm>(0.0, 0.0, 1.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86195,"byte_end":86282,"line_start":994,"line_end":994,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86287,"byte_end":86294,"line_start":995,"line_end":995,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86299,"byte_end":86308,"line_start":996,"line_end":996,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86313,"byte_end":86324,"line_start":997,"line_end":997,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":915},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86866,"byte_end":86871,"line_start":1017,"line_end":1017,"column_start":12,"column_end":17},"name":"floor","qualname":"<Point3D<T, U>>::floor","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86460,"byte_end":86548,"line_start":1005,"line_end":1005,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86553,"byte_end":86556,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86561,"byte_end":86636,"line_start":1007,"line_end":1007,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86641,"byte_end":86644,"line_start":1008,"line_end":1008,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86649,"byte_end":86660,"line_start":1009,"line_end":1009,"column_start":5,"column_end":16}},{"value":"/ # use euclid::point3;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86665,"byte_end":86690,"line_start":1010,"line_end":1010,"column_start":5,"column_end":30}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86695,"byte_end":86709,"line_start":1011,"line_end":1011,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86714,"byte_end":86717,"line_start":1012,"line_end":1012,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(point3::<_, Mm>(-0.1, -0.8, 0.4).floor(), point3::<_, Mm>(-1.0, -1.0, 0.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86722,"byte_end":86812,"line_start":1013,"line_end":1013,"column_start":5,"column_end":95}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86817,"byte_end":86824,"line_start":1014,"line_end":1014,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86829,"byte_end":86838,"line_start":1015,"line_end":1015,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86843,"byte_end":86854,"line_start":1016,"line_end":1016,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":916},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87678,"byte_end":87682,"line_start":1042,"line_end":1042,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Point3D<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this point and another point.","sig":null,"attributes":[{"value":"/ Linearly interpolate between this point and another point.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":86995,"byte_end":87057,"line_start":1024,"line_end":1024,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87062,"byte_end":87065,"line_start":1025,"line_end":1025,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87070,"byte_end":87083,"line_start":1026,"line_end":1026,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87088,"byte_end":87091,"line_start":1027,"line_end":1027,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87096,"byte_end":87107,"line_start":1028,"line_end":1028,"column_start":5,"column_end":16}},{"value":"/ use euclid::point3;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87112,"byte_end":87135,"line_start":1029,"line_end":1029,"column_start":5,"column_end":28}},{"value":"/ use euclid::default::Point3D;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87140,"byte_end":87173,"line_start":1030,"line_end":1030,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87178,"byte_end":87181,"line_start":1031,"line_end":1031,"column_start":5,"column_end":8}},{"value":"/ let from: Point3D<_> = point3(0.0, 10.0, -1.0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87186,"byte_end":87237,"line_start":1032,"line_end":1032,"column_start":5,"column_end":56}},{"value":"/ let to:  Point3D<_> = point3(8.0, -4.0,  0.0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87242,"byte_end":87292,"line_start":1033,"line_end":1033,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87297,"byte_end":87300,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), point3(-8.0,  24.0, -2.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87305,"byte_end":87368,"line_start":1035,"line_end":1035,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(from.lerp(to,  0.0), point3( 0.0,  10.0, -1.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87373,"byte_end":87436,"line_start":1036,"line_end":1036,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(from.lerp(to,  0.5), point3( 4.0,   3.0, -0.5));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87441,"byte_end":87504,"line_start":1037,"line_end":1037,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(from.lerp(to,  1.0), point3( 8.0,  -4.0,  0.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87509,"byte_end":87572,"line_start":1038,"line_end":1038,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(from.lerp(to,  2.0), point3(16.0, -18.0,  1.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87577,"byte_end":87640,"line_start":1039,"line_end":1039,"column_start":5,"column_end":68}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87645,"byte_end":87652,"line_start":1040,"line_end":1040,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":87657,"byte_end":87666,"line_start":1041,"line_end":1041,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":920},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88062,"byte_end":88065,"line_start":1057,"line_end":1057,"column_start":12,"column_end":15},"name":"min","qualname":"<Point3D<T, U>>::min","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88041,"byte_end":88050,"line_start":1056,"line_end":1056,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":921},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88255,"byte_end":88258,"line_start":1066,"line_end":1066,"column_start":12,"column_end":15},"name":"max","qualname":"<Point3D<T, U>>::max","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88234,"byte_end":88243,"line_start":1065,"line_end":1065,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":922},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88621,"byte_end":88626,"line_start":1079,"line_end":1079,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Point3D<T, U>>::clamp","value":"fn (&self, start: Self, end: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the point each component of which clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the point each component of which clamped by corresponding","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88427,"byte_end":88497,"line_start":1074,"line_end":1074,"column_start":5,"column_end":75}},{"value":"/ components of `start` and `end`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88502,"byte_end":88538,"line_start":1075,"line_end":1075,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88543,"byte_end":88546,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88551,"byte_end":88595,"line_start":1077,"line_end":1077,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88600,"byte_end":88609,"line_start":1078,"line_end":1078,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":926},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":89168,"byte_end":89172,"line_start":1094,"line_end":1094,"column_start":12,"column_end":16},"name":"cast","qualname":"<Point3D<T, U>>::cast","value":"fn <NewT> (&self) -> Point3D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88788,"byte_end":88862,"line_start":1088,"line_end":1088,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88867,"byte_end":88870,"line_start":1089,"line_end":1089,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88875,"byte_end":88962,"line_start":1090,"line_end":1090,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88967,"byte_end":89055,"line_start":1091,"line_end":1091,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":89060,"byte_end":89142,"line_start":1092,"line_end":1092,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":89147,"byte_end":89156,"line_start":1093,"line_end":1093,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":928},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":89636,"byte_end":89644,"line_start":1103,"line_end":1103,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Point3D<T, U>>::try_cast","value":"fn <NewT> (&self) -> Option<Point3D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":89261,"byte_end":89344,"line_start":1098,"line_end":1098,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":89349,"byte_end":89352,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":89357,"byte_end":89444,"line_start":1100,"line_end":1100,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":89449,"byte_end":89537,"line_start":1101,"line_end":1101,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":89542,"byte_end":89624,"line_start":1102,"line_end":1102,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":930},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90042,"byte_end":90048,"line_start":1118,"line_end":1118,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Point3D<T, U>>::to_f32","value":"fn (&self) -> Point3D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` point.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` point.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":89987,"byte_end":90016,"line_start":1116,"line_end":1116,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90021,"byte_end":90030,"line_start":1117,"line_end":1117,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":931},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90163,"byte_end":90169,"line_start":1124,"line_end":1124,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Point3D<T, U>>::to_f64","value":"fn (&self) -> Point3D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` point.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` point.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90108,"byte_end":90137,"line_start":1122,"line_end":1122,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90142,"byte_end":90151,"line_start":1123,"line_end":1123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90523,"byte_end":90531,"line_start":1134,"line_end":1134,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Point3D<T, U>>::to_usize","value":"fn (&self) -> Point3D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` point, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90229,"byte_end":90288,"line_start":1128,"line_end":1128,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90293,"byte_end":90296,"line_start":1129,"line_end":1129,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90301,"byte_end":90377,"line_start":1130,"line_end":1130,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90382,"byte_end":90456,"line_start":1131,"line_end":1131,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90461,"byte_end":90497,"line_start":1132,"line_end":1132,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90502,"byte_end":90511,"line_start":1133,"line_end":1133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":933},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90885,"byte_end":90891,"line_start":1144,"line_end":1144,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Point3D<T, U>>::to_u32","value":"fn (&self) -> Point3D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` point, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90593,"byte_end":90650,"line_start":1138,"line_end":1138,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90655,"byte_end":90658,"line_start":1139,"line_end":1139,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90663,"byte_end":90739,"line_start":1140,"line_end":1140,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90744,"byte_end":90818,"line_start":1141,"line_end":1141,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90823,"byte_end":90859,"line_start":1142,"line_end":1142,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90864,"byte_end":90873,"line_start":1143,"line_end":1143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":934},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91243,"byte_end":91249,"line_start":1154,"line_end":1154,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Point3D<T, U>>::to_i32","value":"fn (&self) -> Point3D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` point, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":90951,"byte_end":91008,"line_start":1148,"line_end":1148,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91013,"byte_end":91016,"line_start":1149,"line_end":1149,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91021,"byte_end":91097,"line_start":1150,"line_end":1150,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91102,"byte_end":91176,"line_start":1151,"line_end":1151,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91181,"byte_end":91217,"line_start":1152,"line_end":1152,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91222,"byte_end":91231,"line_start":1153,"line_end":1153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":935},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91601,"byte_end":91607,"line_start":1164,"line_end":1164,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Point3D<T, U>>::to_i64","value":"fn (&self) -> Point3D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` point, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` point, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91309,"byte_end":91366,"line_start":1158,"line_end":1158,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91371,"byte_end":91374,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point points, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91379,"byte_end":91455,"line_start":1160,"line_end":1160,"column_start":5,"column_end":81}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91460,"byte_end":91534,"line_start":1161,"line_end":1161,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91539,"byte_end":91575,"line_start":1162,"line_end":1162,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91580,"byte_end":91589,"line_start":1163,"line_end":1163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":939},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91744,"byte_end":91752,"line_start":1171,"line_end":1171,"column_start":12,"column_end":20},"name":"add_size","qualname":"<Point3D<T, U>>::add_size","value":"fn (&self, other: &Size3D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91723,"byte_end":91732,"line_start":1170,"line_end":1170,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1065},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":97818,"byte_end":97824,"line_start":1427,"line_end":1427,"column_start":14,"column_end":20},"name":"point2","qualname":"::point::point2","value":"fn <T, U> (x: T, y: T) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Point2D::new(x, y)`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Point2D::new(x, y)`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":97755,"byte_end":97794,"line_start":1425,"line_end":1425,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":97795,"byte_end":97804,"line_start":1426,"line_end":1426,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":1068},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":97998,"byte_end":98004,"line_start":1437,"line_end":1437,"column_start":14,"column_end":20},"name":"point3","qualname":"::point::point3","value":"fn <T, U> (x: T, y: T, z: T) -> Point3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Point3D::new(x, y)`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Point3D::new(x, y)`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":97935,"byte_end":97974,"line_start":1435,"line_end":1435,"column_start":1,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":97975,"byte_end":97984,"line_start":1436,"line_end":1436,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":1097},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":111574,"byte_end":111578,"line_start":36,"line_end":36,"column_start":12,"column_end":16},"name":"Rect","qualname":"::rect::Rect","value":"Rect { origin, size }","parent":null,"children":[{"krate":0,"index":1100},{"krate":0,"index":1101}],"decl_id":null,"docs":" A 2d Rectangle optionally tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 2d Rectangle optionally tagged with a unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":111329,"byte_end":111378,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":111379,"byte_end":111389,"line_start":33,"line_end":33,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":111595,"byte_end":111601,"line_start":37,"line_end":37,"column_start":9,"column_end":15},"name":"origin","qualname":"::rect::Rect::origin","value":"point::Point2D<T, U>","parent":{"krate":0,"index":1097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":111626,"byte_end":111630,"line_start":38,"line_end":38,"column_start":9,"column_end":13},"name":"size","qualname":"::rect::Rect::size","value":"size::Size2D<T, U>","parent":{"krate":0,"index":1097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1136},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":112979,"byte_end":112982,"line_start":93,"line_end":93,"column_start":18,"column_end":21},"name":"new","qualname":"<Rect<T, U>>::new","value":"fn (origin: Point2D<T, U>, size: Size2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor.\n","sig":null,"attributes":[{"value":"/ Constructor.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":112931,"byte_end":112947,"line_start":91,"line_end":91,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":112952,"byte_end":112961,"line_start":92,"line_end":92,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1140},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":113223,"byte_end":113227,"line_start":107,"line_end":107,"column_start":12,"column_end":16},"name":"zero","qualname":"<Rect<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all sides to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all sides to zero.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":113154,"byte_end":113197,"line_start":105,"line_end":105,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":113202,"byte_end":113211,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1141},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":113383,"byte_end":113392,"line_start":113,"line_end":113,"column_start":12,"column_end":21},"name":"from_size","qualname":"<Rect<T, U>>::from_size","value":"fn (size: Size2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rect of the given size, at offset zero.\n","sig":null,"attributes":[{"value":"/ Creates a rect of the given size, at offset zero.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":113304,"byte_end":113357,"line_start":111,"line_end":111,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":113362,"byte_end":113371,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":113635,"byte_end":113645,"line_start":126,"line_end":126,"column_start":12,"column_end":22},"name":"intersects","qualname":"<Rect<T, U>>::intersects","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":113614,"byte_end":113623,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":113962,"byte_end":113965,"line_start":134,"line_end":134,"column_start":12,"column_end":15},"name":"min","qualname":"<Rect<T, U>>::min","value":"fn (&self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":113941,"byte_end":113950,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114044,"byte_end":114047,"line_start":139,"line_end":139,"column_start":12,"column_end":15},"name":"max","qualname":"<Rect<T, U>>::max","value":"fn (&self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114023,"byte_end":114032,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114138,"byte_end":114143,"line_start":144,"line_end":144,"column_start":12,"column_end":17},"name":"max_x","qualname":"<Rect<T, U>>::max_x","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114117,"byte_end":114126,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1149},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114230,"byte_end":114235,"line_start":149,"line_end":149,"column_start":12,"column_end":17},"name":"min_x","qualname":"<Rect<T, U>>::min_x","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114209,"byte_end":114218,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114304,"byte_end":114309,"line_start":154,"line_end":154,"column_start":12,"column_end":17},"name":"max_y","qualname":"<Rect<T, U>>::max_y","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114283,"byte_end":114292,"line_start":153,"line_end":153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1151},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114397,"byte_end":114402,"line_start":159,"line_end":159,"column_start":12,"column_end":17},"name":"min_y","qualname":"<Rect<T, U>>::min_y","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114376,"byte_end":114385,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1152},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114471,"byte_end":114476,"line_start":164,"line_end":164,"column_start":12,"column_end":17},"name":"width","qualname":"<Rect<T, U>>::width","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114450,"byte_end":114459,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1153},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114547,"byte_end":114553,"line_start":169,"line_end":169,"column_start":12,"column_end":18},"name":"height","qualname":"<Rect<T, U>>::height","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114526,"byte_end":114535,"line_start":168,"line_end":168,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1154},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114625,"byte_end":114632,"line_start":174,"line_end":174,"column_start":12,"column_end":19},"name":"x_range","qualname":"<Rect<T, U>>::x_range","value":"fn (&self) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114604,"byte_end":114613,"line_start":173,"line_end":173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1155},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114721,"byte_end":114728,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"y_range","qualname":"<Rect<T, U>>::y_range","value":"fn (&self) -> Range<T>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114700,"byte_end":114709,"line_start":178,"line_end":178,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1156},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114817,"byte_end":114829,"line_start":184,"line_end":184,"column_start":12,"column_end":24},"name":"intersection","qualname":"<Rect<T, U>>::intersection","value":"fn (&self, other: &Self) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":114796,"byte_end":114805,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":115461,"byte_end":115470,"line_start":205,"line_end":205,"column_start":12,"column_end":21},"name":"translate","qualname":"<Rect<T, U>>::translate","value":"fn (&self, by: Vector2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the same rectangle, translated by a vector.\n","sig":null,"attributes":[{"value":"/ Returns the same rectangle, translated by a vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":115364,"byte_end":115419,"line_start":202,"line_end":202,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":115424,"byte_end":115433,"line_start":203,"line_end":203,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":115438,"byte_end":115449,"line_start":204,"line_end":204,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":115791,"byte_end":115799,"line_start":213,"line_end":213,"column_start":12,"column_end":20},"name":"contains","qualname":"<Rect<T, U>>::contains","value":"fn (&self, other: Point2D<T, U>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this rectangle contains the point. Points are considered\n in the rectangle if they are on the left or top edge, but outside if they\n are on the right or bottom edge.\n","sig":null,"attributes":[{"value":"/ Returns true if this rectangle contains the point. Points are considered","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":115566,"byte_end":115642,"line_start":209,"line_end":209,"column_start":5,"column_end":81}},{"value":"/ in the rectangle if they are on the left or top edge, but outside if they","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":115647,"byte_end":115724,"line_start":210,"line_end":210,"column_start":5,"column_end":82}},{"value":"/ are on the right or bottom edge.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":115729,"byte_end":115765,"line_start":211,"line_end":211,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":115770,"byte_end":115779,"line_start":212,"line_end":212,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":116051,"byte_end":116058,"line_start":220,"line_end":220,"column_start":12,"column_end":19},"name":"inflate","qualname":"<Rect<T, U>>::inflate","value":"fn (&self, width: T, height: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":116014,"byte_end":116023,"line_start":218,"line_end":218,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":116028,"byte_end":116039,"line_start":219,"line_end":219,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":116372,"byte_end":116380,"line_start":231,"line_end":231,"column_start":12,"column_end":20},"name":"to_box2d","qualname":"<Rect<T, U>>::to_box2d","value":"fn (&self) -> Box2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":116351,"byte_end":116360,"line_start":230,"line_end":230,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":116826,"byte_end":116839,"line_start":247,"line_end":247,"column_start":12,"column_end":25},"name":"contains_rect","qualname":"<Rect<T, U>>::contains_rect","value":"fn (&self, rect: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this rectangle contains the interior of rect. Always\n returns true if rect is empty, and always returns false if rect is\n nonempty but this rectangle is empty.\n","sig":null,"attributes":[{"value":"/ Returns true if this rectangle contains the interior of rect. Always","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":116607,"byte_end":116679,"line_start":243,"line_end":243,"column_start":5,"column_end":77}},{"value":"/ returns true if rect is empty, and always returns false if rect is","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":116684,"byte_end":116754,"line_start":244,"line_end":244,"column_start":5,"column_end":75}},{"value":"/ nonempty but this rectangle is empty.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":116759,"byte_end":116800,"line_start":245,"line_end":245,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":116805,"byte_end":116814,"line_start":246,"line_end":246,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":117347,"byte_end":117357,"line_start":258,"line_end":258,"column_start":12,"column_end":22},"name":"inner_rect","qualname":"<Rect<T, U>>::inner_rect","value":"fn (&self, offsets: SideOffsets2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculate the size and position of an inner rectangle.","sig":null,"attributes":[{"value":"/ Calculate the size and position of an inner rectangle.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":117075,"byte_end":117133,"line_start":253,"line_end":253,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":117138,"byte_end":117141,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ Subtracts the side offsets from all sides. The horizontal and vertical","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":117146,"byte_end":117220,"line_start":255,"line_end":255,"column_start":5,"column_end":79}},{"value":"/ offsets must not be larger than the original side length.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":117225,"byte_end":117286,"line_start":256,"line_end":256,"column_start":5,"column_end":66}},{"value":"/ This method assumes y oriented downward.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":117291,"byte_end":117335,"line_start":257,"line_end":257,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":118064,"byte_end":118074,"line_start":278,"line_end":278,"column_start":12,"column_end":22},"name":"outer_rect","qualname":"<Rect<T, U>>::outer_rect","value":"fn (&self, offsets: SideOffsets2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Calculate the size and position of an outer rectangle.","sig":null,"attributes":[{"value":"/ Calculate the size and position of an outer rectangle.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":117863,"byte_end":117921,"line_start":274,"line_end":274,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":117926,"byte_end":117929,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Add the offsets to all sides. The expanded rectangle is returned.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":117934,"byte_end":118003,"line_start":276,"line_end":276,"column_start":5,"column_end":74}},{"value":"/ This method assumes y oriented downward.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":118008,"byte_end":118052,"line_start":277,"line_end":277,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":119002,"byte_end":119013,"line_start":300,"line_end":300,"column_start":12,"column_end":23},"name":"from_points","qualname":"<Rect<T, U>>::from_points","value":"fn <I> (points: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest rectangle defined by the top/bottom/left/right-most\n points provided as parameter.","sig":null,"attributes":[{"value":"/ Returns the smallest rectangle defined by the top/bottom/left/right-most","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":118442,"byte_end":118518,"line_start":291,"line_end":291,"column_start":5,"column_end":81}},{"value":"/ points provided as parameter.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":118523,"byte_end":118556,"line_start":292,"line_end":292,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":118561,"byte_end":118564,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ Note: This function has a behavior that can be surprising because","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":118569,"byte_end":118638,"line_start":294,"line_end":294,"column_start":5,"column_end":74}},{"value":"/ the right-most and bottom-most points are exactly on the edge","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":118643,"byte_end":118708,"line_start":295,"line_end":295,"column_start":5,"column_end":70}},{"value":"/ of the rectangle while the `contains` function is has exclusive","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":118713,"byte_end":118780,"line_start":296,"line_end":296,"column_start":5,"column_end":72}},{"value":"/ semantic on these edges. This means that the right-most and bottom-most","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":118785,"byte_end":118860,"line_start":297,"line_end":297,"column_start":5,"column_end":80}},{"value":"/ points provided to `from_points` will count as not contained by the rect.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":118865,"byte_end":118942,"line_start":298,"line_end":298,"column_start":5,"column_end":82}},{"value":"/ This behavior may change in the future.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":118947,"byte_end":118990,"line_start":299,"line_end":299,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1172},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":120089,"byte_end":120093,"line_start":341,"line_end":341,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Rect<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this rectangle and another rectangle.\n","sig":null,"attributes":[{"value":"/ Linearly interpolate between this rectangle and another rectangle.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":119993,"byte_end":120063,"line_start":339,"line_end":339,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":120068,"byte_end":120077,"line_start":340,"line_end":340,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1176},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":120354,"byte_end":120360,"line_start":353,"line_end":353,"column_start":12,"column_end":18},"name":"center","qualname":"<Rect<T, U>>::center","value":"fn (&self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1180},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":120615,"byte_end":120620,"line_start":364,"line_end":364,"column_start":12,"column_end":17},"name":"union","qualname":"<Rect<T, U>>::union","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":120594,"byte_end":120603,"line_start":363,"line_end":363,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1184},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":121269,"byte_end":121274,"line_start":389,"line_end":389,"column_start":12,"column_end":17},"name":"scale","qualname":"<Rect<T, U>>::scale","value":"fn <S> (&self, x: S, y: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":121248,"byte_end":121257,"line_start":388,"line_end":388,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1189},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":121611,"byte_end":121615,"line_start":402,"line_end":402,"column_start":12,"column_end":16},"name":"area","qualname":"<Rect<T, U>>::area","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":121590,"byte_end":121599,"line_start":401,"line_end":401,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":121793,"byte_end":121801,"line_start":409,"line_end":409,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Rect<T, U>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the size is zero, regardless of the origin's value.\n","sig":null,"attributes":[{"value":"/ Returns true if the size is zero, regardless of the origin's value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":121710,"byte_end":121781,"line_start":408,"line_end":408,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1197},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":121973,"byte_end":121993,"line_start":417,"line_end":417,"column_start":12,"column_end":32},"name":"is_empty_or_negative","qualname":"<Rect<T, U>>::is_empty_or_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":121952,"byte_end":121961,"line_start":416,"line_end":416,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1201},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":122136,"byte_end":122148,"line_start":424,"line_end":424,"column_start":12,"column_end":24},"name":"to_non_empty","qualname":"<Rect<T, U>>::to_non_empty","value":"fn (&self) -> Option<NonEmpty<Self>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":122115,"byte_end":122124,"line_start":423,"line_end":423,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1227},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123330,"byte_end":123340,"line_start":468,"line_end":468,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Rect<T, U>>::to_untyped","value":"fn (&self) -> Rect<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123250,"byte_end":123304,"line_start":466,"line_end":466,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123309,"byte_end":123318,"line_start":467,"line_end":467,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1228},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123515,"byte_end":123527,"line_start":474,"line_end":474,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Rect<T, U>>::from_untyped","value":"fn (r: &Rect<T, UnknownUnit>) -> Rect<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123453,"byte_end":123489,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123494,"byte_end":123503,"line_start":473,"line_end":473,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1229},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123740,"byte_end":123749,"line_start":483,"line_end":483,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Rect<T, U>>::cast_unit","value":"fn <V> (&self) -> Rect<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123697,"byte_end":123714,"line_start":481,"line_end":481,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123719,"byte_end":123728,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":124275,"byte_end":124279,"line_start":495,"line_end":495,"column_start":12,"column_end":16},"name":"cast","qualname":"<Rect<T, U>>::cast","value":"fn <NewT> (&self) -> Rect<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123895,"byte_end":123969,"line_start":489,"line_end":489,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123974,"byte_end":123977,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123982,"byte_end":124069,"line_start":491,"line_end":491,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":124074,"byte_end":124162,"line_start":492,"line_end":492,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":124167,"byte_end":124249,"line_start":493,"line_end":493,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":124254,"byte_end":124263,"line_start":494,"line_end":494,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":124798,"byte_end":124806,"line_start":507,"line_end":507,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Rect<T, U>>::try_cast","value":"fn <NewT> (&self) -> Option<Rect<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":124423,"byte_end":124506,"line_start":502,"line_end":502,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":124511,"byte_end":124514,"line_start":503,"line_end":503,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":124519,"byte_end":124606,"line_start":504,"line_end":504,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":124611,"byte_end":124699,"line_start":505,"line_end":505,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":124704,"byte_end":124786,"line_start":506,"line_end":506,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":125682,"byte_end":125687,"line_start":526,"line_end":526,"column_start":12,"column_end":17},"name":"round","qualname":"<Rect<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a rectangle with edges rounded to integer coordinates, such that\n the returned rectangle has the same set of pixel centers as the original\n one.\n Edges at offset 0.5 round up.\n Suitable for most places where integral device coordinates\n are needed, but note that any translation should be applied first to\n avoid pixel rounding errors.\n Note that this is *not* rounding to nearest integer if the values are negative.\n They are always rounding as floor(n + 0.5).\n","sig":null,"attributes":[{"value":"/ Return a rectangle with edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":125126,"byte_end":125201,"line_start":516,"line_end":516,"column_start":5,"column_end":80}},{"value":"/ the returned rectangle has the same set of pixel centers as the original","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":125206,"byte_end":125282,"line_start":517,"line_end":517,"column_start":5,"column_end":81}},{"value":"/ one.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":125287,"byte_end":125295,"line_start":518,"line_end":518,"column_start":5,"column_end":13}},{"value":"/ Edges at offset 0.5 round up.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":125300,"byte_end":125333,"line_start":519,"line_end":519,"column_start":5,"column_end":38}},{"value":"/ Suitable for most places where integral device coordinates","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":125338,"byte_end":125400,"line_start":520,"line_end":520,"column_start":5,"column_end":67}},{"value":"/ are needed, but note that any translation should be applied first to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":125405,"byte_end":125477,"line_start":521,"line_end":521,"column_start":5,"column_end":77}},{"value":"/ avoid pixel rounding errors.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":125482,"byte_end":125514,"line_start":522,"line_end":522,"column_start":5,"column_end":37}},{"value":"/ Note that this is *not* rounding to nearest integer if the values are negative.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":125519,"byte_end":125602,"line_start":523,"line_end":523,"column_start":5,"column_end":88}},{"value":"/ They are always rounding as floor(n + 0.5).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":125607,"byte_end":125654,"line_start":524,"line_end":524,"column_start":5,"column_end":52}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":125659,"byte_end":125670,"line_start":525,"line_end":525,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1242},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":126044,"byte_end":126052,"line_start":535,"line_end":535,"column_start":12,"column_end":20},"name":"round_in","qualname":"<Rect<T, U>>::round_in","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a rectangle with edges rounded to integer coordinates, such that\n the original rectangle contains the resulting rectangle.\n","sig":null,"attributes":[{"value":"/ Return a rectangle with edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":125876,"byte_end":125951,"line_start":532,"line_end":532,"column_start":5,"column_end":80}},{"value":"/ the original rectangle contains the resulting rectangle.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":125956,"byte_end":126016,"line_start":533,"line_end":533,"column_start":5,"column_end":65}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":126021,"byte_end":126032,"line_start":534,"line_end":534,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":126415,"byte_end":126424,"line_start":544,"line_end":544,"column_start":12,"column_end":21},"name":"round_out","qualname":"<Rect<T, U>>::round_out","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a rectangle with edges rounded to integer coordinates, such that\n the original rectangle is contained in the resulting rectangle.\n","sig":null,"attributes":[{"value":"/ Return a rectangle with edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":126240,"byte_end":126315,"line_start":541,"line_end":541,"column_start":5,"column_end":80}},{"value":"/ the original rectangle is contained in the resulting rectangle.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":126320,"byte_end":126387,"line_start":542,"line_end":542,"column_start":5,"column_end":72}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":126392,"byte_end":126403,"line_start":543,"line_end":543,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1247},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":126755,"byte_end":126761,"line_start":555,"line_end":555,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Rect<T, U>>::to_f32","value":"fn (&self) -> Rect<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` rectangle.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` rectangle.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":126696,"byte_end":126729,"line_start":553,"line_end":553,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":126734,"byte_end":126743,"line_start":554,"line_end":554,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1248},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":126877,"byte_end":126883,"line_start":561,"line_end":561,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Rect<T, U>>::to_f64","value":"fn (&self) -> Rect<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` rectangle.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` rectangle.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":126818,"byte_end":126851,"line_start":559,"line_end":559,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":126856,"byte_end":126865,"line_start":560,"line_end":560,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1249},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127250,"byte_end":127258,"line_start":571,"line_end":571,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Rect<T, U>>::to_usize","value":"fn (&self) -> Rect<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` rectangle, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` rectangle, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":126940,"byte_end":127003,"line_start":565,"line_end":565,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127008,"byte_end":127011,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point rectangles, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127016,"byte_end":127096,"line_start":567,"line_end":567,"column_start":5,"column_end":85}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127101,"byte_end":127176,"line_start":568,"line_end":568,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127181,"byte_end":127224,"line_start":569,"line_end":569,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127229,"byte_end":127238,"line_start":570,"line_end":570,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1250},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127625,"byte_end":127631,"line_start":581,"line_end":581,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Rect<T, U>>::to_u32","value":"fn (&self) -> Rect<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` rectangle, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` rectangle, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127317,"byte_end":127378,"line_start":575,"line_end":575,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127383,"byte_end":127386,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point rectangles, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127391,"byte_end":127471,"line_start":577,"line_end":577,"column_start":5,"column_end":85}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127476,"byte_end":127551,"line_start":578,"line_end":578,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127556,"byte_end":127599,"line_start":579,"line_end":579,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127604,"byte_end":127613,"line_start":580,"line_end":580,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1251},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127996,"byte_end":128002,"line_start":591,"line_end":591,"column_start":12,"column_end":18},"name":"to_u64","qualname":"<Rect<T, U>>::to_u64","value":"fn (&self) -> Rect<u64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u64` rectangle, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u64` rectangle, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127688,"byte_end":127749,"line_start":585,"line_end":585,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127754,"byte_end":127757,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point rectangles, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127762,"byte_end":127842,"line_start":587,"line_end":587,"column_start":5,"column_end":85}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127847,"byte_end":127922,"line_start":588,"line_end":588,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127927,"byte_end":127970,"line_start":589,"line_end":589,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":127975,"byte_end":127984,"line_start":590,"line_end":590,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1252},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":128367,"byte_end":128373,"line_start":601,"line_end":601,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Rect<T, U>>::to_i32","value":"fn (&self) -> Rect<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` rectangle, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` rectangle, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":128059,"byte_end":128120,"line_start":595,"line_end":595,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":128125,"byte_end":128128,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point rectangles, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":128133,"byte_end":128213,"line_start":597,"line_end":597,"column_start":5,"column_end":85}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":128218,"byte_end":128293,"line_start":598,"line_end":598,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":128298,"byte_end":128341,"line_start":599,"line_end":599,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":128346,"byte_end":128355,"line_start":600,"line_end":600,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1253},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":128738,"byte_end":128744,"line_start":611,"line_end":611,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Rect<T, U>>::to_i64","value":"fn (&self) -> Rect<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` rectangle, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` rectangle, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":128430,"byte_end":128491,"line_start":605,"line_end":605,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":128496,"byte_end":128499,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point rectangles, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":128504,"byte_end":128584,"line_start":607,"line_end":607,"column_start":5,"column_end":85}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":128589,"byte_end":128664,"line_start":608,"line_end":608,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":128669,"byte_end":128712,"line_start":609,"line_end":609,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":128717,"byte_end":128726,"line_start":610,"line_end":610,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":1258},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":129024,"byte_end":129028,"line_start":625,"line_end":625,"column_start":14,"column_end":18},"name":"rect","qualname":"::rect::rect","value":"fn <T, U> (x: T, y: T, w: T, h: T) -> Rect<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Rect::new(Point2D::new(x, y), Size2D::new(w, h))`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Rect::new(Point2D::new(x, y), Size2D::new(w, h))`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":128941,"byte_end":129010,"line_start":624,"line_end":624,"column_start":1,"column_end":70}}]},{"kind":"Struct","id":{"krate":0,"index":3663},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":138861,"byte_end":138877,"line_start":21,"line_end":21,"column_start":12,"column_end":28},"name":"RigidTransform3D","qualname":"::rigid::RigidTransform3D","value":"RigidTransform3D { rotation, translation }","parent":null,"children":[{"krate":0,"index":3667},{"krate":0,"index":3668}],"decl_id":null,"docs":" A rigid transformation. All lengths are preserved under such a transformation.","sig":null,"attributes":[{"value":"/ A rigid transformation. All lengths are preserved under such a transformation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":138353,"byte_end":138435,"line_start":10,"line_end":10,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":138436,"byte_end":138439,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":138440,"byte_end":138443,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Internally, this is a rotation and a translation, with the rotation","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":138444,"byte_end":138515,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"/ applied first (i.e. `Rotation * Translation`, in row-vector notation)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":138516,"byte_end":138589,"line_start":14,"line_end":14,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":138590,"byte_end":138593,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ This can be more efficient to use over full matrices, especially if you","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":138594,"byte_end":138669,"line_start":16,"line_end":16,"column_start":1,"column_end":76}},{"value":"/ have to deal with the decomposed quantities often.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":138670,"byte_end":138724,"line_start":17,"line_end":17,"column_start":1,"column_end":55}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":138839,"byte_end":138849,"line_start":20,"line_end":20,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3667},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":138901,"byte_end":138909,"line_start":22,"line_end":22,"column_start":9,"column_end":17},"name":"rotation","qualname":"::rigid::RigidTransform3D::rotation","value":"rotation::Rotation3D<T, Src, Dst>","parent":{"krate":0,"index":3663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3668},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":138944,"byte_end":138955,"line_start":23,"line_end":23,"column_start":9,"column_end":20},"name":"translation","qualname":"::rigid::RigidTransform3D::translation","value":"vector::Vector3D<T, Dst>","parent":{"krate":0,"index":3663},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1274},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":139140,"byte_end":139143,"line_start":29,"line_end":29,"column_start":18,"column_end":21},"name":"new","qualname":"<RigidTransform3D<T, Src, Dst>>::new","value":"fn (rotation: Rotation3D<T, Src, Dst>, translation: Vector3D<T, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new rigid transformation, where the `rotation` applies first\n","sig":null,"attributes":[{"value":"/ Construct a new rigid transformation, where the `rotation` applies first","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":139032,"byte_end":139108,"line_start":27,"line_end":27,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":139113,"byte_end":139122,"line_start":28,"line_end":28,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1279},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":139368,"byte_end":139377,"line_start":38,"line_end":38,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<RigidTransform3D<T, Src, Dst>>::cast_unit","value":"fn <Src2, Dst2> (&self) -> RigidTransform3D<T, Src2, Dst2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1286},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":139720,"byte_end":139728,"line_start":49,"line_end":49,"column_start":12,"column_end":20},"name":"identity","qualname":"<RigidTransform3D<T, Src, Dst>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct an identity transform\n","sig":null,"attributes":[{"value":"/ Construct an identity transform","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":139659,"byte_end":139694,"line_start":47,"line_end":47,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":139699,"byte_end":139708,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1287},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":139971,"byte_end":139988,"line_start":58,"line_end":58,"column_start":12,"column_end":29},"name":"new_from_reversed","qualname":"<RigidTransform3D<T, Src, Dst>>::new_from_reversed","value":"fn (translation: Vector3D<T, Src>, rotation: Rotation3D<T, Src, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a new rigid transformation, where the `translation` applies first\n","sig":null,"attributes":[{"value":"/ Construct a new rigid transformation, where the `translation` applies first","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":139866,"byte_end":139945,"line_start":56,"line_end":56,"column_start":5,"column_end":84}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":139950,"byte_end":139959,"line_start":57,"line_end":57,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1288},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":140546,"byte_end":140559,"line_start":79,"line_end":79,"column_start":12,"column_end":25},"name":"from_rotation","qualname":"<RigidTransform3D<T, Src, Dst>>::from_rotation","value":"fn (rotation: Rotation3D<T, Src, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":140525,"byte_end":140534,"line_start":78,"line_end":78,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1289},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":140727,"byte_end":140743,"line_start":87,"line_end":87,"column_start":12,"column_end":28},"name":"from_translation","qualname":"<RigidTransform3D<T, Src, Dst>>::from_translation","value":"fn (translation: Vector3D<T, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":140706,"byte_end":140715,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1290},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":141064,"byte_end":141082,"line_start":98,"line_end":98,"column_start":12,"column_end":30},"name":"decompose_reversed","qualname":"<RigidTransform3D<T, Src, Dst>>::decompose_reversed","value":"fn (&self) -> (Vector3D<T, Src>, Rotation3D<T, Src, Dst>)","parent":null,"children":[],"decl_id":null,"docs":" Decompose this into a translation and an rotation to be applied in the opposite order","sig":null,"attributes":[{"value":"/ Decompose this into a translation and an rotation to be applied in the opposite order","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":140892,"byte_end":140981,"line_start":94,"line_end":94,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":140986,"byte_end":140989,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ i.e., the translation is applied _first_","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":140994,"byte_end":141038,"line_start":96,"line_end":96,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":141043,"byte_end":141052,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1291},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":141694,"byte_end":141708,"line_start":115,"line_end":115,"column_start":12,"column_end":26},"name":"post_transform","qualname":"<RigidTransform3D<T, Src, Dst>>::post_transform","value":"fn <Dst2> (&self, other: &RigidTransform3D<T, Dst, Dst2>) -> RigidTransform3D<T, Src, Dst2>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two transforms such that\n other's transformation applies after self's transformation.","sig":null,"attributes":[{"value":"/ Returns the multiplication of the two transforms such that","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":141464,"byte_end":141526,"line_start":110,"line_end":110,"column_start":5,"column_end":67}},{"value":"/ other's transformation applies after self's transformation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":141531,"byte_end":141594,"line_start":111,"line_end":111,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":141599,"byte_end":141602,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ i.e., this produces `self * other` in row-vector notation","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":141607,"byte_end":141668,"line_start":113,"line_end":113,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":141673,"byte_end":141682,"line_start":114,"line_end":114,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1293},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":142805,"byte_end":142818,"line_start":147,"line_end":147,"column_start":12,"column_end":25},"name":"pre_transform","qualname":"<RigidTransform3D<T, Src, Dst>>::pre_transform","value":"fn <Src2> (&self, other: &RigidTransform3D<T, Src2, Src>) -> RigidTransform3D<T, Src2, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two transforms such that\n self's transformation applies after other's transformation.","sig":null,"attributes":[{"value":"/ Returns the multiplication of the two transforms such that","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":142575,"byte_end":142637,"line_start":142,"line_end":142,"column_start":5,"column_end":67}},{"value":"/ self's transformation applies after other's transformation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":142642,"byte_end":142705,"line_start":143,"line_end":143,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":142710,"byte_end":142713,"line_start":144,"line_end":144,"column_start":5,"column_end":8}},{"value":"/ i.e., this produces `other * self` in row-vector notation","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":142718,"byte_end":142779,"line_start":145,"line_end":145,"column_start":5,"column_end":66}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":142784,"byte_end":142793,"line_start":146,"line_end":146,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1295},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":143034,"byte_end":143041,"line_start":156,"line_end":156,"column_start":12,"column_end":19},"name":"inverse","qualname":"<RigidTransform3D<T, Src, Dst>>::inverse","value":"fn (&self) -> RigidTransform3D<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Inverts the transformation\n","sig":null,"attributes":[{"value":"/ Inverts the transformation","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":142978,"byte_end":143008,"line_start":154,"line_end":154,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":143013,"byte_end":143022,"line_start":155,"line_end":155,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1296},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":143627,"byte_end":143639,"line_start":175,"line_end":175,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<RigidTransform3D<T, Src, Dst>>::to_transform","value":"fn (&self) -> Transform3D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1297},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":143910,"byte_end":143920,"line_start":186,"line_end":186,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<RigidTransform3D<T, Src, Dst>>::to_untyped","value":"fn (&self) -> RigidTransform3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":143830,"byte_end":143884,"line_start":184,"line_end":184,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":143889,"byte_end":143898,"line_start":185,"line_end":185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1298},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":144195,"byte_end":144207,"line_start":195,"line_end":195,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<RigidTransform3D<T, Src, Dst>>::from_untyped","value":"fn (transform: &RigidTransform3D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":144133,"byte_end":144169,"line_start":193,"line_end":193,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":144174,"byte_end":144183,"line_start":194,"line_end":194,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1343},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":148507,"byte_end":148517,"line_start":27,"line_end":27,"column_start":12,"column_end":22},"name":"Rotation2D","qualname":"::rotation::Rotation2D","value":"Rotation2D { angle, _unit }","parent":null,"children":[{"krate":0,"index":1347},{"krate":0,"index":1348}],"decl_id":null,"docs":" A transform that can represent rotations in 2d, represented as an angle in radians.\n","sig":null,"attributes":[{"value":"/ A transform that can represent rotations in 2d, represented as an angle in radians.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":148210,"byte_end":148297,"line_start":23,"line_end":23,"column_start":1,"column_end":88}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":148298,"byte_end":148308,"line_start":24,"line_end":24,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1347},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":148541,"byte_end":148546,"line_start":28,"line_end":28,"column_start":9,"column_end":14},"name":"angle","qualname":"::rotation::Rotation2D::angle","value":"T","parent":{"krate":0,"index":1343},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1348},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":148579,"byte_end":148584,"line_start":30,"line_end":30,"column_start":9,"column_end":14},"name":"_unit","qualname":"::rotation::Rotation2D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":1343},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1377},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":149394,"byte_end":149397,"line_start":65,"line_end":65,"column_start":12,"column_end":15},"name":"new","qualname":"<Rotation2D<T, Src, Dst>>::new","value":"fn (angle: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation from an angle in radians.\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":149320,"byte_end":149329,"line_start":63,"line_end":63,"column_start":5,"column_end":14}},{"value":"/ Creates a rotation from an angle in radians.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":149334,"byte_end":149382,"line_start":64,"line_end":64,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1378},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":149540,"byte_end":149547,"line_start":72,"line_end":72,"column_start":12,"column_end":19},"name":"radians","qualname":"<Rotation2D<T, Src, Dst>>::radians","value":"fn (angle: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1379},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":149680,"byte_end":149688,"line_start":78,"line_end":78,"column_start":12,"column_end":20},"name":"identity","qualname":"<Rotation2D<T, Src, Dst>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates the identity rotation.\n","sig":null,"attributes":[{"value":"/ Creates the identity rotation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":149620,"byte_end":149654,"line_start":76,"line_end":76,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":149659,"byte_end":149668,"line_start":77,"line_end":77,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1384},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":149849,"byte_end":149858,"line_start":88,"line_end":88,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Rotation2D<T, Src, Dst>>::cast_unit","value":"fn <Src2, Dst2> (&self) -> Rotation2D<T, Src2, Dst2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":149828,"byte_end":149837,"line_start":87,"line_end":87,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1391},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":150145,"byte_end":150154,"line_start":101,"line_end":101,"column_start":12,"column_end":21},"name":"get_angle","qualname":"<Rotation2D<T, Src, Dst>>::get_angle","value":"fn (&self) -> Angle<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns self.angle as a strongly typed `Angle<T>`.\n","sig":null,"attributes":[{"value":"/ Returns self.angle as a strongly typed `Angle<T>`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":150079,"byte_end":150133,"line_start":100,"line_end":100,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":150585,"byte_end":150590,"line_start":120,"line_end":120,"column_start":12,"column_end":17},"name":"to_3d","qualname":"<Rotation2D<T, Src, Dst>>::to_3d","value":"fn (&self) -> Rotation3D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Creates a 3d rotation (around the z axis) from this 2d rotation.\n","sig":null,"attributes":[{"value":"/ Creates a 3d rotation (around the z axis) from this 2d rotation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":150491,"byte_end":150559,"line_start":118,"line_end":118,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":150564,"byte_end":150573,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":150752,"byte_end":150759,"line_start":126,"line_end":126,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Rotation2D<T, Src, Dst>>::inverse","value":"fn (&self) -> Rotation2D<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse of this rotation.\n","sig":null,"attributes":[{"value":"/ Returns the inverse of this rotation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":150685,"byte_end":150726,"line_start":124,"line_end":124,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":150731,"byte_end":150740,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1398},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":150955,"byte_end":150965,"line_start":132,"line_end":132,"column_start":12,"column_end":22},"name":"pre_rotate","qualname":"<Rotation2D<T, Src, Dst>>::pre_rotate","value":"fn <NewSrc> (&self, other: &Rotation2D<T, NewSrc, Src>) -> Rotation2D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns a rotation representing the other rotation followed by this rotation.\n","sig":null,"attributes":[{"value":"/ Returns a rotation representing the other rotation followed by this rotation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":150848,"byte_end":150929,"line_start":130,"line_end":130,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":150934,"byte_end":150943,"line_start":131,"line_end":131,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":151244,"byte_end":151255,"line_start":141,"line_end":141,"column_start":12,"column_end":23},"name":"post_rotate","qualname":"<Rotation2D<T, Src, Dst>>::post_rotate","value":"fn <NewDst> (&self, other: &Rotation2D<T, Dst, NewDst>) -> Rotation2D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns a rotation representing this rotation followed by the other rotation.\n","sig":null,"attributes":[{"value":"/ Returns a rotation representing this rotation followed by the other rotation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":151137,"byte_end":151218,"line_start":139,"line_end":139,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":151223,"byte_end":151232,"line_start":140,"line_end":140,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1402},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":151589,"byte_end":151604,"line_start":152,"line_end":152,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Rotation2D<T, Src, Dst>>::transform_point","value":"fn (&self, point: Point2D<T, Src>) -> Point2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d point transformed by this rotation.","sig":null,"attributes":[{"value":"/ Returns the given 2d point transformed by this rotation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":151404,"byte_end":151464,"line_start":148,"line_end":148,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":151469,"byte_end":151472,"line_start":149,"line_end":149,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":151477,"byte_end":151563,"line_start":150,"line_end":150,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":151568,"byte_end":151577,"line_start":151,"line_end":151,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1403},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":151984,"byte_end":152000,"line_start":161,"line_end":161,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Rotation2D<T, Src, Dst>>::transform_vector","value":"fn (&self, vector: Vector2D<T, Src>) -> Vector2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d vector transformed by this rotation.","sig":null,"attributes":[{"value":"/ Returns the given 2d vector transformed by this rotation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":151798,"byte_end":151859,"line_start":157,"line_end":157,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":151864,"byte_end":151867,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":151872,"byte_end":151958,"line_start":159,"line_end":159,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":151963,"byte_end":151972,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":152207,"byte_end":152217,"line_start":167,"line_end":167,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Rotation2D<T, Src, Dst>>::to_untyped","value":"fn (&self) -> Rotation2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":152127,"byte_end":152181,"line_start":165,"line_end":165,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":152186,"byte_end":152195,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1405},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":152437,"byte_end":152449,"line_start":176,"line_end":176,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Rotation2D<T, Src, Dst>>::from_untyped","value":"fn (r: &Rotation2D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":152375,"byte_end":152411,"line_start":174,"line_end":174,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":152416,"byte_end":152425,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1410},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":152934,"byte_end":152946,"line_start":198,"line_end":198,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Rotation2D<T, Src, Dst>>::to_transform","value":"fn (&self) -> Transform2D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the matrix representation of this rotation.\n","sig":null,"attributes":[{"value":"/ Returns the matrix representation of this rotation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":152853,"byte_end":152908,"line_start":196,"line_end":196,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":152913,"byte_end":152922,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":153767,"byte_end":153777,"line_start":215,"line_end":215,"column_start":12,"column_end":22},"name":"Rotation3D","qualname":"::rotation::Rotation3D","value":"Rotation3D { i, j, k, r, _unit }","parent":null,"children":[{"krate":0,"index":1415},{"krate":0,"index":1416},{"krate":0,"index":1417},{"krate":0,"index":1418},{"krate":0,"index":1419}],"decl_id":null,"docs":" A transform that can represent rotations in 3d, represented as a quaternion.","sig":null,"attributes":[{"value":"/ A transform that can represent rotations in 3d, represented as a quaternion.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":153048,"byte_end":153128,"line_start":203,"line_end":203,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":153129,"byte_end":153132,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ Most methods expect the quaternion to be normalized.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":153133,"byte_end":153189,"line_start":205,"line_end":205,"column_start":1,"column_end":57}},{"value":"/ When in doubt, use `unit_quaternion` instead of `quaternion` to create","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":153190,"byte_end":153264,"line_start":206,"line_end":206,"column_start":1,"column_end":75}},{"value":"/ a rotation as the former will ensure that its result is normalized.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":153265,"byte_end":153336,"line_start":207,"line_end":207,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":153337,"byte_end":153340,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"/ Some people use the `x, y, z, w` (or `w, x, y, z`) notations. The equivalence is","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":153341,"byte_end":153425,"line_start":209,"line_end":209,"column_start":1,"column_end":85}},{"value":"/ as follows: `x -> i`, `y -> j`, `z -> k`, `w -> r`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":153426,"byte_end":153481,"line_start":210,"line_end":210,"column_start":1,"column_end":56}},{"value":"/ The memory layout of this type corresponds to the `x, y, z, w` notation","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":153482,"byte_end":153557,"line_start":211,"line_end":211,"column_start":1,"column_end":76}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":153558,"byte_end":153568,"line_start":212,"line_end":212,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":153859,"byte_end":153860,"line_start":217,"line_end":217,"column_start":9,"column_end":10},"name":"i","qualname":"::rotation::Rotation3D::i","value":"T","parent":{"krate":0,"index":1411},"children":[],"decl_id":null,"docs":" Component multiplied by the imaginary number `i`.\n","sig":null,"attributes":[{"value":"/ Component multiplied by the imaginary number `i`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":153797,"byte_end":153850,"line_start":216,"line_end":216,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1416},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":153931,"byte_end":153932,"line_start":219,"line_end":219,"column_start":9,"column_end":10},"name":"j","qualname":"::rotation::Rotation3D::j","value":"T","parent":{"krate":0,"index":1411},"children":[],"decl_id":null,"docs":" Component multiplied by the imaginary number `j`.\n","sig":null,"attributes":[{"value":"/ Component multiplied by the imaginary number `j`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":153869,"byte_end":153922,"line_start":218,"line_end":218,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1417},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":154003,"byte_end":154004,"line_start":221,"line_end":221,"column_start":9,"column_end":10},"name":"k","qualname":"::rotation::Rotation3D::k","value":"T","parent":{"krate":0,"index":1411},"children":[],"decl_id":null,"docs":" Component multiplied by the imaginary number `k`.\n","sig":null,"attributes":[{"value":"/ Component multiplied by the imaginary number `k`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":153941,"byte_end":153994,"line_start":220,"line_end":220,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":1418},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":154040,"byte_end":154041,"line_start":223,"line_end":223,"column_start":9,"column_end":10},"name":"r","qualname":"::rotation::Rotation3D::r","value":"T","parent":{"krate":0,"index":1411},"children":[],"decl_id":null,"docs":" The real part.\n","sig":null,"attributes":[{"value":"/ The real part.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":154013,"byte_end":154031,"line_start":222,"line_end":222,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":154073,"byte_end":154078,"line_start":225,"line_end":225,"column_start":9,"column_end":14},"name":"_unit","qualname":"::rotation::Rotation3D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":1411},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1448},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155445,"byte_end":155455,"line_start":275,"line_end":275,"column_start":12,"column_end":22},"name":"quaternion","qualname":"<Rotation3D<T, Src, Dst>>::quaternion","value":"fn (a: T, b: T, c: T, r: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around from a quaternion representation.","sig":null,"attributes":[{"value":"/ Creates a rotation around from a quaternion representation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155058,"byte_end":155121,"line_start":267,"line_end":267,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155126,"byte_end":155129,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ The parameters are a, b, c and r compose the quaternion `a*i + b*j + c*k + r`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155134,"byte_end":155215,"line_start":269,"line_end":269,"column_start":5,"column_end":86}},{"value":"/ where `a`, `b` and `c` describe the vector part and the last parameter `r` is","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155220,"byte_end":155301,"line_start":270,"line_end":270,"column_start":5,"column_end":86}},{"value":"/ the real part.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155306,"byte_end":155324,"line_start":271,"line_end":271,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155329,"byte_end":155332,"line_start":272,"line_end":272,"column_start":5,"column_end":8}},{"value":"/ The resulting quaternion is not necessarily normalized. See `unit_quaternion`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155337,"byte_end":155419,"line_start":273,"line_end":273,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155424,"byte_end":155433,"line_start":274,"line_end":274,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155781,"byte_end":155792,"line_start":292,"line_end":292,"column_start":12,"column_end":23},"name":"vector_part","qualname":"<Rotation3D<T, Src, Dst>>::vector_part","value":"fn (&self) -> Vector3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector part (i, j, k) of this quaternion.\n","sig":null,"attributes":[{"value":"/ Returns the vector part (i, j, k) of this quaternion.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155698,"byte_end":155755,"line_start":290,"line_end":290,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155760,"byte_end":155769,"line_start":291,"line_end":291,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155899,"byte_end":155908,"line_start":297,"line_end":297,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Rotation3D<T, Src, Dst>>::cast_unit","value":"fn <Src2, Dst2> (&self) -> Rotation3D<T, Src2, Dst2>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155878,"byte_end":155887,"line_start":296,"line_end":296,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1461},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":156250,"byte_end":156258,"line_start":314,"line_end":314,"column_start":12,"column_end":20},"name":"identity","qualname":"<Rotation3D<T, Src, Dst>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates the identity rotation.\n","sig":null,"attributes":[{"value":"/ Creates the identity rotation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":156190,"byte_end":156224,"line_start":312,"line_end":312,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":156229,"byte_end":156238,"line_start":313,"line_end":313,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1462},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":156720,"byte_end":156735,"line_start":326,"line_end":326,"column_start":12,"column_end":27},"name":"unit_quaternion","qualname":"<Rotation3D<T, Src, Dst>>::unit_quaternion","value":"fn (i: T, j: T, k: T, r: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around from a quaternion representation and normalizes it.","sig":null,"attributes":[{"value":"/ Creates a rotation around from a quaternion representation and normalizes it.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":156388,"byte_end":156469,"line_start":320,"line_end":320,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":156474,"byte_end":156477,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ The parameters are a, b, c and r compose the quaternion `a*i + b*j + c*k + r`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":156482,"byte_end":156563,"line_start":322,"line_end":322,"column_start":5,"column_end":86}},{"value":"/ before normalization, where `a`, `b` and `c` describe the vector part and the","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":156568,"byte_end":156649,"line_start":323,"line_end":323,"column_start":5,"column_end":86}},{"value":"/ last parameter `r` is the real part.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":156654,"byte_end":156694,"line_start":324,"line_end":324,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":156699,"byte_end":156708,"line_start":325,"line_end":325,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1463},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":156885,"byte_end":156896,"line_start":331,"line_end":331,"column_start":12,"column_end":23},"name":"around_axis","qualname":"<Rotation3D<T, Src, Dst>>::around_axis","value":"fn (axis: Vector3D<T, Src>, angle: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around a given axis.\n","sig":null,"attributes":[{"value":"/ Creates a rotation around a given axis.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":156830,"byte_end":156873,"line_start":330,"line_end":330,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":157214,"byte_end":157222,"line_start":339,"line_end":339,"column_start":12,"column_end":20},"name":"around_x","qualname":"<Rotation3D<T, Src, Dst>>::around_x","value":"fn (angle: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around the x axis.\n","sig":null,"attributes":[{"value":"/ Creates a rotation around the x axis.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":157161,"byte_end":157202,"line_start":338,"line_end":338,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1465},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":157487,"byte_end":157495,"line_start":347,"line_end":347,"column_start":12,"column_end":20},"name":"around_y","qualname":"<Rotation3D<T, Src, Dst>>::around_y","value":"fn (angle: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around the y axis.\n","sig":null,"attributes":[{"value":"/ Creates a rotation around the y axis.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":157434,"byte_end":157475,"line_start":346,"line_end":346,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1466},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":157760,"byte_end":157768,"line_start":355,"line_end":355,"column_start":12,"column_end":20},"name":"around_z","qualname":"<Rotation3D<T, Src, Dst>>::around_z","value":"fn (angle: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation around the z axis.\n","sig":null,"attributes":[{"value":"/ Creates a rotation around the z axis.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":157707,"byte_end":157748,"line_start":354,"line_end":354,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1467},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":158328,"byte_end":158333,"line_start":369,"line_end":369,"column_start":12,"column_end":17},"name":"euler","qualname":"<Rotation3D<T, Src, Dst>>::euler","value":"fn (roll: Angle<T>, pitch: Angle<T>, yaw: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a rotation from Euler angles.","sig":null,"attributes":[{"value":"/ Creates a rotation from Euler angles.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":157980,"byte_end":158021,"line_start":362,"line_end":362,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":158026,"byte_end":158029,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ The rotations are applied in roll then pitch then yaw order.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":158034,"byte_end":158098,"line_start":364,"line_end":364,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":158103,"byte_end":158106,"line_start":365,"line_end":365,"column_start":5,"column_end":8}},{"value":"/  - Roll (also called bank) is a rotation around the x axis.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":158111,"byte_end":158174,"line_start":366,"line_end":366,"column_start":5,"column_end":68}},{"value":"/  - Pitch (also called bearing) is a rotation around the y axis.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":158179,"byte_end":158246,"line_start":367,"line_end":367,"column_start":5,"column_end":72}},{"value":"/  - Yaw (also called heading) is a rotation around the z axis.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":158251,"byte_end":158316,"line_start":368,"line_end":368,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1468},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":158899,"byte_end":158906,"line_start":386,"line_end":386,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Rotation3D<T, Src, Dst>>::inverse","value":"fn (&self) -> Rotation3D<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse of this rotation.\n","sig":null,"attributes":[{"value":"/ Returns the inverse of this rotation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":158832,"byte_end":158873,"line_start":384,"line_end":384,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":158878,"byte_end":158887,"line_start":385,"line_end":385,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":159086,"byte_end":159090,"line_start":392,"line_end":392,"column_start":12,"column_end":16},"name":"norm","qualname":"<Rotation3D<T, Src, Dst>>::norm","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes the norm of this quaternion\n","sig":null,"attributes":[{"value":"/ Computes the norm of this quaternion","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":159020,"byte_end":159060,"line_start":390,"line_end":390,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":159065,"byte_end":159074,"line_start":391,"line_end":391,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":159171,"byte_end":159182,"line_start":397,"line_end":397,"column_start":12,"column_end":23},"name":"square_norm","qualname":"<Rotation3D<T, Src, Dst>>::square_norm","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":159150,"byte_end":159159,"line_start":396,"line_end":396,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1471},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":159356,"byte_end":159365,"line_start":403,"line_end":403,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Rotation3D<T, Src, Dst>>::normalize","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a unit quaternion from this one.\n","sig":null,"attributes":[{"value":"/ Returns a unit quaternion from this one.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":159286,"byte_end":159330,"line_start":401,"line_end":401,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":159335,"byte_end":159344,"line_start":402,"line_end":402,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1472},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":159456,"byte_end":159469,"line_start":408,"line_end":408,"column_start":12,"column_end":25},"name":"is_normalized","qualname":"<Rotation3D<T, Src, Dst>>::is_normalized","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":159435,"byte_end":159444,"line_start":407,"line_end":407,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1473},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":159794,"byte_end":159799,"line_start":419,"line_end":419,"column_start":12,"column_end":17},"name":"slerp","qualname":"<Rotation3D<T, Src, Dst>>::slerp","value":"fn (&self, other: &Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Spherical linear interpolation between this rotation and another rotation.","sig":null,"attributes":[{"value":"/ Spherical linear interpolation between this rotation and another rotation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":159644,"byte_end":159722,"line_start":416,"line_end":416,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":159727,"byte_end":159730,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ `t` is expected to be between zero and one.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":159735,"byte_end":159782,"line_start":418,"line_end":418,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1474},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":161061,"byte_end":161065,"line_start":460,"line_end":460,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Rotation3D<T, Src, Dst>>::lerp","value":"fn (&self, other: &Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Basic Linear interpolation between this rotation and another rotation.\n","sig":null,"attributes":[{"value":"/ Basic Linear interpolation between this rotation and another rotation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":160961,"byte_end":161035,"line_start":458,"line_end":458,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":161040,"byte_end":161049,"line_start":459,"line_end":459,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1475},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":161373,"byte_end":161390,"line_start":468,"line_end":468,"column_start":12,"column_end":29},"name":"transform_point3d","qualname":"<Rotation3D<T, Src, Dst>>::transform_point3d","value":"fn (&self, point: Point3D<T, Src>) -> Point3D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 3d point transformed by this rotation.","sig":null,"attributes":[{"value":"/ Returns the given 3d point transformed by this rotation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":161202,"byte_end":161262,"line_start":465,"line_end":465,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":161267,"byte_end":161270,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":161275,"byte_end":161361,"line_start":467,"line_end":467,"column_start":5,"column_end":91}}]},{"kind":"Method","id":{"krate":0,"index":1476},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":162138,"byte_end":162155,"line_start":488,"line_end":488,"column_start":12,"column_end":29},"name":"transform_point2d","qualname":"<Rotation3D<T, Src, Dst>>::transform_point2d","value":"fn (&self, point: Point2D<T, Src>) -> Point2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d point transformed by this rotation then projected on the xy plane.","sig":null,"attributes":[{"value":"/ Returns the given 2d point transformed by this rotation then projected on the xy plane.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":161922,"byte_end":162013,"line_start":484,"line_end":484,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":162018,"byte_end":162021,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":162026,"byte_end":162112,"line_start":486,"line_end":486,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":162117,"byte_end":162126,"line_start":487,"line_end":487,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1477},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":162495,"byte_end":162513,"line_start":499,"line_end":499,"column_start":12,"column_end":30},"name":"transform_vector3d","qualname":"<Rotation3D<T, Src, Dst>>::transform_vector3d","value":"fn (&self, vector: Vector3D<T, Src>) -> Vector3D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 3d vector transformed by this rotation.","sig":null,"attributes":[{"value":"/ Returns the given 3d vector transformed by this rotation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":162308,"byte_end":162369,"line_start":495,"line_end":495,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":162374,"byte_end":162377,"line_start":496,"line_end":496,"column_start":5,"column_end":8}},{"value":"/ The input vector must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":162382,"byte_end":162469,"line_start":497,"line_end":497,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":162474,"byte_end":162483,"line_start":498,"line_end":498,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1478},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":162898,"byte_end":162916,"line_start":510,"line_end":510,"column_start":12,"column_end":30},"name":"transform_vector2d","qualname":"<Rotation3D<T, Src, Dst>>::transform_vector2d","value":"fn (&self, vector: Vector2D<T, Src>) -> Vector2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d vector transformed by this rotation then projected on the xy plane.","sig":null,"attributes":[{"value":"/ Returns the given 2d vector transformed by this rotation then projected on the xy plane.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":162680,"byte_end":162772,"line_start":506,"line_end":506,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":162777,"byte_end":162780,"line_start":507,"line_end":507,"column_start":5,"column_end":8}},{"value":"/ The input vector must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":162785,"byte_end":162872,"line_start":508,"line_end":508,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":162877,"byte_end":162886,"line_start":509,"line_end":509,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1479},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":163155,"byte_end":163167,"line_start":519,"line_end":519,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Rotation3D<T, Src, Dst>>::to_transform","value":"fn (&self) -> Transform3D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the matrix representation of this rotation.\n","sig":null,"attributes":[{"value":"/ Returns the matrix representation of this rotation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":163074,"byte_end":163129,"line_start":517,"line_end":517,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":163134,"byte_end":163143,"line_start":518,"line_end":518,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":164415,"byte_end":164425,"line_start":574,"line_end":574,"column_start":12,"column_end":22},"name":"pre_rotate","qualname":"<Rotation3D<T, Src, Dst>>::pre_rotate","value":"fn <NewSrc> (&self, other: &Rotation3D<T, NewSrc, Src>) -> Rotation3D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns a rotation representing the other rotation followed by this rotation.\n","sig":null,"attributes":[{"value":"/ Returns a rotation representing the other rotation followed by this rotation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":164322,"byte_end":164403,"line_start":573,"line_end":573,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":1482},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":165123,"byte_end":165134,"line_start":592,"line_end":592,"column_start":12,"column_end":23},"name":"post_rotate","qualname":"<Rotation3D<T, Src, Dst>>::post_rotate","value":"fn <NewDst> (&self, other: &Rotation3D<T, Dst, NewDst>) -> Rotation3D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns a rotation representing this rotation followed by the other rotation.\n","sig":null,"attributes":[{"value":"/ Returns a rotation representing this rotation followed by the other rotation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":165016,"byte_end":165097,"line_start":590,"line_end":590,"column_start":5,"column_end":86}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":165102,"byte_end":165111,"line_start":591,"line_end":591,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1487},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":166208,"byte_end":166218,"line_start":637,"line_end":637,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Rotation3D<T, Src, Dst>>::to_untyped","value":"fn (&self) -> Rotation3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":166128,"byte_end":166182,"line_start":635,"line_end":635,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":166187,"byte_end":166196,"line_start":636,"line_end":636,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1488},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":166499,"byte_end":166511,"line_start":649,"line_end":649,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Rotation3D<T, Src, Dst>>::from_untyped","value":"fn (r: &Rotation3D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":166437,"byte_end":166473,"line_start":647,"line_end":647,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":166478,"byte_end":166487,"line_start":648,"line_end":648,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":1525},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177792,"byte_end":177797,"line_start":45,"line_end":45,"column_start":12,"column_end":17},"name":"Scale","qualname":"::scale::Scale","value":"","parent":null,"children":[],"decl_id":null,"docs":" A scaling factor between two different units of measurement.","sig":null,"attributes":[{"value":"/ A scaling factor between two different units of measurement.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":176857,"byte_end":176921,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":176922,"byte_end":176925,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ This is effectively a type-safe float, intended to be used in combination with other types like","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":176926,"byte_end":177025,"line_start":25,"line_end":25,"column_start":1,"column_end":100}},{"value":"/ `length::Length` to enforce conversion between systems of measurement at compile time.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177026,"byte_end":177116,"line_start":26,"line_end":26,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177117,"byte_end":177120,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ `Src` and `Dst` represent the units before and after multiplying a value by a `Scale`. They","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177121,"byte_end":177216,"line_start":28,"line_end":28,"column_start":1,"column_end":96}},{"value":"/ may be types without values, such as empty enums.  For example:","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177217,"byte_end":177284,"line_start":29,"line_end":29,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177285,"byte_end":177288,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177289,"byte_end":177300,"line_start":31,"line_end":31,"column_start":1,"column_end":12}},{"value":"/ use euclid::Scale;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177301,"byte_end":177323,"line_start":32,"line_end":32,"column_start":1,"column_end":23}},{"value":"/ use euclid::Length;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177324,"byte_end":177347,"line_start":33,"line_end":33,"column_start":1,"column_end":24}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177348,"byte_end":177363,"line_start":34,"line_end":34,"column_start":1,"column_end":16}},{"value":"/ enum Inch {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177364,"byte_end":177381,"line_start":35,"line_end":35,"column_start":1,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177382,"byte_end":177385,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ let mm_per_inch: Scale<f32, Inch, Mm> = Scale::new(25.4);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177386,"byte_end":177447,"line_start":37,"line_end":37,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177448,"byte_end":177451,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let one_foot: Length<f32, Inch> = Length::new(12.0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177452,"byte_end":177508,"line_start":39,"line_end":39,"column_start":1,"column_end":57}},{"value":"/ let one_foot_in_mm: Length<f32, Mm> = one_foot * mm_per_inch;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177509,"byte_end":177574,"line_start":40,"line_end":40,"column_start":1,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177575,"byte_end":177582,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177583,"byte_end":177593,"line_start":42,"line_end":42,"column_start":1,"column_end":11}}]},{"kind":"Method","id":{"krate":0,"index":1536},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177934,"byte_end":177937,"line_start":49,"line_end":49,"column_start":18,"column_end":21},"name":"new","qualname":"<Scale<T, Src, Dst>>::new","value":"fn (x: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177907,"byte_end":177916,"line_start":48,"line_end":48,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1537},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178365,"byte_end":178380,"line_start":67,"line_end":67,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Scale<T, Src, Dst>>::transform_point","value":"fn (&self, point: Point2D<T, Src>) -> Point2D<T::Output, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given point transformed by this scale.","sig":null,"attributes":[{"value":"/ Returns the given point transformed by this scale.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177995,"byte_end":178049,"line_start":53,"line_end":53,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178054,"byte_end":178057,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178062,"byte_end":178075,"line_start":55,"line_end":55,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178080,"byte_end":178083,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178088,"byte_end":178099,"line_start":57,"line_end":57,"column_start":5,"column_end":16}},{"value":"/ use euclid::{Scale, point2};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178104,"byte_end":178136,"line_start":58,"line_end":58,"column_start":5,"column_end":37}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178141,"byte_end":178156,"line_start":59,"line_end":59,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178161,"byte_end":178176,"line_start":60,"line_end":60,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178181,"byte_end":178184,"line_start":61,"line_end":61,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178189,"byte_end":178240,"line_start":62,"line_end":62,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178245,"byte_end":178248,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.transform_point(point2(42, -42)), point2(420, -420));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178253,"byte_end":178327,"line_start":64,"line_end":64,"column_start":5,"column_end":79}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178332,"byte_end":178339,"line_start":65,"line_end":65,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178344,"byte_end":178353,"line_start":66,"line_end":66,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1538},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178916,"byte_end":178932,"line_start":87,"line_end":87,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Scale<T, Src, Dst>>::transform_vector","value":"fn (&self, vec: Vector2D<T, Src>) -> Vector2D<T::Output, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given vector transformed by this scale.","sig":null,"attributes":[{"value":"/ Returns the given vector transformed by this scale.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178550,"byte_end":178605,"line_start":73,"line_end":73,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178610,"byte_end":178613,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178618,"byte_end":178631,"line_start":75,"line_end":75,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178636,"byte_end":178639,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178644,"byte_end":178655,"line_start":77,"line_end":77,"column_start":5,"column_end":16}},{"value":"/ use euclid::{Scale, vec2};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178660,"byte_end":178690,"line_start":78,"line_end":78,"column_start":5,"column_end":35}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178695,"byte_end":178710,"line_start":79,"line_end":79,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178715,"byte_end":178730,"line_start":80,"line_end":80,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178735,"byte_end":178738,"line_start":81,"line_end":81,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178743,"byte_end":178794,"line_start":82,"line_end":82,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178799,"byte_end":178802,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.transform_vector(vec2(42, -42)), vec2(420, -420));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178807,"byte_end":178878,"line_start":84,"line_end":84,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178883,"byte_end":178890,"line_start":85,"line_end":85,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":178895,"byte_end":178904,"line_start":86,"line_end":86,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1539},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179466,"byte_end":179480,"line_start":107,"line_end":107,"column_start":12,"column_end":26},"name":"transform_size","qualname":"<Scale<T, Src, Dst>>::transform_size","value":"fn (&self, size: Size2D<T, Src>) -> Size2D<T::Output, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given vector transformed by this scale.","sig":null,"attributes":[{"value":"/ Returns the given vector transformed by this scale.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179099,"byte_end":179154,"line_start":93,"line_end":93,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179159,"byte_end":179162,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179167,"byte_end":179180,"line_start":95,"line_end":95,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179185,"byte_end":179188,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179193,"byte_end":179204,"line_start":97,"line_end":97,"column_start":5,"column_end":16}},{"value":"/ use euclid::{Scale, size2};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179209,"byte_end":179240,"line_start":98,"line_end":98,"column_start":5,"column_end":36}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179245,"byte_end":179260,"line_start":99,"line_end":99,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179265,"byte_end":179280,"line_start":100,"line_end":100,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179285,"byte_end":179288,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179293,"byte_end":179344,"line_start":102,"line_end":102,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179349,"byte_end":179352,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.transform_size(size2(42, -42)), size2(420, -420));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179357,"byte_end":179428,"line_start":104,"line_end":104,"column_start":5,"column_end":76}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179433,"byte_end":179440,"line_start":105,"line_end":105,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179445,"byte_end":179454,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1540},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180030,"byte_end":180044,"line_start":127,"line_end":127,"column_start":12,"column_end":26},"name":"transform_rect","qualname":"<Scale<T, Src, Dst>>::transform_rect","value":"fn (&self, rect: &Rect<T, Src>) -> Rect<T::Output, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given rect transformed by this scale.","sig":null,"attributes":[{"value":"/ Returns the given rect transformed by this scale.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179653,"byte_end":179706,"line_start":113,"line_end":113,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179711,"byte_end":179714,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179719,"byte_end":179732,"line_start":115,"line_end":115,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179737,"byte_end":179740,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179745,"byte_end":179756,"line_start":117,"line_end":117,"column_start":5,"column_end":16}},{"value":"/ use euclid::{Scale, rect};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179761,"byte_end":179791,"line_start":118,"line_end":118,"column_start":5,"column_end":35}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179796,"byte_end":179811,"line_start":119,"line_end":119,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179816,"byte_end":179831,"line_start":120,"line_end":120,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179836,"byte_end":179839,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179844,"byte_end":179895,"line_start":122,"line_end":122,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179900,"byte_end":179903,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.transform_rect(&rect(1, 2, 42, -42)), rect(10, 20, 420, -420));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179908,"byte_end":179992,"line_start":124,"line_end":124,"column_start":5,"column_end":89}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":179997,"byte_end":180004,"line_start":125,"line_end":125,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180009,"byte_end":180018,"line_start":126,"line_end":126,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1541},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180326,"byte_end":180333,"line_start":138,"line_end":138,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Scale<T, Src, Dst>>::inverse","value":"fn (&self) -> Scale<T::Output, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse of this scale.\n","sig":null,"attributes":[{"value":"/ Returns the inverse of this scale.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180262,"byte_end":180300,"line_start":136,"line_end":136,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180305,"byte_end":180314,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1542},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180967,"byte_end":180978,"line_start":162,"line_end":162,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<Scale<T, Src, Dst>>::is_identity","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this scale has no effect.","sig":null,"attributes":[{"value":"/ Returns `true` if this scale has no effect.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180449,"byte_end":180496,"line_start":144,"line_end":144,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180501,"byte_end":180504,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180509,"byte_end":180522,"line_start":146,"line_end":146,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180527,"byte_end":180530,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180535,"byte_end":180546,"line_start":148,"line_end":148,"column_start":5,"column_end":16}},{"value":"/ use euclid::Scale;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180551,"byte_end":180573,"line_start":149,"line_end":149,"column_start":5,"column_end":27}},{"value":"/ use euclid::num::One;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180578,"byte_end":180603,"line_start":150,"line_end":150,"column_start":5,"column_end":30}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180608,"byte_end":180623,"line_start":151,"line_end":151,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180628,"byte_end":180643,"line_start":152,"line_end":152,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180648,"byte_end":180651,"line_start":153,"line_end":153,"column_start":5,"column_end":8}},{"value":"/ let cm_per_mm: Scale<f32, Mm, Cm> = Scale::new(0.1);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180656,"byte_end":180712,"line_start":154,"line_end":154,"column_start":5,"column_end":61}},{"value":"/ let mm_per_mm: Scale<f32, Mm, Mm> = Scale::new(1.0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180717,"byte_end":180773,"line_start":155,"line_end":155,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180778,"byte_end":180781,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(cm_per_mm.is_identity(), false);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180786,"byte_end":180833,"line_start":157,"line_end":157,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(mm_per_mm.is_identity(), true);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180838,"byte_end":180884,"line_start":158,"line_end":158,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(mm_per_mm, Scale::one());","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180889,"byte_end":180929,"line_start":159,"line_end":159,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180934,"byte_end":180941,"line_start":160,"line_end":160,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":180946,"byte_end":180955,"line_start":161,"line_end":161,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1547},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181140,"byte_end":181143,"line_start":171,"line_end":171,"column_start":12,"column_end":15},"name":"get","qualname":"<Scale<T, Src, Dst>>::get","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181119,"byte_end":181128,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1548},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181500,"byte_end":181503,"line_start":188,"line_end":188,"column_start":12,"column_end":15},"name":"inv","qualname":"<Scale<T, Src, Dst>>::inv","value":"fn (&self) -> Scale<T::Output, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" The inverse Scale (1.0 / self).","sig":null,"attributes":[{"value":"/ The inverse Scale (1.0 / self).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181192,"byte_end":181227,"line_start":175,"line_end":175,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181232,"byte_end":181235,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181240,"byte_end":181253,"line_start":177,"line_end":177,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181258,"byte_end":181261,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181266,"byte_end":181277,"line_start":179,"line_end":179,"column_start":5,"column_end":16}},{"value":"/ use euclid::Scale;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181282,"byte_end":181304,"line_start":180,"line_end":180,"column_start":5,"column_end":27}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181309,"byte_end":181324,"line_start":181,"line_end":181,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181329,"byte_end":181344,"line_start":182,"line_end":182,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181349,"byte_end":181352,"line_start":183,"line_end":183,"column_start":5,"column_end":8}},{"value":"/ let cm_per_mm: Scale<f32, Cm, Mm> = Scale::new(0.1);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181357,"byte_end":181413,"line_start":184,"line_end":184,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181418,"byte_end":181421,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(cm_per_mm.inv(), Scale::new(10.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181426,"byte_end":181476,"line_start":186,"line_end":186,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181481,"byte_end":181488,"line_start":187,"line_end":187,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1553},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182600,"byte_end":182604,"line_start":226,"line_end":226,"column_start":12,"column_end":16},"name":"cast","qualname":"<Scale<T, Src, Dst>>::cast","value":"fn <NewT> (&self) -> Scale<NewT, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181721,"byte_end":181795,"line_start":198,"line_end":198,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181800,"byte_end":181803,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181808,"byte_end":181820,"line_start":200,"line_end":200,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181825,"byte_end":181828,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ If the source value cannot be represented by the target type `NewT`, then","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181833,"byte_end":181910,"line_start":202,"line_end":202,"column_start":5,"column_end":82}},{"value":"/ method panics. Use `try_cast` if that must be case.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181915,"byte_end":181970,"line_start":203,"line_end":203,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181975,"byte_end":181978,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181983,"byte_end":181996,"line_start":205,"line_end":205,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182001,"byte_end":182004,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182009,"byte_end":182020,"line_start":207,"line_end":207,"column_start":5,"column_end":16}},{"value":"/ use euclid::Scale;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182025,"byte_end":182047,"line_start":208,"line_end":208,"column_start":5,"column_end":27}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182052,"byte_end":182067,"line_start":209,"line_end":209,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182072,"byte_end":182087,"line_start":210,"line_end":210,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182092,"byte_end":182095,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182100,"byte_end":182151,"line_start":212,"line_end":212,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182156,"byte_end":182159,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.cast::<f32>(), Scale::new(10.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182164,"byte_end":182218,"line_start":214,"line_end":214,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182223,"byte_end":182230,"line_start":215,"line_end":215,"column_start":5,"column_end":12}},{"value":"/ That conversion will panic, because `i32` not enough to store such big numbers:","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182235,"byte_end":182318,"line_start":216,"line_end":216,"column_start":5,"column_end":88}},{"value":"/ ```rust,should_panic","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182323,"byte_end":182347,"line_start":217,"line_end":217,"column_start":5,"column_end":29}},{"value":"/ use euclid::Scale;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182352,"byte_end":182374,"line_start":218,"line_end":218,"column_start":5,"column_end":27}},{"value":"/ enum Mm {};// millimeter = 10^-2 meters","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182379,"byte_end":182422,"line_start":219,"line_end":219,"column_start":5,"column_end":48}},{"value":"/ enum Em {};// exameter   = 10^18 meters","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182427,"byte_end":182470,"line_start":220,"line_end":220,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182475,"byte_end":182478,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ // Panics","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182483,"byte_end":182496,"line_start":222,"line_end":222,"column_start":5,"column_end":18}},{"value":"/ let to_em: Scale<i32, Mm, Em> = Scale::new(10e20).cast();","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182501,"byte_end":182562,"line_start":223,"line_end":223,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182567,"byte_end":182574,"line_start":224,"line_end":224,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182579,"byte_end":182588,"line_start":225,"line_end":225,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1555},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183378,"byte_end":183386,"line_start":249,"line_end":249,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Scale<T, Src, Dst>>::try_cast","value":"fn <NewT> (&self) -> Option<Scale<NewT, Src, Dst>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n If the source value cannot be represented by the target type `NewT`, then `None`\n is returned.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182698,"byte_end":182781,"line_start":230,"line_end":230,"column_start":5,"column_end":88}},{"value":"/ If the source value cannot be represented by the target type `NewT`, then `None`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182786,"byte_end":182870,"line_start":231,"line_end":231,"column_start":5,"column_end":89}},{"value":"/ is returned.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182875,"byte_end":182891,"line_start":232,"line_end":232,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182896,"byte_end":182899,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182904,"byte_end":182917,"line_start":234,"line_end":234,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182922,"byte_end":182925,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182930,"byte_end":182941,"line_start":236,"line_end":236,"column_start":5,"column_end":16}},{"value":"/ use euclid::Scale;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182946,"byte_end":182968,"line_start":237,"line_end":237,"column_start":5,"column_end":27}},{"value":"/ enum Mm {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182973,"byte_end":182988,"line_start":238,"line_end":238,"column_start":5,"column_end":20}},{"value":"/ enum Cm {};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":182993,"byte_end":183008,"line_start":239,"line_end":239,"column_start":5,"column_end":20}},{"value":"/ enum Em {};// Exameter = 10^18 meters","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183013,"byte_end":183054,"line_start":240,"line_end":240,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183059,"byte_end":183062,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let to_mm: Scale<i32, Cm, Mm> = Scale::new(10);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183067,"byte_end":183118,"line_start":242,"line_end":242,"column_start":5,"column_end":56}},{"value":"/ let to_em: Scale<f32, Mm, Em> = Scale::new(10e20);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183123,"byte_end":183177,"line_start":243,"line_end":243,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183182,"byte_end":183185,"line_start":244,"line_end":244,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(to_mm.try_cast::<f32>(), Some(Scale::new(10.0)));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183190,"byte_end":183254,"line_start":245,"line_end":245,"column_start":5,"column_end":69}},{"value":"/ // Integer to small to store that number","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183259,"byte_end":183303,"line_start":246,"line_end":246,"column_start":5,"column_end":49}},{"value":"/ assert_eq!(to_em.try_cast::<i32>(), None);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183308,"byte_end":183354,"line_start":247,"line_end":247,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183359,"byte_end":183366,"line_start":248,"line_end":248,"column_start":5,"column_end":12}}]},{"kind":"Const","id":{"krate":0,"index":1560},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183640,"byte_end":183643,"line_start":256,"line_end":256,"column_start":15,"column_end":18},"name":"ONE","qualname":"::scale::Scale::<f32, Src, Dst>::ONE","value":"Self","parent":{"krate":0,"index":1557},"children":[],"decl_id":null,"docs":" Identity scaling, could be used to safely transit from one space to another.\n","sig":null,"attributes":[{"value":"/ Identity scaling, could be used to safely transit from one space to another.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183545,"byte_end":183625,"line_start":255,"line_end":255,"column_start":5,"column_end":85}}]},{"kind":"Struct","id":{"krate":0,"index":1648},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":188177,"byte_end":188190,"line_start":29,"line_end":29,"column_start":12,"column_end":25},"name":"SideOffsets2D","qualname":"::side_offsets::SideOffsets2D","value":"SideOffsets2D { top, right, bottom, left, _unit }","parent":null,"children":[{"krate":0,"index":1651},{"krate":0,"index":1652},{"krate":0,"index":1653},{"krate":0,"index":1654},{"krate":0,"index":1655}],"decl_id":null,"docs":" A group of 2D side offsets, which correspond to top/right/bottom/left for borders, padding,\n and margins in CSS, optionally tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A group of 2D side offsets, which correspond to top/right/bottom/left for borders, padding,","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":187831,"byte_end":187926,"line_start":24,"line_end":24,"column_start":1,"column_end":96}},{"value":"/ and margins in CSS, optionally tagged with a unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":187927,"byte_end":187981,"line_start":25,"line_end":25,"column_start":1,"column_end":55}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":187982,"byte_end":187992,"line_start":26,"line_end":26,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1651},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":188207,"byte_end":188210,"line_start":30,"line_end":30,"column_start":9,"column_end":12},"name":"top","qualname":"::side_offsets::SideOffsets2D::top","value":"T","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1652},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":188223,"byte_end":188228,"line_start":31,"line_end":31,"column_start":9,"column_end":14},"name":"right","qualname":"::side_offsets::SideOffsets2D::right","value":"T","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1653},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":188241,"byte_end":188247,"line_start":32,"line_end":32,"column_start":9,"column_end":15},"name":"bottom","qualname":"::side_offsets::SideOffsets2D::bottom","value":"T","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1654},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":188260,"byte_end":188264,"line_start":33,"line_end":33,"column_start":9,"column_end":13},"name":"left","qualname":"::side_offsets::SideOffsets2D::left","value":"T","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":1655},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":188296,"byte_end":188301,"line_start":35,"line_end":35,"column_start":9,"column_end":14},"name":"_unit","qualname":"::side_offsets::SideOffsets2D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":1648},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1686},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":190019,"byte_end":190022,"line_start":103,"line_end":103,"column_start":18,"column_end":21},"name":"new","qualname":"<SideOffsets2D<T, U>>::new","value":"fn (top: T, right: T, bottom: T, left: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking a scalar for each side.","sig":null,"attributes":[{"value":"/ Constructor taking a scalar for each side.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":189852,"byte_end":189898,"line_start":99,"line_end":99,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":189903,"byte_end":189906,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ Sides are specified in top-right-bottom-left order following","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":189911,"byte_end":189975,"line_start":101,"line_end":101,"column_start":5,"column_end":69}},{"value":"/ CSS's convention.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":189980,"byte_end":190001,"line_start":102,"line_end":102,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1687},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":190389,"byte_end":190401,"line_start":117,"line_end":117,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<SideOffsets2D<T, U>>::from_lengths","value":"fn (top: Length<T, U>, right: Length<T, U>, bottom: Length<T, U>, left: Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking a typed Length for each side.","sig":null,"attributes":[{"value":"/ Constructor taking a typed Length for each side.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":190222,"byte_end":190274,"line_start":113,"line_end":113,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":190279,"byte_end":190282,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Sides are specified in top-right-bottom-left order following","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":190287,"byte_end":190351,"line_start":115,"line_end":115,"column_start":5,"column_end":69}},{"value":"/ CSS's convention.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":190356,"byte_end":190377,"line_start":116,"line_end":116,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1688},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":190897,"byte_end":190915,"line_start":131,"line_end":131,"column_start":12,"column_end":30},"name":"from_vectors_outer","qualname":"<SideOffsets2D<T, U>>::from_vectors_outer","value":"fn (min: Vector2D<T, U>, max: Vector2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct side offsets from min and a max vector offsets.","sig":null,"attributes":[{"value":"/ Construct side offsets from min and a max vector offsets.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":190605,"byte_end":190666,"line_start":126,"line_end":126,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":190671,"byte_end":190674,"line_start":127,"line_end":127,"column_start":5,"column_end":8}},{"value":"/ The outer rect of the resulting side offsets is equivalent to translating","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":190679,"byte_end":190756,"line_start":128,"line_end":128,"column_start":5,"column_end":82}},{"value":"/ a rectangle's upper-left corner with the min vector and translating the","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":190761,"byte_end":190836,"line_start":129,"line_end":129,"column_start":5,"column_end":80}},{"value":"/ bottom-right corner with the max vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":190841,"byte_end":190885,"line_start":130,"line_end":130,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1689},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":191481,"byte_end":191499,"line_start":149,"line_end":149,"column_start":12,"column_end":30},"name":"from_vectors_inner","qualname":"<SideOffsets2D<T, U>>::from_vectors_inner","value":"fn (min: Vector2D<T, U>, max: Vector2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct side offsets from min and a max vector offsets.","sig":null,"attributes":[{"value":"/ Construct side offsets from min and a max vector offsets.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":191189,"byte_end":191250,"line_start":144,"line_end":144,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":191255,"byte_end":191258,"line_start":145,"line_end":145,"column_start":5,"column_end":8}},{"value":"/ The inner rect of the resulting side offsets is equivalent to translating","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":191263,"byte_end":191340,"line_start":146,"line_end":146,"column_start":5,"column_end":82}},{"value":"/ a rectangle's upper-left corner with the min vector and translating the","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":191345,"byte_end":191420,"line_start":147,"line_end":147,"column_start":5,"column_end":80}},{"value":"/ bottom-right corner with the max vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":191425,"byte_end":191469,"line_start":148,"line_end":148,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1693},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":191910,"byte_end":191922,"line_start":165,"line_end":165,"column_start":12,"column_end":24},"name":"new_all_same","qualname":"<SideOffsets2D<T, U>>::new_all_same","value":"fn (all: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting the same value to all sides, taking a scalar value directly.\n","sig":null,"attributes":[{"value":"/ Constructor setting the same value to all sides, taking a scalar value directly.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":191814,"byte_end":191898,"line_start":164,"line_end":164,"column_start":5,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":1694},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":192086,"byte_end":192106,"line_start":170,"line_end":170,"column_start":12,"column_end":32},"name":"from_length_all_same","qualname":"<SideOffsets2D<T, U>>::from_length_all_same","value":"fn (all: Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor setting the same value to all sides, taking a typed Length.\n","sig":null,"attributes":[{"value":"/ Constructor setting the same value to all sides, taking a typed Length.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":191999,"byte_end":192074,"line_start":169,"line_end":169,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":192272,"byte_end":192282,"line_start":179,"line_end":179,"column_start":12,"column_end":22},"name":"horizontal","qualname":"<SideOffsets2D<T, U>>::horizontal","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1699},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":192346,"byte_end":192354,"line_start":183,"line_end":183,"column_start":12,"column_end":20},"name":"vertical","qualname":"<SideOffsets2D<T, U>>::vertical","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1708},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":192840,"byte_end":192844,"line_start":205,"line_end":205,"column_start":12,"column_end":16},"name":"zero","qualname":"<SideOffsets2D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all sides to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all sides to zero.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":192785,"byte_end":192828,"line_start":204,"line_end":204,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":1745},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":194441,"byte_end":194447,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"Size2D","qualname":"::size::Size2D","value":"Size2D { width, height, _unit }","parent":null,"children":[{"krate":0,"index":1748},{"krate":0,"index":1749},{"krate":0,"index":1750}],"decl_id":null,"docs":" A 2d size tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 2d size tagged with a unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":194385,"byte_end":194418,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":194419,"byte_end":194429,"line_start":30,"line_end":30,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1748},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":194556,"byte_end":194561,"line_start":33,"line_end":33,"column_start":9,"column_end":14},"name":"width","qualname":"::size::Size2D::width","value":"T","parent":{"krate":0,"index":1745},"children":[],"decl_id":null,"docs":" The extent of the element in the `U` units along the `x` axis (usually horizontal).\n","sig":null,"attributes":[{"value":"/ The extent of the element in the `U` units along the `x` axis (usually horizontal).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":194460,"byte_end":194547,"line_start":32,"line_end":32,"column_start":5,"column_end":92}}]},{"kind":"Field","id":{"krate":0,"index":1749},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":194664,"byte_end":194670,"line_start":35,"line_end":35,"column_start":9,"column_end":15},"name":"height","qualname":"::size::Size2D::height","value":"T","parent":{"krate":0,"index":1745},"children":[],"decl_id":null,"docs":" The extent of the element in the `U` units along the `y` axis (usually vertical).\n","sig":null,"attributes":[{"value":"/ The extent of the element in the `U` units along the `y` axis (usually vertical).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":194570,"byte_end":194655,"line_start":34,"line_end":34,"column_start":5,"column_end":90}}]},{"kind":"Field","id":{"krate":0,"index":1750},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":194702,"byte_end":194707,"line_start":37,"line_end":37,"column_start":9,"column_end":14},"name":"_unit","qualname":"::size::Size2D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":1745},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1785},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197027,"byte_end":197031,"line_start":126,"line_end":126,"column_start":12,"column_end":16},"name":"zero","qualname":"<Size2D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The same as [`Zero::zero()`] but available without importing trait.","sig":null,"attributes":[{"value":"/ The same as [`Zero::zero()`] but available without importing trait.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":196860,"byte_end":196931,"line_start":122,"line_end":122,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":196936,"byte_end":196939,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ [`Zero::zero()`]: ./num/trait.Zero.html#tymethod.zero","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":196944,"byte_end":197001,"line_start":124,"line_end":124,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197006,"byte_end":197015,"line_start":125,"line_end":125,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1786},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197203,"byte_end":197206,"line_start":135,"line_end":135,"column_start":18,"column_end":21},"name":"new","qualname":"<Size2D<T, U>>::new","value":"fn (width: T, height: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197134,"byte_end":197171,"line_start":133,"line_end":133,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197176,"byte_end":197185,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1787},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197425,"byte_end":197437,"line_start":144,"line_end":144,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Size2D<T, U>>::from_lengths","value":"fn (width: Length<T, U>, height: Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar strongly typed lengths.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar strongly typed lengths.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197346,"byte_end":197399,"line_start":142,"line_end":142,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197404,"byte_end":197413,"line_start":143,"line_end":143,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1788},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197603,"byte_end":197615,"line_start":150,"line_end":150,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Size2D<T, U>>::from_untyped","value":"fn (p: Size2D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197541,"byte_end":197577,"line_start":148,"line_end":148,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197582,"byte_end":197591,"line_start":149,"line_end":149,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1792},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197833,"byte_end":197841,"line_start":158,"line_end":158,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Size2D<T, U>>::to_array","value":"fn (&self) -> [T; 2]","parent":null,"children":[],"decl_id":null,"docs":" Return this size as an array of two elements (width, then height).\n","sig":null,"attributes":[{"value":"/ Return this size as an array of two elements (width, then height).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197737,"byte_end":197807,"line_start":156,"line_end":156,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197812,"byte_end":197821,"line_start":157,"line_end":157,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1794},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198001,"byte_end":198009,"line_start":164,"line_end":164,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Size2D<T, U>>::to_tuple","value":"fn (&self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Return this size as a tuple of two elements (width, then height).\n","sig":null,"attributes":[{"value":"/ Return this size as a tuple of two elements (width, then height).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197906,"byte_end":197975,"line_start":162,"line_end":162,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197980,"byte_end":197989,"line_start":163,"line_end":163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1795},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198155,"byte_end":198164,"line_start":170,"line_end":170,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Size2D<T, U>>::to_vector","value":"fn (&self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Return this size as a vector with width and height.\n","sig":null,"attributes":[{"value":"/ Return this size as a vector with width and height.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198074,"byte_end":198129,"line_start":168,"line_end":168,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198134,"byte_end":198143,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1796},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198321,"byte_end":198331,"line_start":176,"line_end":176,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Size2D<T, U>>::to_untyped","value":"fn (&self) -> Size2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198241,"byte_end":198295,"line_start":174,"line_end":174,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198300,"byte_end":198309,"line_start":175,"line_end":175,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1797},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198446,"byte_end":198455,"line_start":182,"line_end":182,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Size2D<T, U>>::cast_unit","value":"fn <V> (&self) -> Size2D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198403,"byte_end":198420,"line_start":180,"line_end":180,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198425,"byte_end":198434,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1799},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198899,"byte_end":198904,"line_start":198,"line_end":198,"column_start":12,"column_end":17},"name":"round","qualname":"<Size2D<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198540,"byte_end":198595,"line_start":186,"line_end":186,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198600,"byte_end":198603,"line_start":187,"line_end":187,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198608,"byte_end":198683,"line_start":188,"line_end":188,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198688,"byte_end":198691,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198696,"byte_end":198707,"line_start":190,"line_end":190,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size2;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198712,"byte_end":198736,"line_start":191,"line_end":191,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198741,"byte_end":198755,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198760,"byte_end":198763,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size2::<_, Mm>(-0.1, -0.8).round(), size2::<_, Mm>(0.0, -1.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198768,"byte_end":198845,"line_start":194,"line_end":194,"column_start":5,"column_end":82}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198850,"byte_end":198857,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198862,"byte_end":198871,"line_start":196,"line_end":196,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":198876,"byte_end":198887,"line_start":197,"line_end":197,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1800},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199419,"byte_end":199423,"line_start":217,"line_end":217,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Size2D<T, U>>::ceil","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199026,"byte_end":199117,"line_start":205,"line_end":205,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199122,"byte_end":199125,"line_start":206,"line_end":206,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199130,"byte_end":199205,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199210,"byte_end":199213,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199218,"byte_end":199229,"line_start":209,"line_end":209,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size2;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199234,"byte_end":199258,"line_start":210,"line_end":210,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199263,"byte_end":199277,"line_start":211,"line_end":211,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199282,"byte_end":199285,"line_start":212,"line_end":212,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size2::<_, Mm>(-0.1, -0.8).ceil(), size2::<_, Mm>(0.0, 0.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199290,"byte_end":199365,"line_start":213,"line_end":213,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199370,"byte_end":199377,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199382,"byte_end":199391,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199396,"byte_end":199407,"line_start":216,"line_end":216,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1801},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199935,"byte_end":199940,"line_start":236,"line_end":236,"column_start":12,"column_end":17},"name":"floor","qualname":"<Size2D<T, U>>::floor","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199542,"byte_end":199630,"line_start":224,"line_end":224,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199635,"byte_end":199638,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199643,"byte_end":199718,"line_start":226,"line_end":226,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199723,"byte_end":199726,"line_start":227,"line_end":227,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199731,"byte_end":199742,"line_start":228,"line_end":228,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size2;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199747,"byte_end":199771,"line_start":229,"line_end":229,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199776,"byte_end":199790,"line_start":230,"line_end":230,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199795,"byte_end":199798,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size2::<_, Mm>(-0.1, -0.8).floor(), size2::<_, Mm>(-1.0, -1.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199803,"byte_end":199881,"line_start":232,"line_end":232,"column_start":5,"column_end":83}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199886,"byte_end":199893,"line_start":233,"line_end":233,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199898,"byte_end":199907,"line_start":234,"line_end":234,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":199912,"byte_end":199923,"line_start":235,"line_end":235,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1802},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200129,"byte_end":200133,"line_start":244,"line_end":244,"column_start":12,"column_end":16},"name":"area","qualname":"<Size2D<T, U>>::area","value":"fn (&self) -> T::Output","parent":null,"children":[],"decl_id":null,"docs":" Returns result of multiplication of both components\n","sig":null,"attributes":[{"value":"/ Returns result of multiplication of both components","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200062,"byte_end":200117,"line_start":243,"line_end":243,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1803},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200873,"byte_end":200877,"line_start":269,"line_end":269,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Size2D<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate each component between this size and another size.","sig":null,"attributes":[{"value":"/ Linearly interpolate each component between this size and another size.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200230,"byte_end":200305,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200310,"byte_end":200313,"line_start":252,"line_end":252,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200318,"byte_end":200331,"line_start":253,"line_end":253,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200336,"byte_end":200339,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200344,"byte_end":200355,"line_start":255,"line_end":255,"column_start":5,"column_end":16}},{"value":"/ use euclid::size2;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200360,"byte_end":200382,"line_start":256,"line_end":256,"column_start":5,"column_end":27}},{"value":"/ use euclid::default::Size2D;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200387,"byte_end":200419,"line_start":257,"line_end":257,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200424,"byte_end":200427,"line_start":258,"line_end":258,"column_start":5,"column_end":8}},{"value":"/ let from: Size2D<_> = size2(0.0, 10.0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200432,"byte_end":200475,"line_start":259,"line_end":259,"column_start":5,"column_end":48}},{"value":"/ let to:  Size2D<_> = size2(8.0, -4.0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200480,"byte_end":200522,"line_start":260,"line_end":260,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200527,"byte_end":200530,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), size2(-8.0,  24.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200535,"byte_end":200591,"line_start":262,"line_end":262,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(from.lerp(to,  0.0), size2( 0.0,  10.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200596,"byte_end":200652,"line_start":263,"line_end":263,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(from.lerp(to,  0.5), size2( 4.0,   3.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200657,"byte_end":200713,"line_start":264,"line_end":264,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(from.lerp(to,  1.0), size2( 8.0,  -4.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200718,"byte_end":200774,"line_start":265,"line_end":265,"column_start":5,"column_end":61}},{"value":"/ assert_eq!(from.lerp(to,  2.0), size2(16.0, -18.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200779,"byte_end":200835,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200840,"byte_end":200847,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":200852,"byte_end":200861,"line_start":268,"line_end":268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1807},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":201503,"byte_end":201507,"line_start":285,"line_end":285,"column_start":12,"column_end":16},"name":"cast","qualname":"<Size2D<T, U>>::cast","value":"fn <NewT> (&self) -> Size2D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":201123,"byte_end":201197,"line_start":279,"line_end":279,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":201202,"byte_end":201205,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":201210,"byte_end":201297,"line_start":281,"line_end":281,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":201302,"byte_end":201390,"line_start":282,"line_end":282,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":201395,"byte_end":201477,"line_start":283,"line_end":283,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":201482,"byte_end":201491,"line_start":284,"line_end":284,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1809},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":201970,"byte_end":201978,"line_start":294,"line_end":294,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Size2D<T, U>>::try_cast","value":"fn <NewT> (&self) -> Option<Size2D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":201595,"byte_end":201678,"line_start":289,"line_end":289,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":201683,"byte_end":201686,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":201691,"byte_end":201778,"line_start":291,"line_end":291,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":201783,"byte_end":201871,"line_start":292,"line_end":292,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":201876,"byte_end":201958,"line_start":293,"line_end":293,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":1811},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":202306,"byte_end":202312,"line_start":305,"line_end":305,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Size2D<T, U>>::to_f32","value":"fn (&self) -> Size2D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` size.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` size.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":202252,"byte_end":202280,"line_start":303,"line_end":303,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":202285,"byte_end":202294,"line_start":304,"line_end":304,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1812},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":202425,"byte_end":202431,"line_start":311,"line_end":311,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Size2D<T, U>>::to_f64","value":"fn (&self) -> Size2D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` size.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` size.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":202371,"byte_end":202399,"line_start":309,"line_end":309,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":202404,"byte_end":202413,"line_start":310,"line_end":310,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1813},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":202781,"byte_end":202789,"line_start":321,"line_end":321,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Size2D<T, U>>::to_usize","value":"fn (&self) -> Size2D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `uint` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `uint` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":202490,"byte_end":202547,"line_start":315,"line_end":315,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":202552,"byte_end":202555,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":202560,"byte_end":202635,"line_start":317,"line_end":317,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":202640,"byte_end":202714,"line_start":318,"line_end":318,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":202719,"byte_end":202755,"line_start":319,"line_end":319,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":202760,"byte_end":202769,"line_start":320,"line_end":320,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1814},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203140,"byte_end":203146,"line_start":331,"line_end":331,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Size2D<T, U>>::to_u32","value":"fn (&self) -> Size2D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":202850,"byte_end":202906,"line_start":325,"line_end":325,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":202911,"byte_end":202914,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":202919,"byte_end":202994,"line_start":327,"line_end":327,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":202999,"byte_end":203073,"line_start":328,"line_end":328,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203078,"byte_end":203114,"line_start":329,"line_end":329,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203119,"byte_end":203128,"line_start":330,"line_end":330,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1815},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203495,"byte_end":203501,"line_start":341,"line_end":341,"column_start":12,"column_end":18},"name":"to_u64","qualname":"<Size2D<T, U>>::to_u64","value":"fn (&self) -> Size2D<u64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u64` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u64` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203205,"byte_end":203261,"line_start":335,"line_end":335,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203266,"byte_end":203269,"line_start":336,"line_end":336,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203274,"byte_end":203349,"line_start":337,"line_end":337,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203354,"byte_end":203428,"line_start":338,"line_end":338,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203433,"byte_end":203469,"line_start":339,"line_end":339,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203474,"byte_end":203483,"line_start":340,"line_end":340,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1816},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203850,"byte_end":203856,"line_start":351,"line_end":351,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Size2D<T, U>>::to_i32","value":"fn (&self) -> Size2D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203560,"byte_end":203616,"line_start":345,"line_end":345,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203621,"byte_end":203624,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203629,"byte_end":203704,"line_start":347,"line_end":347,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203709,"byte_end":203783,"line_start":348,"line_end":348,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203788,"byte_end":203824,"line_start":349,"line_end":349,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203829,"byte_end":203838,"line_start":350,"line_end":350,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1817},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204205,"byte_end":204211,"line_start":361,"line_end":361,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Size2D<T, U>>::to_i64","value":"fn (&self) -> Size2D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203915,"byte_end":203971,"line_start":355,"line_end":355,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203976,"byte_end":203979,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":203984,"byte_end":204059,"line_start":357,"line_end":357,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204064,"byte_end":204138,"line_start":358,"line_end":358,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204143,"byte_end":204179,"line_start":359,"line_end":359,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204184,"byte_end":204193,"line_start":360,"line_end":360,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1821},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204574,"byte_end":204577,"line_start":372,"line_end":372,"column_start":12,"column_end":15},"name":"abs","qualname":"<Size2D<T, U>>::abs","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value of each component.","sig":null,"attributes":[{"value":"/ Computes the absolute value of each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204306,"byte_end":204356,"line_start":367,"line_end":367,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204361,"byte_end":204364,"line_start":368,"line_end":368,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`, `NaN` will be returned for component if the component is `NaN`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204369,"byte_end":204457,"line_start":369,"line_end":369,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204462,"byte_end":204465,"line_start":370,"line_end":370,"column_start":5,"column_end":8}},{"value":"/ For signed integers, `::MIN` will be returned for component if the component is `::MIN`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204470,"byte_end":204562,"line_start":371,"line_end":371,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":1822},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204765,"byte_end":204776,"line_start":377,"line_end":377,"column_start":12,"column_end":23},"name":"is_positive","qualname":"<Size2D<T, U>>::is_positive","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if both components is positive and `false` any component is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns `true` if both components is positive and `false` any component is zero or negative.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204657,"byte_end":204753,"line_start":376,"line_end":376,"column_start":5,"column_end":101}}]},{"kind":"Method","id":{"krate":0,"index":1826},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":205015,"byte_end":205018,"line_start":385,"line_end":385,"column_start":12,"column_end":15},"name":"min","qualname":"<Size2D<T, U>>::min","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which are minimum of this size and another.\n","sig":null,"attributes":[{"value":"/ Returns the size each component of which are minimum of this size and another.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204907,"byte_end":204989,"line_start":383,"line_end":383,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204994,"byte_end":205003,"line_start":384,"line_end":384,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1827},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":205279,"byte_end":205282,"line_start":394,"line_end":394,"column_start":12,"column_end":15},"name":"max","qualname":"<Size2D<T, U>>::max","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which are maximum of this size and another.\n","sig":null,"attributes":[{"value":"/ Returns the size each component of which are maximum of this size and another.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":205171,"byte_end":205253,"line_start":392,"line_end":392,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":205258,"byte_end":205267,"line_start":393,"line_end":393,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1828},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":205628,"byte_end":205633,"line_start":406,"line_end":406,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Size2D<T, U>>::clamp","value":"fn (&self, start: Self, end: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the size each component of which clamped by corresponding","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":205435,"byte_end":205504,"line_start":401,"line_end":401,"column_start":5,"column_end":74}},{"value":"/ components of `start` and `end`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":205509,"byte_end":205545,"line_start":402,"line_end":402,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":205550,"byte_end":205553,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":205558,"byte_end":205602,"line_start":404,"line_end":404,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":205607,"byte_end":205616,"line_start":405,"line_end":405,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1829},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":205840,"byte_end":205852,"line_start":414,"line_end":414,"column_start":12,"column_end":24},"name":"greater_than","qualname":"<Size2D<T, U>>::greater_than","value":"fn (&self, other: Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"greater then\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"greater then\" operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":205750,"byte_end":205828,"line_start":413,"line_end":413,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":1830},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":206107,"byte_end":206117,"line_start":422,"line_end":422,"column_start":12,"column_end":22},"name":"lower_than","qualname":"<Size2D<T, U>>::lower_than","value":"fn (&self, other: Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"lower then\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"lower then\" operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":206019,"byte_end":206095,"line_start":421,"line_end":421,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1831},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":206360,"byte_end":206380,"line_start":430,"line_end":430,"column_start":12,"column_end":32},"name":"is_empty_or_negative","qualname":"<Size2D<T, U>>::is_empty_or_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any component of size is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns `true` if any component of size is zero or negative.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":206284,"byte_end":206348,"line_start":429,"line_end":429,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1835},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":206642,"byte_end":206647,"line_start":441,"line_end":441,"column_start":12,"column_end":17},"name":"equal","qualname":"<Size2D<T, U>>::equal","value":"fn (&self, other: Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"equal\" operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":206559,"byte_end":206630,"line_start":440,"line_end":440,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1836},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":206903,"byte_end":206912,"line_start":449,"line_end":449,"column_start":12,"column_end":21},"name":"not_equal","qualname":"<Size2D<T, U>>::not_equal","value":"fn (&self, other: Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"not equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"not equal\" operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":206816,"byte_end":206891,"line_start":448,"line_end":448,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":1914},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":210534,"byte_end":210539,"line_start":606,"line_end":606,"column_start":14,"column_end":19},"name":"size2","qualname":"::size::size2","value":"fn <T, U> (w: T, h: T) -> Size2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Size2D::new(w, h)`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Size2D::new(w, h)`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":210472,"byte_end":210510,"line_start":604,"line_end":604,"column_start":1,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":210511,"byte_end":210520,"line_start":605,"line_end":605,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":1941},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":217150,"byte_end":217156,"line_start":867,"line_end":867,"column_start":12,"column_end":18},"name":"Size3D","qualname":"::size::Size3D","value":"Size3D { width, height, depth, _unit }","parent":null,"children":[{"krate":0,"index":1944},{"krate":0,"index":1945},{"krate":0,"index":1946},{"krate":0,"index":1947}],"decl_id":null,"docs":" A 3d size tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 3d size tagged with a unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":217094,"byte_end":217127,"line_start":865,"line_end":865,"column_start":1,"column_end":34}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":217128,"byte_end":217138,"line_start":866,"line_end":866,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":1944},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":217244,"byte_end":217249,"line_start":869,"line_end":869,"column_start":9,"column_end":14},"name":"width","qualname":"::size::Size3D::width","value":"T","parent":{"krate":0,"index":1941},"children":[],"decl_id":null,"docs":" The extent of the element in the `U` units along the `x` axis.\n","sig":null,"attributes":[{"value":"/ The extent of the element in the `U` units along the `x` axis.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":217169,"byte_end":217235,"line_start":868,"line_end":868,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1945},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":217333,"byte_end":217339,"line_start":871,"line_end":871,"column_start":9,"column_end":15},"name":"height","qualname":"::size::Size3D::height","value":"T","parent":{"krate":0,"index":1941},"children":[],"decl_id":null,"docs":" The extent of the element in the `U` units along the `y` axis.\n","sig":null,"attributes":[{"value":"/ The extent of the element in the `U` units along the `y` axis.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":217258,"byte_end":217324,"line_start":870,"line_end":870,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1946},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":217423,"byte_end":217428,"line_start":873,"line_end":873,"column_start":9,"column_end":14},"name":"depth","qualname":"::size::Size3D::depth","value":"T","parent":{"krate":0,"index":1941},"children":[],"decl_id":null,"docs":" The extent of the element in the `U` units along the `z` axis.\n","sig":null,"attributes":[{"value":"/ The extent of the element in the `U` units along the `z` axis.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":217348,"byte_end":217414,"line_start":872,"line_end":872,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":1947},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":217460,"byte_end":217465,"line_start":875,"line_end":875,"column_start":9,"column_end":14},"name":"_unit","qualname":"::size::Size3D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":1941},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1982},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":219932,"byte_end":219936,"line_start":967,"line_end":967,"column_start":12,"column_end":16},"name":"zero","qualname":"<Size3D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" The same as [`Zero::zero()`] but available without importing trait.","sig":null,"attributes":[{"value":"/ The same as [`Zero::zero()`] but available without importing trait.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":219779,"byte_end":219850,"line_start":964,"line_end":964,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":219855,"byte_end":219858,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ [`Zero::zero()`]: ./num/trait.Zero.html#tymethod.zero","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":219863,"byte_end":219920,"line_start":966,"line_end":966,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1983},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":220122,"byte_end":220125,"line_start":976,"line_end":976,"column_start":18,"column_end":21},"name":"new","qualname":"<Size3D<T, U>>::new","value":"fn (width: T, height: T, depth: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":220053,"byte_end":220090,"line_start":974,"line_end":974,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":220095,"byte_end":220104,"line_start":975,"line_end":975,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1984},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":220374,"byte_end":220386,"line_start":987,"line_end":987,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Size3D<T, U>>::from_lengths","value":"fn (width: Length<T, U>, height: Length<T, U>, depth: Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar strongly typed lengths.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar strongly typed lengths.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":220295,"byte_end":220348,"line_start":985,"line_end":985,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":220353,"byte_end":220362,"line_start":986,"line_end":986,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1985},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":220582,"byte_end":220594,"line_start":993,"line_end":993,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Size3D<T, U>>::from_untyped","value":"fn (p: Size3D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":220520,"byte_end":220556,"line_start":991,"line_end":991,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":220561,"byte_end":220570,"line_start":992,"line_end":992,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1989},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":220835,"byte_end":220843,"line_start":1001,"line_end":1001,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Size3D<T, U>>::to_array","value":"fn (&self) -> [T; 3]","parent":null,"children":[],"decl_id":null,"docs":" Return this size as an array of three elements (width, then height, then depth).\n","sig":null,"attributes":[{"value":"/ Return this size as an array of three elements (width, then height, then depth).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":220725,"byte_end":220809,"line_start":999,"line_end":999,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":220814,"byte_end":220823,"line_start":1000,"line_end":1000,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1991},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221030,"byte_end":221038,"line_start":1007,"line_end":1007,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Size3D<T, U>>::to_tuple","value":"fn (&self) -> (T, T, T)","parent":null,"children":[],"decl_id":null,"docs":" Return this size as an array of three elements (width, then height, then depth).\n","sig":null,"attributes":[{"value":"/ Return this size as an array of three elements (width, then height, then depth).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":220920,"byte_end":221004,"line_start":1005,"line_end":1005,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221009,"byte_end":221018,"line_start":1006,"line_end":1006,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221206,"byte_end":221215,"line_start":1013,"line_end":1013,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Size3D<T, U>>::to_vector","value":"fn (&self) -> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Return this size as a vector with width, height and depth.\n","sig":null,"attributes":[{"value":"/ Return this size as a vector with width, height and depth.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221118,"byte_end":221180,"line_start":1011,"line_end":1011,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221185,"byte_end":221194,"line_start":1012,"line_end":1012,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221384,"byte_end":221394,"line_start":1019,"line_end":1019,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Size3D<T, U>>::to_untyped","value":"fn (&self) -> Size3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221304,"byte_end":221358,"line_start":1017,"line_end":1017,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221363,"byte_end":221372,"line_start":1018,"line_end":1018,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221509,"byte_end":221518,"line_start":1025,"line_end":1025,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Size3D<T, U>>::cast_unit","value":"fn <V> (&self) -> Size3D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221466,"byte_end":221483,"line_start":1023,"line_end":1023,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221488,"byte_end":221497,"line_start":1024,"line_end":1024,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221984,"byte_end":221989,"line_start":1041,"line_end":1041,"column_start":12,"column_end":17},"name":"round","qualname":"<Size3D<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221615,"byte_end":221670,"line_start":1029,"line_end":1029,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221675,"byte_end":221678,"line_start":1030,"line_end":1030,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221683,"byte_end":221758,"line_start":1031,"line_end":1031,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221763,"byte_end":221766,"line_start":1032,"line_end":1032,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221771,"byte_end":221782,"line_start":1033,"line_end":1033,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size3;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221787,"byte_end":221811,"line_start":1034,"line_end":1034,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221816,"byte_end":221830,"line_start":1035,"line_end":1035,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221835,"byte_end":221838,"line_start":1036,"line_end":1036,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size3::<_, Mm>(-0.1, -0.8, 0.4).round(), size3::<_, Mm>(0.0, -1.0, 0.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221843,"byte_end":221930,"line_start":1037,"line_end":1037,"column_start":5,"column_end":92}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221935,"byte_end":221942,"line_start":1038,"line_end":1038,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221947,"byte_end":221956,"line_start":1039,"line_end":1039,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":221961,"byte_end":221972,"line_start":1040,"line_end":1040,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1997},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222534,"byte_end":222538,"line_start":1060,"line_end":1060,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Size3D<T, U>>::ceil","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222131,"byte_end":222222,"line_start":1048,"line_end":1048,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222227,"byte_end":222230,"line_start":1049,"line_end":1049,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222235,"byte_end":222310,"line_start":1050,"line_end":1050,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222315,"byte_end":222318,"line_start":1051,"line_end":1051,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222323,"byte_end":222334,"line_start":1052,"line_end":1052,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size3;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222339,"byte_end":222363,"line_start":1053,"line_end":1053,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222368,"byte_end":222382,"line_start":1054,"line_end":1054,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222387,"byte_end":222390,"line_start":1055,"line_end":1055,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size3::<_, Mm>(-0.1, -0.8, 0.4).ceil(), size3::<_, Mm>(0.0, 0.0, 1.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222395,"byte_end":222480,"line_start":1056,"line_end":1056,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222485,"byte_end":222492,"line_start":1057,"line_end":1057,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222497,"byte_end":222506,"line_start":1058,"line_end":1058,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222511,"byte_end":222522,"line_start":1059,"line_end":1059,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1998},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223079,"byte_end":223084,"line_start":1079,"line_end":1079,"column_start":12,"column_end":17},"name":"floor","qualname":"<Size3D<T, U>>::floor","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222676,"byte_end":222764,"line_start":1067,"line_end":1067,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222769,"byte_end":222772,"line_start":1068,"line_end":1068,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222777,"byte_end":222852,"line_start":1069,"line_end":1069,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222857,"byte_end":222860,"line_start":1070,"line_end":1070,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222865,"byte_end":222876,"line_start":1071,"line_end":1071,"column_start":5,"column_end":16}},{"value":"/ # use euclid::size3;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222881,"byte_end":222905,"line_start":1072,"line_end":1072,"column_start":5,"column_end":29}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222910,"byte_end":222924,"line_start":1073,"line_end":1073,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222929,"byte_end":222932,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(size3::<_, Mm>(-0.1, -0.8, 0.4).floor(), size3::<_, Mm>(-1.0, -1.0, 0.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":222937,"byte_end":223025,"line_start":1075,"line_end":1075,"column_start":5,"column_end":93}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223030,"byte_end":223037,"line_start":1076,"line_end":1076,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223042,"byte_end":223051,"line_start":1077,"line_end":1077,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223056,"byte_end":223067,"line_start":1078,"line_end":1078,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":1999},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223292,"byte_end":223298,"line_start":1087,"line_end":1087,"column_start":12,"column_end":18},"name":"volume","qualname":"<Size3D<T, U>>::volume","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns result of multiplication of all components\n","sig":null,"attributes":[{"value":"/ Returns result of multiplication of all components","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223226,"byte_end":223280,"line_start":1086,"line_end":1086,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":2000},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":224081,"byte_end":224085,"line_start":1112,"line_end":1112,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Size3D<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this size and another size.","sig":null,"attributes":[{"value":"/ Linearly interpolate between this size and another size.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223411,"byte_end":223471,"line_start":1094,"line_end":1094,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223476,"byte_end":223479,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223484,"byte_end":223497,"line_start":1096,"line_end":1096,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223502,"byte_end":223505,"line_start":1097,"line_end":1097,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223510,"byte_end":223521,"line_start":1098,"line_end":1098,"column_start":5,"column_end":16}},{"value":"/ use euclid::size3;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223526,"byte_end":223548,"line_start":1099,"line_end":1099,"column_start":5,"column_end":27}},{"value":"/ use euclid::default::Size3D;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223553,"byte_end":223585,"line_start":1100,"line_end":1100,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223590,"byte_end":223593,"line_start":1101,"line_end":1101,"column_start":5,"column_end":8}},{"value":"/ let from: Size3D<_> = size3(0.0, 10.0, -1.0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223598,"byte_end":223647,"line_start":1102,"line_end":1102,"column_start":5,"column_end":54}},{"value":"/ let to:  Size3D<_> = size3(8.0, -4.0,  0.0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223652,"byte_end":223700,"line_start":1103,"line_end":1103,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223705,"byte_end":223708,"line_start":1104,"line_end":1104,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), size3(-8.0,  24.0, -2.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223713,"byte_end":223775,"line_start":1105,"line_end":1105,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from.lerp(to,  0.0), size3( 0.0,  10.0, -1.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223780,"byte_end":223842,"line_start":1106,"line_end":1106,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from.lerp(to,  0.5), size3( 4.0,   3.0, -0.5));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223847,"byte_end":223909,"line_start":1107,"line_end":1107,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from.lerp(to,  1.0), size3( 8.0,  -4.0,  0.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223914,"byte_end":223976,"line_start":1108,"line_end":1108,"column_start":5,"column_end":67}},{"value":"/ assert_eq!(from.lerp(to,  2.0), size3(16.0, -18.0,  1.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":223981,"byte_end":224043,"line_start":1109,"line_end":1109,"column_start":5,"column_end":67}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":224048,"byte_end":224055,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":224060,"byte_end":224069,"line_start":1111,"line_end":1111,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2004},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":224711,"byte_end":224715,"line_start":1128,"line_end":1128,"column_start":12,"column_end":16},"name":"cast","qualname":"<Size3D<T, U>>::cast","value":"fn <NewT> (&self) -> Size3D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":224331,"byte_end":224405,"line_start":1122,"line_end":1122,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":224410,"byte_end":224413,"line_start":1123,"line_end":1123,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":224418,"byte_end":224505,"line_start":1124,"line_end":1124,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":224510,"byte_end":224598,"line_start":1125,"line_end":1125,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":224603,"byte_end":224685,"line_start":1126,"line_end":1126,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":224690,"byte_end":224699,"line_start":1127,"line_end":1127,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2006},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":225178,"byte_end":225186,"line_start":1137,"line_end":1137,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Size3D<T, U>>::try_cast","value":"fn <NewT> (&self) -> Option<Size3D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":224803,"byte_end":224886,"line_start":1132,"line_end":1132,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":224891,"byte_end":224894,"line_start":1133,"line_end":1133,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":224899,"byte_end":224986,"line_start":1134,"line_end":1134,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":224991,"byte_end":225079,"line_start":1135,"line_end":1135,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":225084,"byte_end":225166,"line_start":1136,"line_end":1136,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2008},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":225553,"byte_end":225559,"line_start":1148,"line_end":1148,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Size3D<T, U>>::to_f32","value":"fn (&self) -> Size3D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` size.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` size.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":225499,"byte_end":225527,"line_start":1146,"line_end":1146,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":225532,"byte_end":225541,"line_start":1147,"line_end":1147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2009},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":225672,"byte_end":225678,"line_start":1154,"line_end":1154,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Size3D<T, U>>::to_f64","value":"fn (&self) -> Size3D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` size.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` size.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":225618,"byte_end":225646,"line_start":1152,"line_end":1152,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":225651,"byte_end":225660,"line_start":1153,"line_end":1153,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2010},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226028,"byte_end":226036,"line_start":1164,"line_end":1164,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Size3D<T, U>>::to_usize","value":"fn (&self) -> Size3D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `uint` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `uint` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":225737,"byte_end":225794,"line_start":1158,"line_end":1158,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":225799,"byte_end":225802,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":225807,"byte_end":225882,"line_start":1160,"line_end":1160,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":225887,"byte_end":225961,"line_start":1161,"line_end":1161,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":225966,"byte_end":226002,"line_start":1162,"line_end":1162,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226007,"byte_end":226016,"line_start":1163,"line_end":1163,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2011},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226387,"byte_end":226393,"line_start":1174,"line_end":1174,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Size3D<T, U>>::to_u32","value":"fn (&self) -> Size3D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226097,"byte_end":226153,"line_start":1168,"line_end":1168,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226158,"byte_end":226161,"line_start":1169,"line_end":1169,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226166,"byte_end":226241,"line_start":1170,"line_end":1170,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226246,"byte_end":226320,"line_start":1171,"line_end":1171,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226325,"byte_end":226361,"line_start":1172,"line_end":1172,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226366,"byte_end":226375,"line_start":1173,"line_end":1173,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2012},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226742,"byte_end":226748,"line_start":1184,"line_end":1184,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Size3D<T, U>>::to_i32","value":"fn (&self) -> Size3D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226452,"byte_end":226508,"line_start":1178,"line_end":1178,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226513,"byte_end":226516,"line_start":1179,"line_end":1179,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226521,"byte_end":226596,"line_start":1180,"line_end":1180,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226601,"byte_end":226675,"line_start":1181,"line_end":1181,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226680,"byte_end":226716,"line_start":1182,"line_end":1182,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226721,"byte_end":226730,"line_start":1183,"line_end":1183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2013},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227097,"byte_end":227103,"line_start":1194,"line_end":1194,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Size3D<T, U>>::to_i64","value":"fn (&self) -> Size3D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` size, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` size, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226807,"byte_end":226863,"line_start":1188,"line_end":1188,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226868,"byte_end":226871,"line_start":1189,"line_end":1189,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point sizes, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226876,"byte_end":226951,"line_start":1190,"line_end":1190,"column_start":5,"column_end":80}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":226956,"byte_end":227030,"line_start":1191,"line_end":1191,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227035,"byte_end":227071,"line_start":1192,"line_end":1192,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227076,"byte_end":227085,"line_start":1193,"line_end":1193,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2017},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227466,"byte_end":227469,"line_start":1205,"line_end":1205,"column_start":12,"column_end":15},"name":"abs","qualname":"<Size3D<T, U>>::abs","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the absolute value of each component.","sig":null,"attributes":[{"value":"/ Computes the absolute value of each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227198,"byte_end":227248,"line_start":1200,"line_end":1200,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227253,"byte_end":227256,"line_start":1201,"line_end":1201,"column_start":5,"column_end":8}},{"value":"/ For `f32` and `f64`, `NaN` will be returned for component if the component is `NaN`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227261,"byte_end":227349,"line_start":1202,"line_end":1202,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227354,"byte_end":227357,"line_start":1203,"line_end":1203,"column_start":5,"column_end":8}},{"value":"/ For signed integers, `::MIN` will be returned for component if the component is `::MIN`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227362,"byte_end":227454,"line_start":1204,"line_end":1204,"column_start":5,"column_end":97}}]},{"kind":"Method","id":{"krate":0,"index":2018},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227674,"byte_end":227685,"line_start":1210,"line_end":1210,"column_start":12,"column_end":23},"name":"is_positive","qualname":"<Size3D<T, U>>::is_positive","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all components is positive and `false` any component is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all components is positive and `false` any component is zero or negative.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227567,"byte_end":227662,"line_start":1209,"line_end":1209,"column_start":5,"column_end":100}}]},{"kind":"Method","id":{"krate":0,"index":2022},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227952,"byte_end":227955,"line_start":1218,"line_end":1218,"column_start":12,"column_end":15},"name":"min","qualname":"<Size3D<T, U>>::min","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which are minimum of this size and another.\n","sig":null,"attributes":[{"value":"/ Returns the size each component of which are minimum of this size and another.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227844,"byte_end":227926,"line_start":1216,"line_end":1216,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227931,"byte_end":227940,"line_start":1217,"line_end":1217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2023},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":228259,"byte_end":228262,"line_start":1228,"line_end":1228,"column_start":12,"column_end":15},"name":"max","qualname":"<Size3D<T, U>>::max","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which are maximum of this size and another.\n","sig":null,"attributes":[{"value":"/ Returns the size each component of which are maximum of this size and another.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":228151,"byte_end":228233,"line_start":1226,"line_end":1226,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":228238,"byte_end":228247,"line_start":1227,"line_end":1227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2024},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":228651,"byte_end":228656,"line_start":1241,"line_end":1241,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Size3D<T, U>>::clamp","value":"fn (&self, start: Self, end: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the size each component of which clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the size each component of which clamped by corresponding","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":228458,"byte_end":228527,"line_start":1236,"line_end":1236,"column_start":5,"column_end":74}},{"value":"/ components of `start` and `end`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":228532,"byte_end":228568,"line_start":1237,"line_end":1237,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":228573,"byte_end":228576,"line_start":1238,"line_end":1238,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":228581,"byte_end":228625,"line_start":1239,"line_end":1239,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":228630,"byte_end":228639,"line_start":1240,"line_end":1240,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2025},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":228863,"byte_end":228875,"line_start":1249,"line_end":1249,"column_start":12,"column_end":24},"name":"greater_than","qualname":"<Size3D<T, U>>::greater_than","value":"fn (&self, other: Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"greater than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"greater than\" operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":228773,"byte_end":228851,"line_start":1248,"line_end":1248,"column_start":5,"column_end":83}}]},{"kind":"Method","id":{"krate":0,"index":2026},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":229171,"byte_end":229181,"line_start":1258,"line_end":1258,"column_start":12,"column_end":22},"name":"lower_than","qualname":"<Size3D<T, U>>::lower_than","value":"fn (&self, other: Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"lower than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"lower than\" operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":229083,"byte_end":229159,"line_start":1257,"line_end":1257,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":2027},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":229465,"byte_end":229485,"line_start":1267,"line_end":1267,"column_start":12,"column_end":32},"name":"is_empty_or_negative","qualname":"<Size3D<T, U>>::is_empty_or_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any component of size is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns `true` if any component of size is zero or negative.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":229389,"byte_end":229453,"line_start":1266,"line_end":1266,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":2031},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":229769,"byte_end":229774,"line_start":1278,"line_end":1278,"column_start":12,"column_end":17},"name":"equal","qualname":"<Size3D<T, U>>::equal","value":"fn (&self, other: Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"equal\" operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":229686,"byte_end":229757,"line_start":1277,"line_end":1277,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":2032},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":230072,"byte_end":230081,"line_start":1287,"line_end":1287,"column_start":12,"column_end":21},"name":"not_equal","qualname":"<Size3D<T, U>>::not_equal","value":"fn (&self, other: Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"not equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"not equal\" operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":229985,"byte_end":230060,"line_start":1286,"line_end":1286,"column_start":5,"column_end":80}}]},{"kind":"Function","id":{"krate":0,"index":2134},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":235427,"byte_end":235432,"line_start":1520,"line_end":1520,"column_start":14,"column_end":19},"name":"size3","qualname":"::size::size3","value":"fn <T, U> (w: T, h: T, d: T) -> Size3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Size3D::new(w, h, d)`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Size3D::new(w, h, d)`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":235362,"byte_end":235403,"line_start":1518,"line_end":1518,"column_start":1,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":235404,"byte_end":235413,"line_start":1519,"line_end":1519,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":2168},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242723,"byte_end":242734,"line_start":47,"line_end":47,"column_start":12,"column_end":23},"name":"Transform2D","qualname":"::transform2d::Transform2D","value":"Transform2D { m11, m12, m21, m22, m31, m32, _unit }","parent":null,"children":[{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2178}],"decl_id":null,"docs":" A 2d transform stored as a 3 by 2 matrix in row-major order in memory.","sig":null,"attributes":[{"value":"/ A 2d transform stored as a 3 by 2 matrix in row-major order in memory.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":241783,"byte_end":241857,"line_start":31,"line_end":31,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":241858,"byte_end":241861,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ Transforms can be parametrized over the source and destination units, to describe a","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":241862,"byte_end":241949,"line_start":33,"line_end":33,"column_start":1,"column_end":88}},{"value":"/ transformation from a space to another.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":241950,"byte_end":241993,"line_start":34,"line_end":34,"column_start":1,"column_end":44}},{"value":"/ For example, `Transform2D<f32, WorldSpace, ScreenSpace>::transform_point4d`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":241994,"byte_end":242073,"line_start":35,"line_end":35,"column_start":1,"column_end":80}},{"value":"/ takes a `Point2D<f32, WorldSpace>` and returns a `Point2D<f32, ScreenSpace>`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242074,"byte_end":242155,"line_start":36,"line_end":36,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242156,"byte_end":242159,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Transforms expose a set of convenience methods for pre- and post-transformations.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242160,"byte_end":242245,"line_start":38,"line_end":38,"column_start":1,"column_end":86}},{"value":"/ A pre-transformation corresponds to adding an operation that is applied before","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242246,"byte_end":242328,"line_start":39,"line_end":39,"column_start":1,"column_end":83}},{"value":"/ the rest of the transformation, while a post-transformation adds an operation","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242329,"byte_end":242410,"line_start":40,"line_end":40,"column_start":1,"column_end":82}},{"value":"/ that is applied after.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242411,"byte_end":242437,"line_start":41,"line_end":41,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242438,"byte_end":242441,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ These transforms are for working with _row vectors_, so the matrix math for transforming","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242442,"byte_end":242534,"line_start":43,"line_end":43,"column_start":1,"column_end":93}},{"value":"/ a vector is `v * T`. If your library is using column vectors, use `row_major` functions when you","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242535,"byte_end":242635,"line_start":44,"line_end":44,"column_start":1,"column_end":101}},{"value":"/ are asked for `column_major` representations and vice versa.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242636,"byte_end":242700,"line_start":45,"line_end":45,"column_start":1,"column_end":65}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242701,"byte_end":242711,"line_start":46,"line_end":46,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2172},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242758,"byte_end":242761,"line_start":48,"line_end":48,"column_start":9,"column_end":12},"name":"m11","qualname":"::transform2d::Transform2D::m11","value":"T","parent":{"krate":0,"index":2168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2173},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242770,"byte_end":242773,"line_start":48,"line_end":48,"column_start":21,"column_end":24},"name":"m12","qualname":"::transform2d::Transform2D::m12","value":"T","parent":{"krate":0,"index":2168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2174},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242786,"byte_end":242789,"line_start":49,"line_end":49,"column_start":9,"column_end":12},"name":"m21","qualname":"::transform2d::Transform2D::m21","value":"T","parent":{"krate":0,"index":2168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2175},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242798,"byte_end":242801,"line_start":49,"line_end":49,"column_start":21,"column_end":24},"name":"m22","qualname":"::transform2d::Transform2D::m22","value":"T","parent":{"krate":0,"index":2168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2176},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242814,"byte_end":242817,"line_start":50,"line_end":50,"column_start":9,"column_end":12},"name":"m31","qualname":"::transform2d::Transform2D::m31","value":"T","parent":{"krate":0,"index":2168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2177},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242826,"byte_end":242829,"line_start":50,"line_end":50,"column_start":21,"column_end":24},"name":"m32","qualname":"::transform2d::Transform2D::m32","value":"T","parent":{"krate":0,"index":2168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2178},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242861,"byte_end":242866,"line_start":52,"line_end":52,"column_start":9,"column_end":14},"name":"_unit","qualname":"::transform2d::Transform2D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":2168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2207},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":245326,"byte_end":245335,"line_start":141,"line_end":141,"column_start":18,"column_end":27},"name":"row_major","qualname":"<Transform2D<T, Src, Dst>>::row_major","value":"fn (m11: T, m12: T, m21: T, m22: T, m31: T, m32: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a transform specifying its matrix elements in row-major order.","sig":null,"attributes":[{"value":"/ Create a transform specifying its matrix elements in row-major order.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":245010,"byte_end":245083,"line_start":136,"line_end":136,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":245088,"byte_end":245091,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Beware: This library is written with the assumption that row vectors","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":245096,"byte_end":245168,"line_start":138,"line_end":138,"column_start":5,"column_end":77}},{"value":"/ are being used. If your matrices use column vectors (i.e. transforming a vector","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":245173,"byte_end":245256,"line_start":139,"line_end":139,"column_start":5,"column_end":88}},{"value":"/ is `T * v`), then please use `column_major`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":245261,"byte_end":245308,"line_start":140,"line_end":140,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":2208},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":245851,"byte_end":245863,"line_start":155,"line_end":155,"column_start":18,"column_end":30},"name":"column_major","qualname":"<Transform2D<T, Src, Dst>>::column_major","value":"fn (m11: T, m21: T, m31: T, m12: T, m22: T, m32: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a transform specifying its matrix elements in column-major order.","sig":null,"attributes":[{"value":"/ Create a transform specifying its matrix elements in column-major order.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":245535,"byte_end":245611,"line_start":150,"line_end":150,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":245616,"byte_end":245619,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ Beware: This library is written with the assumption that row vectors","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":245624,"byte_end":245696,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ are being used. If your matrices use column vectors (i.e. transforming a vector","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":245701,"byte_end":245784,"line_start":153,"line_end":153,"column_start":5,"column_end":88}},{"value":"/ is `T * v`), then please use `row_major`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":245789,"byte_end":245833,"line_start":154,"line_end":154,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":2209},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":246390,"byte_end":246399,"line_start":172,"line_end":172,"column_start":12,"column_end":21},"name":"approx_eq","qualname":"<Transform2D<T, Src, Dst>>::approx_eq","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true is this transform is approximately equal to the other one, using\n T's default epsilon value.","sig":null,"attributes":[{"value":"/ Returns true is this transform is approximately equal to the other one, using","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":246064,"byte_end":246145,"line_start":165,"line_end":165,"column_start":5,"column_end":86}},{"value":"/ T's default epsilon value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":246150,"byte_end":246180,"line_start":166,"line_end":166,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":246185,"byte_end":246188,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ The same as [`ApproxEq::approx_eq()`] but available without importing trait.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":246193,"byte_end":246273,"line_start":168,"line_end":168,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":246278,"byte_end":246281,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ [`ApproxEq::approx_eq()`]: ./approxeq/trait.ApproxEq.html#method.approx_eq","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":246286,"byte_end":246364,"line_start":170,"line_end":170,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":246369,"byte_end":246378,"line_start":171,"line_end":171,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2210},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":246861,"byte_end":246874,"line_start":184,"line_end":184,"column_start":12,"column_end":25},"name":"approx_eq_eps","qualname":"<Transform2D<T, Src, Dst>>::approx_eq_eps","value":"fn (&self, other: &Self, eps: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true is this transform is approximately equal to the other one, using\n a provided epsilon value.","sig":null,"attributes":[{"value":"/ Returns true is this transform is approximately equal to the other one, using","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":246524,"byte_end":246605,"line_start":177,"line_end":177,"column_start":5,"column_end":86}},{"value":"/ a provided epsilon value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":246610,"byte_end":246639,"line_start":178,"line_end":178,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":246644,"byte_end":246647,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ The same as [`ApproxEq::approx_eq_eps()`] but available without importing trait.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":246652,"byte_end":246736,"line_start":180,"line_end":180,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":246741,"byte_end":246744,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ [`ApproxEq::approx_eq_eps()`]: ./approxeq/trait.ApproxEq.html#method.approx_eq_eps","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":246749,"byte_end":246835,"line_start":182,"line_end":182,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":246840,"byte_end":246849,"line_start":183,"line_end":183,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2215},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":247479,"byte_end":247497,"line_start":198,"line_end":198,"column_start":12,"column_end":30},"name":"to_row_major_array","qualname":"<Transform2D<T, Src, Dst>>::to_row_major_array","value":"fn (&self) -> [T; 6]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's terms in row-major order (the order\n in which the transform is actually laid out in memory).","sig":null,"attributes":[{"value":"/ Returns an array containing this transform's terms in row-major order (the order","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":247071,"byte_end":247155,"line_start":191,"line_end":191,"column_start":5,"column_end":89}},{"value":"/ in which the transform is actually laid out in memory).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":247160,"byte_end":247219,"line_start":192,"line_end":192,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":247224,"byte_end":247227,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ Beware: This library is written with the assumption that row vectors","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":247232,"byte_end":247304,"line_start":194,"line_end":194,"column_start":5,"column_end":77}},{"value":"/ are being used. If your matrices use column vectors (i.e. transforming a vector","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":247309,"byte_end":247392,"line_start":195,"line_end":195,"column_start":5,"column_end":88}},{"value":"/ is `T * v`), then please use `to_column_major_array`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":247397,"byte_end":247453,"line_start":196,"line_end":196,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":247458,"byte_end":247467,"line_start":197,"line_end":197,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2217},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":247977,"byte_end":247998,"line_start":212,"line_end":212,"column_start":12,"column_end":33},"name":"to_column_major_array","qualname":"<Transform2D<T, Src, Dst>>::to_column_major_array","value":"fn (&self) -> [T; 6]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's terms in column-major order.","sig":null,"attributes":[{"value":"/ Returns an array containing this transform's terms in column-major order.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":247643,"byte_end":247720,"line_start":206,"line_end":206,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":247725,"byte_end":247728,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ Beware: This library is written with the assumption that row vectors","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":247733,"byte_end":247805,"line_start":208,"line_end":208,"column_start":5,"column_end":77}},{"value":"/ are being used. If your matrices use column vectors (i.e. transforming a vector","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":247810,"byte_end":247893,"line_start":209,"line_end":209,"column_start":5,"column_end":88}},{"value":"/ is `T * v`), then please use `to_row_major_array`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":247898,"byte_end":247951,"line_start":210,"line_end":210,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":247956,"byte_end":247965,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2219},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":248579,"byte_end":248592,"line_start":228,"line_end":228,"column_start":12,"column_end":25},"name":"to_row_arrays","qualname":"<Transform2D<T, Src, Dst>>::to_row_arrays","value":"fn (&self) -> [[T; 2]; 3]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's 3 rows in (in row-major order)\n as arrays.","sig":null,"attributes":[{"value":"/ Returns an array containing this transform's 3 rows in (in row-major order)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":248132,"byte_end":248211,"line_start":219,"line_end":219,"column_start":5,"column_end":84}},{"value":"/ as arrays.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":248216,"byte_end":248230,"line_start":220,"line_end":220,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":248235,"byte_end":248238,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method to interface with other libraries like glium.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":248243,"byte_end":248321,"line_start":222,"line_end":222,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":248326,"byte_end":248329,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Beware: This library is written with the assumption that row vectors","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":248334,"byte_end":248406,"line_start":224,"line_end":224,"column_start":5,"column_end":77}},{"value":"/ are being used. If your matrices use column vectors (i.e. transforming a vector","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":248411,"byte_end":248494,"line_start":225,"line_end":225,"column_start":5,"column_end":88}},{"value":"/ is `T * v`), this will return column major arrays.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":248499,"byte_end":248553,"line_start":226,"line_end":226,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":248558,"byte_end":248567,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2222},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":249078,"byte_end":249098,"line_start":242,"line_end":242,"column_start":12,"column_end":32},"name":"from_row_major_array","qualname":"<Transform2D<T, Src, Dst>>::from_row_major_array","value":"fn (array: [T; 6]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a transform from an array of 6 elements in row-major order.","sig":null,"attributes":[{"value":"/ Creates a transform from an array of 6 elements in row-major order.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":248750,"byte_end":248821,"line_start":236,"line_end":236,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":248826,"byte_end":248829,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Beware: This library is written with the assumption that row vectors","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":248834,"byte_end":248906,"line_start":238,"line_end":238,"column_start":5,"column_end":77}},{"value":"/ are being used. If your matrices use column vectors (i.e. transforming a vector","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":248911,"byte_end":248994,"line_start":239,"line_end":239,"column_start":5,"column_end":88}},{"value":"/ is `T * v`), please provide a column major array.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":248999,"byte_end":249052,"line_start":240,"line_end":240,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":249057,"byte_end":249066,"line_start":241,"line_end":241,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2224},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":249591,"byte_end":249606,"line_start":256,"line_end":256,"column_start":12,"column_end":27},"name":"from_row_arrays","qualname":"<Transform2D<T, Src, Dst>>::from_row_arrays","value":"fn (array: [[T; 2]; 3]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a transform from 3 rows of 2 elements (row-major order).","sig":null,"attributes":[{"value":"/ Creates a transform from 3 rows of 2 elements (row-major order).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":249266,"byte_end":249334,"line_start":250,"line_end":250,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":249339,"byte_end":249342,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ Beware: This library is written with the assumption that row vectors","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":249347,"byte_end":249419,"line_start":252,"line_end":252,"column_start":5,"column_end":77}},{"value":"/ are being used. If your matrices use column vectors (i.e. transforming a vector","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":249424,"byte_end":249507,"line_start":253,"line_end":253,"column_start":5,"column_end":88}},{"value":"/ is `T * v`), please provide a column major array.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":249512,"byte_end":249565,"line_start":254,"line_end":254,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":249570,"byte_end":249579,"line_start":255,"line_end":255,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2227},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":249877,"byte_end":249887,"line_start":266,"line_end":266,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Transform2D<T, Src, Dst>>::to_untyped","value":"fn (&self) -> Transform2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":249797,"byte_end":249851,"line_start":264,"line_end":264,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":249856,"byte_end":249865,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2228},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":250151,"byte_end":250163,"line_start":276,"line_end":276,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Transform2D<T, Src, Dst>>::from_untyped","value":"fn (p: &Transform2D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":250089,"byte_end":250125,"line_start":274,"line_end":274,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":250130,"byte_end":250139,"line_start":275,"line_end":275,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2233},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":250513,"byte_end":250517,"line_start":288,"line_end":288,"column_start":12,"column_end":16},"name":"cast","qualname":"<Transform2D<T, Src, Dst>>::cast","value":"fn <NewT> (&self) -> Transform2D<NewT, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":250413,"byte_end":250487,"line_start":286,"line_end":286,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":250492,"byte_end":250501,"line_start":287,"line_end":287,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2235},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":250712,"byte_end":250720,"line_start":293,"line_end":293,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Transform2D<T, Src, Dst>>::try_cast","value":"fn <NewT> (&self) -> Option<Transform2D<NewT, Src, Dst>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":250617,"byte_end":250700,"line_start":292,"line_end":292,"column_start":5,"column_end":88}}]},{"kind":"Method","id":{"krate":0,"index":2241},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":251413,"byte_end":251421,"line_start":315,"line_end":315,"column_start":12,"column_end":20},"name":"identity","qualname":"<Transform2D<T, Src, Dst>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2247},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":252320,"byte_end":252334,"line_start":346,"line_end":346,"column_start":12,"column_end":26},"name":"post_transform","qualname":"<Transform2D<T, Src, Dst>>::post_transform","value":"fn <NewDst> (&self, mat: &Transform2D<T, Dst, NewDst>) -> Transform2D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two matrices such that mat's transformation\n applies after self's transformation.","sig":null,"attributes":[{"value":"/ Returns the multiplication of the two matrices such that mat's transformation","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":252095,"byte_end":252176,"line_start":341,"line_end":341,"column_start":5,"column_end":86}},{"value":"/ applies after self's transformation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":252181,"byte_end":252221,"line_start":342,"line_end":342,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":252226,"byte_end":252229,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ Assuming row vectors, this is equivalent to self * mat","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":252234,"byte_end":252292,"line_start":344,"line_end":344,"column_start":5,"column_end":63}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":252297,"byte_end":252308,"line_start":345,"line_end":345,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2249},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":253049,"byte_end":253062,"line_start":363,"line_end":363,"column_start":12,"column_end":25},"name":"pre_transform","qualname":"<Transform2D<T, Src, Dst>>::pre_transform","value":"fn <NewSrc> (&self, mat: &Transform2D<T, NewSrc, Src>) -> Transform2D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two matrices such that mat's transformation\n applies before self's transformation.","sig":null,"attributes":[{"value":"/ Returns the multiplication of the two matrices such that mat's transformation","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":252809,"byte_end":252890,"line_start":357,"line_end":357,"column_start":5,"column_end":86}},{"value":"/ applies before self's transformation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":252895,"byte_end":252936,"line_start":358,"line_end":358,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":252941,"byte_end":252944,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ Assuming row vectors, this is equivalent to mat * self","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":252949,"byte_end":253007,"line_start":360,"line_end":360,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":253012,"byte_end":253021,"line_start":361,"line_end":361,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":253026,"byte_end":253037,"line_start":362,"line_end":362,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2251},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":253252,"byte_end":253270,"line_start":369,"line_end":369,"column_start":12,"column_end":30},"name":"create_translation","qualname":"<Transform2D<T, Src, Dst>>::create_translation","value":"fn (x: T, y: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a translation transform.\n","sig":null,"attributes":[{"value":"/ Returns a translation transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":253190,"byte_end":253226,"line_start":367,"line_end":367,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":253231,"byte_end":253240,"line_start":368,"line_end":368,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2252},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":253598,"byte_end":253612,"line_start":381,"line_end":381,"column_start":12,"column_end":26},"name":"post_translate","qualname":"<Transform2D<T, Src, Dst>>::post_translate","value":"fn (&self, v: Vector2D<T, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a translation after self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a translation after self's transformation and returns the resulting transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":253466,"byte_end":253556,"line_start":378,"line_end":378,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":253561,"byte_end":253570,"line_start":379,"line_end":379,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":253575,"byte_end":253586,"line_start":380,"line_end":380,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2253},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":253867,"byte_end":253880,"line_start":388,"line_end":388,"column_start":12,"column_end":25},"name":"pre_translate","qualname":"<Transform2D<T, Src, Dst>>::pre_translate","value":"fn (&self, v: Vector2D<T, Src>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a translation before self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a translation before self's transformation and returns the resulting transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":253734,"byte_end":253825,"line_start":385,"line_end":385,"column_start":5,"column_end":96}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":253830,"byte_end":253839,"line_start":386,"line_end":386,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":253844,"byte_end":253855,"line_start":387,"line_end":387,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2254},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":254043,"byte_end":254055,"line_start":393,"line_end":393,"column_start":12,"column_end":24},"name":"create_scale","qualname":"<Transform2D<T, Src, Dst>>::create_scale","value":"fn (x: T, y: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a scale transform.\n","sig":null,"attributes":[{"value":"/ Returns a scale transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":254001,"byte_end":254031,"line_start":392,"line_end":392,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2255},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":254347,"byte_end":254357,"line_start":405,"line_end":405,"column_start":12,"column_end":22},"name":"post_scale","qualname":"<Transform2D<T, Src, Dst>>::post_scale","value":"fn (&self, x: T, y: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a scale after self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a scale after self's transformation and returns the resulting transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":254221,"byte_end":254305,"line_start":402,"line_end":402,"column_start":5,"column_end":89}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":254310,"byte_end":254319,"line_start":403,"line_end":403,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":254324,"byte_end":254335,"line_start":404,"line_end":404,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2256},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":254587,"byte_end":254596,"line_start":412,"line_end":412,"column_start":12,"column_end":21},"name":"pre_scale","qualname":"<Transform2D<T, Src, Dst>>::pre_scale","value":"fn (&self, x: T, y: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a scale before self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a scale before self's transformation and returns the resulting transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":254460,"byte_end":254545,"line_start":409,"line_end":409,"column_start":5,"column_end":90}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":254550,"byte_end":254559,"line_start":410,"line_end":410,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":254564,"byte_end":254575,"line_start":411,"line_end":411,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2257},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":254965,"byte_end":254980,"line_start":425,"line_end":425,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Transform2D<T, Src, Dst>>::transform_point","value":"fn (&self, point: Point2D<T, Src>) -> Point2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given point transformed by this transform.","sig":null,"attributes":[{"value":"/ Returns the given point transformed by this transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":254794,"byte_end":254852,"line_start":420,"line_end":420,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":254857,"byte_end":254860,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Assuming row vectors, this is equivalent to `p * self`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":254865,"byte_end":254923,"line_start":422,"line_end":422,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":254928,"byte_end":254937,"line_start":423,"line_end":423,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":254942,"byte_end":254953,"line_start":424,"line_end":424,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2258},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":255372,"byte_end":255388,"line_start":437,"line_end":437,"column_start":12,"column_end":28},"name":"transform_vector","qualname":"<Transform2D<T, Src, Dst>>::transform_vector","value":"fn (&self, vec: Vector2D<T, Src>) -> Vector2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given vector transformed by this matrix.","sig":null,"attributes":[{"value":"/ Returns the given vector transformed by this matrix.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":255203,"byte_end":255259,"line_start":432,"line_end":432,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":255264,"byte_end":255267,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ Assuming row vectors, this is equivalent to `v * self`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":255272,"byte_end":255330,"line_start":434,"line_end":434,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":255335,"byte_end":255344,"line_start":435,"line_end":435,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":255349,"byte_end":255360,"line_start":436,"line_end":436,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2259},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":255708,"byte_end":255722,"line_start":446,"line_end":446,"column_start":12,"column_end":26},"name":"transform_rect","qualname":"<Transform2D<T, Src, Dst>>::transform_rect","value":"fn (&self, rect: &Rect<T, Src>) -> Rect<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns a rectangle that encompasses the result of transforming the given rectangle by this\n transform.\n","sig":null,"attributes":[{"value":"/ Returns a rectangle that encompasses the result of transforming the given rectangle by this","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":255552,"byte_end":255647,"line_start":442,"line_end":442,"column_start":5,"column_end":100}},{"value":"/ transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":255652,"byte_end":255666,"line_start":443,"line_end":443,"column_start":5,"column_end":19}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":255671,"byte_end":255680,"line_start":444,"line_end":444,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":255685,"byte_end":255696,"line_start":445,"line_end":445,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2260},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":256141,"byte_end":256152,"line_start":458,"line_end":458,"column_start":12,"column_end":23},"name":"determinant","qualname":"<Transform2D<T, Src, Dst>>::determinant","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Computes and returns the determinant of this transform.\n","sig":null,"attributes":[{"value":"/ Computes and returns the determinant of this transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":256070,"byte_end":256129,"line_start":457,"line_end":457,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2261},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":256322,"byte_end":256335,"line_start":464,"line_end":464,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<Transform2D<T, Src, Dst>>::is_invertible","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether it is possible to compute the inverse transform.\n","sig":null,"attributes":[{"value":"/ Returns whether it is possible to compute the inverse transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":256228,"byte_end":256296,"line_start":462,"line_end":462,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":256301,"byte_end":256310,"line_start":463,"line_end":463,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2262},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":256481,"byte_end":256488,"line_start":470,"line_end":470,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Transform2D<T, Src, Dst>>::inverse","value":"fn (&self) -> Option<Transform2D<T, Dst, Src>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse transform if possible.\n","sig":null,"attributes":[{"value":"/ Returns the inverse transform if possible.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":256407,"byte_end":256453,"line_start":468,"line_end":468,"column_start":5,"column_end":51}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":256458,"byte_end":256469,"line_start":469,"line_end":469,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2263},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":257155,"byte_end":257171,"line_start":493,"line_end":493,"column_start":12,"column_end":28},"name":"with_destination","qualname":"<Transform2D<T, Src, Dst>>::with_destination","value":"fn <NewDst> (&self) -> Transform2D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same transform with a different destination unit.\n","sig":null,"attributes":[{"value":"/ Returns the same transform with a different destination unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":257064,"byte_end":257129,"line_start":491,"line_end":491,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":257134,"byte_end":257143,"line_start":492,"line_end":492,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2265},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":257455,"byte_end":257466,"line_start":503,"line_end":503,"column_start":12,"column_end":23},"name":"with_source","qualname":"<Transform2D<T, Src, Dst>>::with_source","value":"fn <NewSrc> (&self) -> Transform2D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same transform with a different source unit.\n","sig":null,"attributes":[{"value":"/ Returns the same transform with a different source unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":257369,"byte_end":257429,"line_start":501,"line_end":501,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":257434,"byte_end":257443,"line_start":502,"line_end":502,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2271},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":257957,"byte_end":257972,"line_start":523,"line_end":523,"column_start":12,"column_end":27},"name":"create_rotation","qualname":"<Transform2D<T, Src, Dst>>::create_rotation","value":"fn (theta: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a rotation transform.\n","sig":null,"attributes":[{"value":"/ Returns a rotation transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":257898,"byte_end":257931,"line_start":521,"line_end":521,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":257936,"byte_end":257945,"line_start":522,"line_end":522,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2272},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":258355,"byte_end":258366,"line_start":537,"line_end":537,"column_start":12,"column_end":23},"name":"post_rotate","qualname":"<Transform2D<T, Src, Dst>>::post_rotate","value":"fn (&self, theta: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a rotation after self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a rotation after self's transformation and returns the resulting transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":258226,"byte_end":258313,"line_start":534,"line_end":534,"column_start":5,"column_end":92}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":258318,"byte_end":258327,"line_start":535,"line_end":535,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":258332,"byte_end":258343,"line_start":536,"line_end":536,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2273},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":258608,"byte_end":258618,"line_start":544,"line_end":544,"column_start":12,"column_end":22},"name":"pre_rotate","qualname":"<Transform2D<T, Src, Dst>>::pre_rotate","value":"fn (&self, theta: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Applies a rotation before self's transformation and returns the resulting transform.\n","sig":null,"attributes":[{"value":"/ Applies a rotation before self's transformation and returns the resulting transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":258478,"byte_end":258566,"line_start":541,"line_end":541,"column_start":5,"column_end":93}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":258571,"byte_end":258580,"line_start":542,"line_end":542,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":258585,"byte_end":258596,"line_start":543,"line_end":543,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2278},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":259052,"byte_end":259057,"line_start":560,"line_end":560,"column_start":12,"column_end":17},"name":"to_3d","qualname":"<Transform2D<T, Src, Dst>>::to_3d","value":"fn (&self) -> Transform3D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Create a 3D transform from the current transform\n","sig":null,"attributes":[{"value":"/ Create a 3D transform from the current transform","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":258988,"byte_end":259040,"line_start":559,"line_end":559,"column_start":5,"column_end":57}}]},{"kind":"Struct","id":{"krate":0,"index":2331},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267893,"byte_end":267904,"line_start":49,"line_end":49,"column_start":12,"column_end":23},"name":"Transform3D","qualname":"::transform3d::Transform3D","value":"Transform3D { m11, m12, m13, m14, m21, m22, m23, m24, m31, m32, m33, m34, m41, m42, m43, m44, _unit }","parent":null,"children":[{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2344},{"krate":0,"index":2345},{"krate":0,"index":2346},{"krate":0,"index":2347},{"krate":0,"index":2348},{"krate":0,"index":2349},{"krate":0,"index":2350},{"krate":0,"index":2351}],"decl_id":null,"docs":" A 3d transform stored as a 4 by 4 matrix in row-major order in memory.","sig":null,"attributes":[{"value":"/ A 3d transform stored as a 4 by 4 matrix in row-major order in memory.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":266953,"byte_end":267027,"line_start":33,"line_end":33,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267028,"byte_end":267031,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ Transforms can be parametrized over the source and destination units, to describe a","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267032,"byte_end":267119,"line_start":35,"line_end":35,"column_start":1,"column_end":88}},{"value":"/ transformation from a space to another.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267120,"byte_end":267163,"line_start":36,"line_end":36,"column_start":1,"column_end":44}},{"value":"/ For example, `Transform3D<f32, WorldSpace, ScreenSpace>::transform_point3d`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267164,"byte_end":267243,"line_start":37,"line_end":37,"column_start":1,"column_end":80}},{"value":"/ takes a `Point3D<f32, WorldSpace>` and returns a `Point3D<f32, ScreenSpace>`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267244,"byte_end":267325,"line_start":38,"line_end":38,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267326,"byte_end":267329,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ Transforms expose a set of convenience methods for pre- and post-transformations.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267330,"byte_end":267415,"line_start":40,"line_end":40,"column_start":1,"column_end":86}},{"value":"/ A pre-transformation corresponds to adding an operation that is applied before","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267416,"byte_end":267498,"line_start":41,"line_end":41,"column_start":1,"column_end":83}},{"value":"/ the rest of the transformation, while a post-transformation adds an operation","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267499,"byte_end":267580,"line_start":42,"line_end":42,"column_start":1,"column_end":82}},{"value":"/ that is applied after.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267581,"byte_end":267607,"line_start":43,"line_end":43,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267608,"byte_end":267611,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ These transforms are for working with _row vectors_, so the matrix math for transforming","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267612,"byte_end":267704,"line_start":45,"line_end":45,"column_start":1,"column_end":93}},{"value":"/ a vector is `v * T`. If your library is using column vectors, use `row_major` functions when you","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267705,"byte_end":267805,"line_start":46,"line_end":46,"column_start":1,"column_end":101}},{"value":"/ are asked for `column_major` representations and vice versa.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267806,"byte_end":267870,"line_start":47,"line_end":47,"column_start":1,"column_end":65}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267871,"byte_end":267881,"line_start":48,"line_end":48,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2335},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267928,"byte_end":267931,"line_start":50,"line_end":50,"column_start":9,"column_end":12},"name":"m11","qualname":"::transform3d::Transform3D::m11","value":"T","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2336},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267940,"byte_end":267943,"line_start":50,"line_end":50,"column_start":21,"column_end":24},"name":"m12","qualname":"::transform3d::Transform3D::m12","value":"T","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2337},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267952,"byte_end":267955,"line_start":50,"line_end":50,"column_start":33,"column_end":36},"name":"m13","qualname":"::transform3d::Transform3D::m13","value":"T","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2338},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267964,"byte_end":267967,"line_start":50,"line_end":50,"column_start":45,"column_end":48},"name":"m14","qualname":"::transform3d::Transform3D::m14","value":"T","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2339},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267980,"byte_end":267983,"line_start":51,"line_end":51,"column_start":9,"column_end":12},"name":"m21","qualname":"::transform3d::Transform3D::m21","value":"T","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2340},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":267992,"byte_end":267995,"line_start":51,"line_end":51,"column_start":21,"column_end":24},"name":"m22","qualname":"::transform3d::Transform3D::m22","value":"T","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2341},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":268004,"byte_end":268007,"line_start":51,"line_end":51,"column_start":33,"column_end":36},"name":"m23","qualname":"::transform3d::Transform3D::m23","value":"T","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2342},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":268016,"byte_end":268019,"line_start":51,"line_end":51,"column_start":45,"column_end":48},"name":"m24","qualname":"::transform3d::Transform3D::m24","value":"T","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2343},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":268032,"byte_end":268035,"line_start":52,"line_end":52,"column_start":9,"column_end":12},"name":"m31","qualname":"::transform3d::Transform3D::m31","value":"T","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2344},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":268044,"byte_end":268047,"line_start":52,"line_end":52,"column_start":21,"column_end":24},"name":"m32","qualname":"::transform3d::Transform3D::m32","value":"T","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2345},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":268056,"byte_end":268059,"line_start":52,"line_end":52,"column_start":33,"column_end":36},"name":"m33","qualname":"::transform3d::Transform3D::m33","value":"T","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2346},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":268068,"byte_end":268071,"line_start":52,"line_end":52,"column_start":45,"column_end":48},"name":"m34","qualname":"::transform3d::Transform3D::m34","value":"T","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2347},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":268084,"byte_end":268087,"line_start":53,"line_end":53,"column_start":9,"column_end":12},"name":"m41","qualname":"::transform3d::Transform3D::m41","value":"T","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2348},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":268096,"byte_end":268099,"line_start":53,"line_end":53,"column_start":21,"column_end":24},"name":"m42","qualname":"::transform3d::Transform3D::m42","value":"T","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2349},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":268108,"byte_end":268111,"line_start":53,"line_end":53,"column_start":33,"column_end":36},"name":"m43","qualname":"::transform3d::Transform3D::m43","value":"T","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2350},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":268120,"byte_end":268123,"line_start":53,"line_end":53,"column_start":45,"column_end":48},"name":"m44","qualname":"::transform3d::Transform3D::m44","value":"T","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2351},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":268155,"byte_end":268160,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"name":"_unit","qualname":"::transform3d::Transform3D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":2331},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2380},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":272084,"byte_end":272093,"line_start":182,"line_end":182,"column_start":18,"column_end":27},"name":"row_major","qualname":"<Transform3D<T, Src, Dst>>::row_major","value":"fn (m11: T, m12: T, m13: T, m14: T, m21: T, m22: T, m23: T, m24: T, m31: T, m32: T, m33: T, m34: T, m41: T, m42: T, m43: T, m44: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a transform specifying its components in row-major order.","sig":null,"attributes":[{"value":"/ Create a transform specifying its components in row-major order.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":271530,"byte_end":271598,"line_start":172,"line_end":172,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":271603,"byte_end":271606,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ For example, the translation terms m41, m42, m43 on the last row with the","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":271611,"byte_end":271688,"line_start":174,"line_end":174,"column_start":5,"column_end":82}},{"value":"/ row-major convention) are the 13rd, 14th and 15th parameters.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":271693,"byte_end":271758,"line_start":175,"line_end":175,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":271763,"byte_end":271766,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Beware: This library is written with the assumption that row vectors","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":271771,"byte_end":271843,"line_start":177,"line_end":177,"column_start":5,"column_end":77}},{"value":"/ are being used. If your matrices use column vectors (i.e. transforming a vector","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":271848,"byte_end":271931,"line_start":178,"line_end":178,"column_start":5,"column_end":88}},{"value":"/ is `T * v`), then please use `column_major`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":271936,"byte_end":271983,"line_start":179,"line_end":179,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":271988,"byte_end":271997,"line_start":180,"line_end":180,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2381},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":273051,"byte_end":273063,"line_start":207,"line_end":207,"column_start":18,"column_end":30},"name":"column_major","qualname":"<Transform3D<T, Src, Dst>>::column_major","value":"fn (m11: T, m21: T, m31: T, m41: T, m12: T, m22: T, m32: T, m42: T, m13: T, m23: T, m33: T, m43: T, m14: T, m24: T, m34: T, m44: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a transform specifying its components in column-major order.","sig":null,"attributes":[{"value":"/ Create a transform specifying its components in column-major order.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":272493,"byte_end":272564,"line_start":197,"line_end":197,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":272569,"byte_end":272572,"line_start":198,"line_end":198,"column_start":5,"column_end":8}},{"value":"/ For example, the translation terms m41, m42, m43 on the last column with the","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":272577,"byte_end":272657,"line_start":199,"line_end":199,"column_start":5,"column_end":85}},{"value":"/ column-major convention) are the 4th, 8th and 12nd parameters.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":272662,"byte_end":272728,"line_start":200,"line_end":200,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":272733,"byte_end":272736,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ Beware: This library is written with the assumption that row vectors","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":272741,"byte_end":272813,"line_start":202,"line_end":202,"column_start":5,"column_end":77}},{"value":"/ are being used. If your matrices use column vectors (i.e. transforming a vector","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":272818,"byte_end":272901,"line_start":203,"line_end":203,"column_start":5,"column_end":88}},{"value":"/ is `T * v`), then please use `row_major`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":272906,"byte_end":272950,"line_start":204,"line_end":204,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":272955,"byte_end":272964,"line_start":205,"line_end":205,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2386},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":273589,"byte_end":273597,"line_start":228,"line_end":228,"column_start":12,"column_end":20},"name":"identity","qualname":"<Transform3D<T, Src, Dst>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":273568,"byte_end":273577,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2392},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":274532,"byte_end":274544,"line_start":261,"line_end":261,"column_start":12,"column_end":24},"name":"row_major_2d","qualname":"<Transform3D<T, Src, Dst>>::row_major_2d","value":"fn (m11: T, m12: T, m21: T, m22: T, m41: T, m42: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 4 by 4 transform representing a 2d transformation, specifying its components\n in row-major order.\n","sig":null,"attributes":[{"value":"/ Create a 4 by 4 transform representing a 2d transformation, specifying its components","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":274389,"byte_end":274478,"line_start":258,"line_end":258,"column_start":5,"column_end":94}},{"value":"/ in row-major order.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":274483,"byte_end":274506,"line_start":259,"line_end":259,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":274511,"byte_end":274520,"line_start":260,"line_end":260,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2393},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":274891,"byte_end":274896,"line_start":272,"line_end":272,"column_start":12,"column_end":17},"name":"ortho","qualname":"<Transform3D<T, Src, Dst>>::ortho","value":"fn (left: T, right: T, bottom: T, top: T, near: T, far: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an orthogonal projection transform.\n","sig":null,"attributes":[{"value":"/ Create an orthogonal projection transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":274833,"byte_end":274879,"line_start":271,"line_end":271,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2394},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":275778,"byte_end":275783,"line_start":293,"line_end":293,"column_start":12,"column_end":17},"name":"is_2d","qualname":"<Transform3D<T, Src, Dst>>::is_2d","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this transform can be represented with a `Transform2D`.","sig":null,"attributes":[{"value":"/ Returns true if this transform can be represented with a `Transform2D`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":275601,"byte_end":275676,"line_start":289,"line_end":289,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":275681,"byte_end":275684,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ See <https://drafts.csswg.org/css-transforms/#2d-transform>","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":275689,"byte_end":275752,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":275757,"byte_end":275766,"line_start":292,"line_end":292,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2395},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":276323,"byte_end":276328,"line_start":306,"line_end":306,"column_start":12,"column_end":17},"name":"to_2d","qualname":"<Transform3D<T, Src, Dst>>::to_2d","value":"fn (&self) -> Transform2D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Create a 2D transform picking the relevant terms from this transform.","sig":null,"attributes":[{"value":"/ Create a 2D transform picking the relevant terms from this transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":276088,"byte_end":276161,"line_start":302,"line_end":302,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":276166,"byte_end":276169,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ This method assumes that self represents a 2d transformation, callers","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":276174,"byte_end":276247,"line_start":304,"line_end":304,"column_start":5,"column_end":78}},{"value":"/ should check that self.is_2d() returns true beforehand.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":276252,"byte_end":276311,"line_start":305,"line_end":305,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2396},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":276658,"byte_end":276677,"line_start":316,"line_end":316,"column_start":12,"column_end":31},"name":"is_backface_visible","qualname":"<Transform3D<T, Src, Dst>>::is_backface_visible","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check whether shapes on the XY plane with Z pointing towards the\n screen transformed by this matrix would be facing back.\n","sig":null,"attributes":[{"value":"/ Check whether shapes on the XY plane with Z pointing towards the","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":276514,"byte_end":276582,"line_start":314,"line_end":314,"column_start":5,"column_end":73}},{"value":"/ screen transformed by this matrix would be facing back.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":276587,"byte_end":276646,"line_start":315,"line_end":315,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":2397},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":277410,"byte_end":277419,"line_start":333,"line_end":333,"column_start":12,"column_end":21},"name":"approx_eq","qualname":"<Transform3D<T, Src, Dst>>::approx_eq","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true is this transform is approximately equal to the other one, using\n T's default epsilon value.","sig":null,"attributes":[{"value":"/ Returns true is this transform is approximately equal to the other one, using","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":277084,"byte_end":277165,"line_start":326,"line_end":326,"column_start":5,"column_end":86}},{"value":"/ T's default epsilon value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":277170,"byte_end":277200,"line_start":327,"line_end":327,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":277205,"byte_end":277208,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ The same as [`ApproxEq::approx_eq()`] but available without importing trait.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":277213,"byte_end":277293,"line_start":329,"line_end":329,"column_start":5,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":277298,"byte_end":277301,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ [`ApproxEq::approx_eq()`]: ./approxeq/trait.ApproxEq.html#method.approx_eq","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":277306,"byte_end":277384,"line_start":331,"line_end":331,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":277389,"byte_end":277398,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2398},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":277881,"byte_end":277894,"line_start":345,"line_end":345,"column_start":12,"column_end":25},"name":"approx_eq_eps","qualname":"<Transform3D<T, Src, Dst>>::approx_eq_eps","value":"fn (&self, other: &Self, eps: &T) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true is this transform is approximately equal to the other one, using\n a provided epsilon value.","sig":null,"attributes":[{"value":"/ Returns true is this transform is approximately equal to the other one, using","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":277544,"byte_end":277625,"line_start":338,"line_end":338,"column_start":5,"column_end":86}},{"value":"/ a provided epsilon value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":277630,"byte_end":277659,"line_start":339,"line_end":339,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":277664,"byte_end":277667,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ The same as [`ApproxEq::approx_eq_eps()`] but available without importing trait.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":277672,"byte_end":277756,"line_start":341,"line_end":341,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":277761,"byte_end":277764,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ [`ApproxEq::approx_eq_eps()`]: ./approxeq/trait.ApproxEq.html#method.approx_eq_eps","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":277769,"byte_end":277855,"line_start":343,"line_end":343,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":277860,"byte_end":277869,"line_start":344,"line_end":344,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2399},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":278129,"byte_end":278145,"line_start":352,"line_end":352,"column_start":12,"column_end":28},"name":"with_destination","qualname":"<Transform3D<T, Src, Dst>>::with_destination","value":"fn <NewDst> (&self) -> Transform3D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same transform with a different destination unit.\n","sig":null,"attributes":[{"value":"/ Returns the same transform with a different destination unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":278038,"byte_end":278103,"line_start":350,"line_end":350,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":278108,"byte_end":278117,"line_start":351,"line_end":351,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2401},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":278541,"byte_end":278552,"line_start":363,"line_end":363,"column_start":12,"column_end":23},"name":"with_source","qualname":"<Transform3D<T, Src, Dst>>::with_source","value":"fn <NewSrc> (&self) -> Transform3D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same transform with a different source unit.\n","sig":null,"attributes":[{"value":"/ Returns the same transform with a different source unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":278455,"byte_end":278515,"line_start":361,"line_end":361,"column_start":5,"column_end":65}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":278520,"byte_end":278529,"line_start":362,"line_end":362,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2403},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":278942,"byte_end":278952,"line_start":374,"line_end":374,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Transform3D<T, Src, Dst>>::to_untyped","value":"fn (&self) -> Transform3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":278862,"byte_end":278916,"line_start":372,"line_end":372,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":278921,"byte_end":278930,"line_start":373,"line_end":373,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2404},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":279329,"byte_end":279341,"line_start":385,"line_end":385,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Transform3D<T, Src, Dst>>::from_untyped","value":"fn (m: &Transform3D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":279267,"byte_end":279303,"line_start":383,"line_end":383,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":279308,"byte_end":279317,"line_start":384,"line_end":384,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2405},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":279836,"byte_end":279850,"line_start":399,"line_end":399,"column_start":12,"column_end":26},"name":"post_transform","qualname":"<Transform3D<T, Src, Dst>>::post_transform","value":"fn <NewDst> (&self, mat: &Transform3D<T, Dst, NewDst>) -> Transform3D<T, Src, NewDst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two matrices such that mat's transformation\n applies after self's transformation.","sig":null,"attributes":[{"value":"/ Returns the multiplication of the two matrices such that mat's transformation","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":279611,"byte_end":279692,"line_start":394,"line_end":394,"column_start":5,"column_end":86}},{"value":"/ applies after self's transformation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":279697,"byte_end":279737,"line_start":395,"line_end":395,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":279742,"byte_end":279745,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ Assuming row vectors, this is equivalent to self * mat","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":279750,"byte_end":279808,"line_start":397,"line_end":397,"column_start":5,"column_end":63}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":279813,"byte_end":279824,"line_start":398,"line_end":398,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2407},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":281843,"byte_end":281856,"line_start":426,"line_end":426,"column_start":12,"column_end":25},"name":"pre_transform","qualname":"<Transform3D<T, Src, Dst>>::pre_transform","value":"fn <NewSrc> (&self, mat: &Transform3D<T, NewSrc, Src>) -> Transform3D<T, NewSrc, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the multiplication of the two matrices such that mat's transformation\n applies before self's transformation.","sig":null,"attributes":[{"value":"/ Returns the multiplication of the two matrices such that mat's transformation","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":281603,"byte_end":281684,"line_start":420,"line_end":420,"column_start":5,"column_end":86}},{"value":"/ applies before self's transformation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":281689,"byte_end":281730,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":281735,"byte_end":281738,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ Assuming row vectors, this is equivalent to mat * self","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":281743,"byte_end":281801,"line_start":423,"line_end":423,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":281806,"byte_end":281815,"line_start":424,"line_end":424,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":281820,"byte_end":281831,"line_start":425,"line_end":425,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2409},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":282078,"byte_end":282091,"line_start":432,"line_end":432,"column_start":12,"column_end":25},"name":"is_invertible","qualname":"<Transform3D<T, Src, Dst>>::is_invertible","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether it is possible to compute the inverse transform.\n","sig":null,"attributes":[{"value":"/ Returns whether it is possible to compute the inverse transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":281984,"byte_end":282052,"line_start":430,"line_end":430,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":282057,"byte_end":282066,"line_start":431,"line_end":431,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2410},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":282221,"byte_end":282228,"line_start":437,"line_end":437,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Transform3D<T, Src, Dst>>::inverse","value":"fn (&self) -> Option<Transform3D<T, Dst, Src>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the inverse transform if possible.\n","sig":null,"attributes":[{"value":"/ Returns the inverse transform if possible.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":282163,"byte_end":282209,"line_start":436,"line_end":436,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":2411},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":286029,"byte_end":286040,"line_start":517,"line_end":517,"column_start":12,"column_end":23},"name":"determinant","qualname":"<Transform3D<T, Src, Dst>>::determinant","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Compute the determinant of the transform.\n","sig":null,"attributes":[{"value":"/ Compute the determinant of the transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":285972,"byte_end":286017,"line_start":516,"line_end":516,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2412},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":287423,"byte_end":287428,"line_start":546,"line_end":546,"column_start":12,"column_end":17},"name":"mul_s","qualname":"<Transform3D<T, Src, Dst>>::mul_s","value":"fn (&self, x: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Multiplies all of the transform's component by a scalar and returns the result.\n","sig":null,"attributes":[{"value":"/ Multiplies all of the transform's component by a scalar and returns the result.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":287312,"byte_end":287395,"line_start":544,"line_end":544,"column_start":5,"column_end":88}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":287400,"byte_end":287411,"line_start":545,"line_end":545,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2413},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":287856,"byte_end":287866,"line_start":556,"line_end":556,"column_start":12,"column_end":22},"name":"from_scale","qualname":"<Transform3D<T, Src, Dst>>::from_scale","value":"fn (scale: Scale<T, Src, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convenience function to create a scale transform from a `Scale`.\n","sig":null,"attributes":[{"value":"/ Convenience function to create a scale transform from a `Scale`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":287776,"byte_end":287844,"line_start":555,"line_end":555,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":2414},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":288261,"byte_end":288290,"line_start":566,"line_end":566,"column_start":12,"column_end":41},"name":"transform_point2d_homogeneous","qualname":"<Transform3D<T, Src, Dst>>::transform_point2d_homogeneous","value":"fn (&self, p: Point2D<T, Src>) -> HomogeneousVector<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the homogeneous vector corresponding to the transformed 2d point.","sig":null,"attributes":[{"value":"/ Returns the homogeneous vector corresponding to the transformed 2d point.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":287988,"byte_end":288065,"line_start":560,"line_end":560,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":288070,"byte_end":288073,"line_start":561,"line_end":561,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":288078,"byte_end":288164,"line_start":562,"line_end":562,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":288169,"byte_end":288172,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ Assuming row vectors, this is equivalent to `p * self`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":288177,"byte_end":288235,"line_start":564,"line_end":564,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":288240,"byte_end":288249,"line_start":565,"line_end":565,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2415},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":288974,"byte_end":288991,"line_start":584,"line_end":584,"column_start":12,"column_end":29},"name":"transform_point2d","qualname":"<Transform3D<T, Src, Dst>>::transform_point2d","value":"fn (&self, p: Point2D<T, Src>) -> Option<Point2D<T, Dst>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d point transformed by this transform, if the transform makes sense,\n or `None` otherwise.","sig":null,"attributes":[{"value":"/ Returns the given 2d point transformed by this transform, if the transform makes sense,","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":288658,"byte_end":288749,"line_start":577,"line_end":577,"column_start":5,"column_end":96}},{"value":"/ or `None` otherwise.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":288754,"byte_end":288778,"line_start":578,"line_end":578,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":288783,"byte_end":288786,"line_start":579,"line_end":579,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":288791,"byte_end":288877,"line_start":580,"line_end":580,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":288882,"byte_end":288885,"line_start":581,"line_end":581,"column_start":5,"column_end":8}},{"value":"/ Assuming row vectors, this is equivalent to `p * self`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":288890,"byte_end":288948,"line_start":582,"line_end":582,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":288953,"byte_end":288962,"line_start":583,"line_end":583,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2416},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":289718,"byte_end":289736,"line_start":603,"line_end":603,"column_start":12,"column_end":30},"name":"transform_vector2d","qualname":"<Transform3D<T, Src, Dst>>::transform_vector2d","value":"fn (&self, v: Vector2D<T, Src>) -> Vector2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 2d vector transformed by this matrix.","sig":null,"attributes":[{"value":"/ Returns the given 2d vector transformed by this matrix.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":289463,"byte_end":289522,"line_start":597,"line_end":597,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":289527,"byte_end":289530,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":289535,"byte_end":289621,"line_start":599,"line_end":599,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":289626,"byte_end":289629,"line_start":600,"line_end":600,"column_start":5,"column_end":8}},{"value":"/ Assuming row vectors, this is equivalent to `v * self`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":289634,"byte_end":289692,"line_start":601,"line_end":601,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":289697,"byte_end":289706,"line_start":602,"line_end":602,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2417},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":290185,"byte_end":290214,"line_start":616,"line_end":616,"column_start":12,"column_end":41},"name":"transform_point3d_homogeneous","qualname":"<Transform3D<T, Src, Dst>>::transform_point3d_homogeneous","value":"fn (&self, p: Point3D<T, Src>) -> HomogeneousVector<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the homogeneous vector corresponding to the transformed 3d point.","sig":null,"attributes":[{"value":"/ Returns the homogeneous vector corresponding to the transformed 3d point.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":289912,"byte_end":289989,"line_start":610,"line_end":610,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":289994,"byte_end":289997,"line_start":611,"line_end":611,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":290002,"byte_end":290088,"line_start":612,"line_end":612,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":290093,"byte_end":290096,"line_start":613,"line_end":613,"column_start":5,"column_end":8}},{"value":"/ Assuming row vectors, this is equivalent to `p * self`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":290101,"byte_end":290159,"line_start":614,"line_end":614,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":290164,"byte_end":290173,"line_start":615,"line_end":615,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2418},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":290966,"byte_end":290983,"line_start":634,"line_end":634,"column_start":12,"column_end":29},"name":"transform_point3d","qualname":"<Transform3D<T, Src, Dst>>::transform_point3d","value":"fn (&self, p: Point3D<T, Src>) -> Option<Point3D<T, Dst>>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 3d point transformed by this transform, if the transform makes sense,\n or `None` otherwise.","sig":null,"attributes":[{"value":"/ Returns the given 3d point transformed by this transform, if the transform makes sense,","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":290650,"byte_end":290741,"line_start":627,"line_end":627,"column_start":5,"column_end":96}},{"value":"/ or `None` otherwise.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":290746,"byte_end":290770,"line_start":628,"line_end":628,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":290775,"byte_end":290778,"line_start":629,"line_end":629,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":290783,"byte_end":290869,"line_start":630,"line_end":630,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":290874,"byte_end":290877,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ Assuming row vectors, this is equivalent to `p * self`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":290882,"byte_end":290940,"line_start":632,"line_end":632,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":290945,"byte_end":290954,"line_start":633,"line_end":633,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2419},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":291365,"byte_end":291383,"line_start":644,"line_end":644,"column_start":12,"column_end":30},"name":"transform_vector3d","qualname":"<Transform3D<T, Src, Dst>>::transform_vector3d","value":"fn (&self, v: Vector3D<T, Src>) -> Vector3D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the given 3d vector transformed by this matrix.","sig":null,"attributes":[{"value":"/ Returns the given 3d vector transformed by this matrix.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":291110,"byte_end":291169,"line_start":638,"line_end":638,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":291174,"byte_end":291177,"line_start":639,"line_end":639,"column_start":5,"column_end":8}},{"value":"/ The input point must be use the unit Src, and the returned point has the unit Dst.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":291182,"byte_end":291268,"line_start":640,"line_end":640,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":291273,"byte_end":291276,"line_start":641,"line_end":641,"column_start":5,"column_end":8}},{"value":"/ Assuming row vectors, this is equivalent to `v * self`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":291281,"byte_end":291339,"line_start":642,"line_end":642,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":291344,"byte_end":291353,"line_start":643,"line_end":643,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2420},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":291839,"byte_end":291853,"line_start":654,"line_end":654,"column_start":12,"column_end":26},"name":"transform_rect","qualname":"<Transform3D<T, Src, Dst>>::transform_rect","value":"fn (&self, rect: &Rect<T, Src>) -> Option<Rect<T, Dst>>","parent":null,"children":[],"decl_id":null,"docs":" Returns a rectangle that encompasses the result of transforming the given rectangle by this\n transform, if the transform makes sense for it, or `None` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns a rectangle that encompasses the result of transforming the given rectangle by this","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":291655,"byte_end":291750,"line_start":652,"line_end":652,"column_start":5,"column_end":100}},{"value":"/ transform, if the transform makes sense for it, or `None` otherwise.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":291755,"byte_end":291827,"line_start":653,"line_end":653,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":2421},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":292276,"byte_end":292294,"line_start":666,"line_end":666,"column_start":12,"column_end":30},"name":"create_translation","qualname":"<Transform3D<T, Src, Dst>>::create_translation","value":"fn (x: T, y: T, z: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d translation transform\n","sig":null,"attributes":[{"value":"/ Create a 3d translation transform","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":292227,"byte_end":292264,"line_start":665,"line_end":665,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":2422},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":292654,"byte_end":292667,"line_start":678,"line_end":678,"column_start":12,"column_end":25},"name":"pre_translate","qualname":"<Transform3D<T, Src, Dst>>::pre_translate","value":"fn (&self, v: Vector3D<T, Src>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a translation applied before self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a translation applied before self's transformation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":292546,"byte_end":292626,"line_start":676,"line_end":676,"column_start":5,"column_end":85}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":292631,"byte_end":292642,"line_start":677,"line_end":677,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2423},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":292900,"byte_end":292914,"line_start":684,"line_end":684,"column_start":12,"column_end":26},"name":"post_translate","qualname":"<Transform3D<T, Src, Dst>>::post_translate","value":"fn (&self, v: Vector3D<T, Dst>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a translation applied after self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a translation applied after self's transformation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":292793,"byte_end":292872,"line_start":682,"line_end":682,"column_start":5,"column_end":84}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":292877,"byte_end":292888,"line_start":683,"line_end":683,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2424},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":293108,"byte_end":293121,"line_start":689,"line_end":689,"column_start":12,"column_end":25},"name":"project_to_2d","qualname":"<Transform3D<T, Src, Dst>>::project_to_2d","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a projection of this transform in 2d space.\n","sig":null,"attributes":[{"value":"/ Returns a projection of this transform in 2d space.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":293041,"byte_end":293096,"line_start":688,"line_end":688,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2425},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":294498,"byte_end":294510,"line_start":725,"line_end":725,"column_start":12,"column_end":24},"name":"create_scale","qualname":"<Transform3D<T, Src, Dst>>::create_scale","value":"fn (x: T, y: T, z: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d scale transform\n","sig":null,"attributes":[{"value":"/ Create a 3d scale transform","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":294455,"byte_end":294486,"line_start":724,"line_end":724,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":2426},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":294864,"byte_end":294873,"line_start":737,"line_end":737,"column_start":12,"column_end":21},"name":"pre_scale","qualname":"<Transform3D<T, Src, Dst>>::pre_scale","value":"fn (&self, x: T, y: T, z: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a scale applied before self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a scale applied before self's transformation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":294762,"byte_end":294836,"line_start":735,"line_end":735,"column_start":5,"column_end":79}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":294841,"byte_end":294852,"line_start":736,"line_end":736,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2427},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":295330,"byte_end":295340,"line_start":748,"line_end":748,"column_start":12,"column_end":22},"name":"post_scale","qualname":"<Transform3D<T, Src, Dst>>::post_scale","value":"fn (&self, x: T, y: T, z: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a scale applied after self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a scale applied after self's transformation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":295229,"byte_end":295302,"line_start":746,"line_end":746,"column_start":5,"column_end":78}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":295307,"byte_end":295318,"line_start":747,"line_end":747,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":295566,"byte_end":295581,"line_start":754,"line_end":754,"column_start":12,"column_end":27},"name":"create_rotation","qualname":"<Transform3D<T, Src, Dst>>::create_rotation","value":"fn (x: T, y: T, z: T, theta: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d rotation transform from an angle / axis.\n The supplied axis must be normalized.\n","sig":null,"attributes":[{"value":"/ Create a 3d rotation transform from an angle / axis.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":295452,"byte_end":295508,"line_start":752,"line_end":752,"column_start":5,"column_end":61}},{"value":"/ The supplied axis must be normalized.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":295513,"byte_end":295554,"line_start":753,"line_end":753,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":2429},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":296563,"byte_end":296574,"line_start":791,"line_end":791,"column_start":12,"column_end":23},"name":"post_rotate","qualname":"<Transform3D<T, Src, Dst>>::post_rotate","value":"fn (&self, x: T, y: T, z: T, theta: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a rotation applied after self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a rotation applied after self's transformation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":296459,"byte_end":296535,"line_start":789,"line_end":789,"column_start":5,"column_end":81}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":296540,"byte_end":296551,"line_start":790,"line_end":790,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2430},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":296818,"byte_end":296828,"line_start":797,"line_end":797,"column_start":12,"column_end":22},"name":"pre_rotate","qualname":"<Transform3D<T, Src, Dst>>::pre_rotate","value":"fn (&self, x: T, y: T, z: T, theta: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a transform with a rotation applied before self's transformation.\n","sig":null,"attributes":[{"value":"/ Returns a transform with a rotation applied before self's transformation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":296713,"byte_end":296790,"line_start":795,"line_end":795,"column_start":5,"column_end":82}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":296795,"byte_end":296806,"line_start":796,"line_end":796,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2431},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":297085,"byte_end":297096,"line_start":804,"line_end":804,"column_start":12,"column_end":23},"name":"create_skew","qualname":"<Transform3D<T, Src, Dst>>::create_skew","value":"fn (alpha: Angle<T>, beta: Angle<T>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a 2d skew transform.","sig":null,"attributes":[{"value":"/ Create a 2d skew transform.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":296966,"byte_end":296997,"line_start":801,"line_end":801,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":297002,"byte_end":297005,"line_start":802,"line_end":802,"column_start":5,"column_end":8}},{"value":"/ See <https://drafts.csswg.org/css-transforms/#funcdef-skew>","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":297010,"byte_end":297073,"line_start":803,"line_end":803,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2432},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":297489,"byte_end":297507,"line_start":816,"line_end":816,"column_start":12,"column_end":30},"name":"create_perspective","qualname":"<Transform3D<T, Src, Dst>>::create_perspective","value":"fn (d: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a simple perspective projection transform\n","sig":null,"attributes":[{"value":"/ Create a simple perspective projection transform","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":297425,"byte_end":297477,"line_start":815,"line_end":815,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":2437},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":298213,"byte_end":298231,"line_start":835,"line_end":835,"column_start":12,"column_end":30},"name":"to_row_major_array","qualname":"<Transform3D<T, Src, Dst>>::to_row_major_array","value":"fn (&self) -> [T; 16]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's terms in row-major order (the order\n in which the transform is actually laid out in memory).","sig":null,"attributes":[{"value":"/ Returns an array containing this transform's terms in row-major order (the order","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":297805,"byte_end":297889,"line_start":828,"line_end":828,"column_start":5,"column_end":89}},{"value":"/ in which the transform is actually laid out in memory).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":297894,"byte_end":297953,"line_start":829,"line_end":829,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":297958,"byte_end":297961,"line_start":830,"line_end":830,"column_start":5,"column_end":8}},{"value":"/ Beware: This library is written with the assumption that row vectors","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":297966,"byte_end":298038,"line_start":831,"line_end":831,"column_start":5,"column_end":77}},{"value":"/ are being used. If your matrices use column vectors (i.e. transforming a vector","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":298043,"byte_end":298126,"line_start":832,"line_end":832,"column_start":5,"column_end":88}},{"value":"/ is `T * v`), then please use `to_column_major_array`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":298131,"byte_end":298187,"line_start":833,"line_end":833,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":298192,"byte_end":298201,"line_start":834,"line_end":834,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2439},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":298824,"byte_end":298845,"line_start":850,"line_end":850,"column_start":12,"column_end":33},"name":"to_column_major_array","qualname":"<Transform3D<T, Src, Dst>>::to_column_major_array","value":"fn (&self) -> [T; 16]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's terms in column-major order.","sig":null,"attributes":[{"value":"/ Returns an array containing this transform's terms in column-major order.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":298490,"byte_end":298567,"line_start":844,"line_end":844,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":298572,"byte_end":298575,"line_start":845,"line_end":845,"column_start":5,"column_end":8}},{"value":"/ Beware: This library is written with the assumption that row vectors","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":298580,"byte_end":298652,"line_start":846,"line_end":846,"column_start":5,"column_end":77}},{"value":"/ are being used. If your matrices use column vectors (i.e. transforming a vector","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":298657,"byte_end":298740,"line_start":847,"line_end":847,"column_start":5,"column_end":88}},{"value":"/ is `T * v`), then please use `to_row_major_array`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":298745,"byte_end":298798,"line_start":848,"line_end":848,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":298803,"byte_end":298812,"line_start":849,"line_end":849,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2441},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":299548,"byte_end":299561,"line_start":868,"line_end":868,"column_start":12,"column_end":25},"name":"to_row_arrays","qualname":"<Transform3D<T, Src, Dst>>::to_row_arrays","value":"fn (&self) -> [[T; 4]; 4]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's 4 rows in (in row-major order)\n as arrays.","sig":null,"attributes":[{"value":"/ Returns an array containing this transform's 4 rows in (in row-major order)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":299104,"byte_end":299183,"line_start":859,"line_end":859,"column_start":5,"column_end":84}},{"value":"/ as arrays.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":299188,"byte_end":299202,"line_start":860,"line_end":860,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":299207,"byte_end":299210,"line_start":861,"line_end":861,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method to interface with other libraries like glium.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":299215,"byte_end":299293,"line_start":862,"line_end":862,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":299298,"byte_end":299301,"line_start":863,"line_end":863,"column_start":5,"column_end":8}},{"value":"/ Beware: This library is written with the assumption that row vectors","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":299306,"byte_end":299378,"line_start":864,"line_end":864,"column_start":5,"column_end":77}},{"value":"/ are being used. If your matrices use column vectors (i.e. transforming a vector","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":299383,"byte_end":299466,"line_start":865,"line_end":865,"column_start":5,"column_end":88}},{"value":"/ is `T * v`), then please use `to_column_arrays`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":299471,"byte_end":299522,"line_start":866,"line_end":866,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":299527,"byte_end":299536,"line_start":867,"line_end":867,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2444},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":300309,"byte_end":300325,"line_start":886,"line_end":886,"column_start":12,"column_end":28},"name":"to_column_arrays","qualname":"<Transform3D<T, Src, Dst>>::to_column_arrays","value":"fn (&self) -> [[T; 4]; 4]","parent":null,"children":[],"decl_id":null,"docs":" Returns an array containing this transform's 4 columns in (in row-major order,\n or 4 rows in column-major order) as arrays.","sig":null,"attributes":[{"value":"/ Returns an array containing this transform's 4 columns in (in row-major order,","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":299832,"byte_end":299914,"line_start":877,"line_end":877,"column_start":5,"column_end":87}},{"value":"/ or 4 rows in column-major order) as arrays.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":299919,"byte_end":299966,"line_start":878,"line_end":878,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":299971,"byte_end":299974,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ This is a convenience method to interface with other libraries like glium.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":299979,"byte_end":300057,"line_start":880,"line_end":880,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":300062,"byte_end":300065,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ Beware: This library is written with the assumption that row vectors","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":300070,"byte_end":300142,"line_start":882,"line_end":882,"column_start":5,"column_end":77}},{"value":"/ are being used. If your matrices use column vectors (i.e. transforming a vector","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":300147,"byte_end":300230,"line_start":883,"line_end":883,"column_start":5,"column_end":88}},{"value":"/ is `T * v`), then please use `to_row_arrays`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":300235,"byte_end":300283,"line_start":884,"line_end":884,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":300288,"byte_end":300297,"line_start":885,"line_end":885,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2447},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":300939,"byte_end":300949,"line_start":901,"line_end":901,"column_start":12,"column_end":22},"name":"from_array","qualname":"<Transform3D<T, Src, Dst>>::from_array","value":"fn (array: [T; 16]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a transform from an array of 16 elements in row-major order.","sig":null,"attributes":[{"value":"/ Creates a transform from an array of 16 elements in row-major order.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":300596,"byte_end":300668,"line_start":895,"line_end":895,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":300673,"byte_end":300676,"line_start":896,"line_end":896,"column_start":5,"column_end":8}},{"value":"/ Beware: This library is written with the assumption that row vectors","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":300681,"byte_end":300753,"line_start":897,"line_end":897,"column_start":5,"column_end":77}},{"value":"/ are being used. If your matrices use column vectors (i.e. transforming a vector","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":300758,"byte_end":300841,"line_start":898,"line_end":898,"column_start":5,"column_end":88}},{"value":"/ is `T * v`), please provide column-major data to this function.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":300846,"byte_end":300913,"line_start":899,"line_end":899,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":300918,"byte_end":300927,"line_start":900,"line_end":900,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2449},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":301582,"byte_end":301597,"line_start":916,"line_end":916,"column_start":12,"column_end":27},"name":"from_row_arrays","qualname":"<Transform3D<T, Src, Dst>>::from_row_arrays","value":"fn (array: [[T; 4]; 4]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a transform from 4 rows of 4 elements (row-major order).","sig":null,"attributes":[{"value":"/ Creates a transform from 4 rows of 4 elements (row-major order).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":301244,"byte_end":301312,"line_start":910,"line_end":910,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":301317,"byte_end":301320,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ Beware: This library is written with the assumption that row vectors","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":301325,"byte_end":301397,"line_start":912,"line_end":912,"column_start":5,"column_end":77}},{"value":"/ are being used. If your matrices use column vectors (i.e. transforming a vector","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":301402,"byte_end":301485,"line_start":913,"line_end":913,"column_start":5,"column_end":88}},{"value":"/ is `T * v`), please provide column-major data to tis function.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":301490,"byte_end":301556,"line_start":914,"line_end":914,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":301561,"byte_end":301570,"line_start":915,"line_end":915,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2456},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":302093,"byte_end":302097,"line_start":929,"line_end":929,"column_start":12,"column_end":16},"name":"cast","qualname":"<Transform3D<T, Src, Dst>>::cast","value":"fn <NewT> (&self) -> Transform3D<NewT, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":301993,"byte_end":302067,"line_start":927,"line_end":927,"column_start":5,"column_end":79}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":302072,"byte_end":302081,"line_start":928,"line_end":928,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2458},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":302292,"byte_end":302300,"line_start":934,"line_end":934,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Transform3D<T, Src, Dst>>::try_cast","value":"fn <NewT> (&self) -> Option<Transform3D<NewT, Src, Dst>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.\n","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":302197,"byte_end":302280,"line_start":933,"line_end":933,"column_start":5,"column_end":88}}]},{"kind":"Struct","id":{"krate":0,"index":2507},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":318345,"byte_end":318358,"line_start":46,"line_end":46,"column_start":12,"column_end":25},"name":"Translation2D","qualname":"::translation::Translation2D","value":"Translation2D { x, y, _unit }","parent":null,"children":[{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513}],"decl_id":null,"docs":" A 2d transformation from a space to another that can only express translations.","sig":null,"attributes":[{"value":"/ A 2d transformation from a space to another that can only express translations.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":317476,"byte_end":317559,"line_start":23,"line_end":23,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":317560,"byte_end":317563,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ The main benefit of this type over a Vector2D is the ability to cast","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":317564,"byte_end":317636,"line_start":25,"line_end":25,"column_start":1,"column_end":73}},{"value":"/ between a source and a destination spaces.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":317637,"byte_end":317683,"line_start":26,"line_end":26,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":317684,"byte_end":317687,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ Example:","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":317688,"byte_end":317700,"line_start":28,"line_end":28,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":317701,"byte_end":317704,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":317705,"byte_end":317712,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use euclid::{Translation2D, Point2D, point2};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":317713,"byte_end":317762,"line_start":31,"line_end":31,"column_start":1,"column_end":50}},{"value":"/ struct ParentSpace;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":317763,"byte_end":317786,"line_start":32,"line_end":32,"column_start":1,"column_end":24}},{"value":"/ struct ChildSpace;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":317787,"byte_end":317809,"line_start":33,"line_end":33,"column_start":1,"column_end":23}},{"value":"/ type ScrollOffset = Translation2D<i32, ParentSpace, ChildSpace>;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":317810,"byte_end":317878,"line_start":34,"line_end":34,"column_start":1,"column_end":69}},{"value":"/ type ParentPoint = Point2D<i32, ParentSpace>;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":317879,"byte_end":317928,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"/ type ChildPoint = Point2D<i32, ChildSpace>;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":317929,"byte_end":317976,"line_start":36,"line_end":36,"column_start":1,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":317977,"byte_end":317980,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let scrolling = ScrollOffset::new(0, 100);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":317981,"byte_end":318027,"line_start":38,"line_end":38,"column_start":1,"column_end":47}},{"value":"/ let p1: ParentPoint = point2(0, 0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":318028,"byte_end":318067,"line_start":39,"line_end":39,"column_start":1,"column_end":40}},{"value":"/ let p2: ChildPoint = scrolling.transform_point(p1);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":318068,"byte_end":318123,"line_start":40,"line_end":40,"column_start":1,"column_end":56}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":318124,"byte_end":318131,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":318132,"byte_end":318135,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":318136,"byte_end":318146,"line_start":43,"line_end":43,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2511},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":318382,"byte_end":318383,"line_start":47,"line_end":47,"column_start":9,"column_end":10},"name":"x","qualname":"::translation::Translation2D::x","value":"T","parent":{"krate":0,"index":2507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2512},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":318396,"byte_end":318397,"line_start":48,"line_end":48,"column_start":9,"column_end":10},"name":"y","qualname":"::translation::Translation2D::y","value":"T","parent":{"krate":0,"index":2507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2513},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":318429,"byte_end":318434,"line_start":50,"line_end":50,"column_start":9,"column_end":14},"name":"_unit","qualname":"::translation::Translation2D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":2507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2542},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319274,"byte_end":319277,"line_start":86,"line_end":86,"column_start":18,"column_end":21},"name":"new","qualname":"<Translation2D<T, Src, Dst>>::new","value":"fn (x: T, y: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319247,"byte_end":319256,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2543},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319463,"byte_end":319477,"line_start":96,"line_end":96,"column_start":12,"column_end":26},"name":"transform_size","qualname":"<Translation2D<T, Src, Dst>>::transform_size","value":"fn (&self, s: Size2D<T, Src>) -> Size2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" No-op, just cast the unit.\n","sig":null,"attributes":[{"value":"/ No-op, just cast the unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319407,"byte_end":319437,"line_start":94,"line_end":94,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319442,"byte_end":319451,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2548},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319694,"byte_end":319703,"line_start":107,"line_end":107,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Translation2D<T, Src, Dst>>::to_vector","value":"fn (&self) -> Vector2D<T, Src>","parent":null,"children":[],"decl_id":null,"docs":" Cast into a 2D vector.\n","sig":null,"attributes":[{"value":"/ Cast into a 2D vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319642,"byte_end":319668,"line_start":105,"line_end":105,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319673,"byte_end":319682,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2549},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319835,"byte_end":319843,"line_start":113,"line_end":113,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Translation2D<T, Src, Dst>>::to_array","value":"fn (&self) -> [T; 2]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x and y.\n","sig":null,"attributes":[{"value":"/ Cast into an array with x and y.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319773,"byte_end":319809,"line_start":111,"line_end":111,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319814,"byte_end":319823,"line_start":112,"line_end":112,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2551},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319960,"byte_end":319968,"line_start":119,"line_end":119,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Translation2D<T, Src, Dst>>::to_tuple","value":"fn (&self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x and y.\n","sig":null,"attributes":[{"value":"/ Cast into a tuple with x and y.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319899,"byte_end":319934,"line_start":117,"line_end":117,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319939,"byte_end":319948,"line_start":118,"line_end":118,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2552},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":320104,"byte_end":320114,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Translation2D<T, Src, Dst>>::to_untyped","value":"fn (&self) -> Translation2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":320024,"byte_end":320078,"line_start":123,"line_end":123,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":320083,"byte_end":320092,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2553},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":320355,"byte_end":320367,"line_start":135,"line_end":135,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Translation2D<T, Src, Dst>>::from_untyped","value":"fn (t: &Translation2D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":320293,"byte_end":320329,"line_start":133,"line_end":133,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":320334,"byte_end":320343,"line_start":134,"line_end":134,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2558},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":320631,"byte_end":320639,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"identity","qualname":"<Translation2D<T, Src, Dst>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":320610,"byte_end":320619,"line_start":148,"line_end":148,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2563},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":320812,"byte_end":320823,"line_start":159,"line_end":159,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<Translation2D<T, Src, Dst>>::is_identity","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":320791,"byte_end":320800,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2568},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":321071,"byte_end":321086,"line_start":171,"line_end":171,"column_start":12,"column_end":27},"name":"transform_point","qualname":"<Translation2D<T, Src, Dst>>::transform_point","value":"fn (&self, p: Point2D<T, Src>) -> Point2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Translate a point and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a point and cast its unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":321005,"byte_end":321045,"line_start":169,"line_end":169,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":321050,"byte_end":321059,"line_start":170,"line_end":170,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2569},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":321259,"byte_end":321273,"line_start":177,"line_end":177,"column_start":12,"column_end":26},"name":"transform_rect","qualname":"<Translation2D<T, Src, Dst>>::transform_rect","value":"fn (&self, r: &Rect<T, Src>) -> Rect<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Translate a rectangle and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a rectangle and cast its unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":321189,"byte_end":321233,"line_start":175,"line_end":175,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":321238,"byte_end":321247,"line_start":176,"line_end":176,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2574},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":321601,"byte_end":321608,"line_start":191,"line_end":191,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Translation2D<T, Src, Dst>>::inverse","value":"fn (&self) -> Translation2D<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Return the inverse transformation.\n","sig":null,"attributes":[{"value":"/ Return the inverse transformation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":321537,"byte_end":321575,"line_start":189,"line_end":189,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":321580,"byte_end":321589,"line_start":190,"line_end":190,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2593},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":322777,"byte_end":322789,"line_start":239,"line_end":239,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Translation2D<T, Src, Dst>>::to_transform","value":"fn (&self) -> Transform2D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the matrix representation of this translation.\n","sig":null,"attributes":[{"value":"/ Returns the matrix representation of this translation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":322693,"byte_end":322751,"line_start":237,"line_end":237,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":322756,"byte_end":322765,"line_start":238,"line_end":238,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":2624},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":324337,"byte_end":324350,"line_start":301,"line_end":301,"column_start":12,"column_end":25},"name":"Translation3D","qualname":"::translation::Translation3D","value":"Translation3D { x, y, z, _unit }","parent":null,"children":[{"krate":0,"index":2628},{"krate":0,"index":2629},{"krate":0,"index":2630},{"krate":0,"index":2631}],"decl_id":null,"docs":" A 3d transformation from a space to another that can only express translations.","sig":null,"attributes":[{"value":"/ A 3d transformation from a space to another that can only express translations.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":324107,"byte_end":324190,"line_start":296,"line_end":296,"column_start":1,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":324191,"byte_end":324194,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"/ The main benefit of this type over a Vector3D is the ability to cast","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":324195,"byte_end":324267,"line_start":298,"line_end":298,"column_start":1,"column_end":73}},{"value":"/ between a source and a destination spaces.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":324268,"byte_end":324314,"line_start":299,"line_end":299,"column_start":1,"column_end":47}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":324315,"byte_end":324325,"line_start":300,"line_end":300,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2628},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":324374,"byte_end":324375,"line_start":302,"line_end":302,"column_start":9,"column_end":10},"name":"x","qualname":"::translation::Translation3D::x","value":"T","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2629},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":324388,"byte_end":324389,"line_start":303,"line_end":303,"column_start":9,"column_end":10},"name":"y","qualname":"::translation::Translation3D::y","value":"T","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2630},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":324402,"byte_end":324403,"line_start":304,"line_end":304,"column_start":9,"column_end":10},"name":"z","qualname":"::translation::Translation3D::z","value":"T","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2631},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":324435,"byte_end":324440,"line_start":306,"line_end":306,"column_start":9,"column_end":14},"name":"_unit","qualname":"::translation::Translation3D::_unit","value":"core::marker::PhantomData<(Src, Dst)>","parent":{"krate":0,"index":2624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2660},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326052,"byte_end":326055,"line_start":367,"line_end":367,"column_start":18,"column_end":21},"name":"new","qualname":"<Translation3D<T, Src, Dst>>::new","value":"fn (x: T, y: T, z: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326025,"byte_end":326034,"line_start":366,"line_end":366,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2661},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326262,"byte_end":326276,"line_start":378,"line_end":378,"column_start":12,"column_end":26},"name":"transform_size","qualname":"<Translation3D<T, Src, Dst>>::transform_size","value":"fn (self, s: Size2D<T, Src>) -> Size2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" No-op, just cast the unit.\n","sig":null,"attributes":[{"value":"/ No-op, just cast the unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326206,"byte_end":326236,"line_start":376,"line_end":376,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326241,"byte_end":326250,"line_start":377,"line_end":377,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2666},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326491,"byte_end":326500,"line_start":389,"line_end":389,"column_start":12,"column_end":21},"name":"to_vector","qualname":"<Translation3D<T, Src, Dst>>::to_vector","value":"fn (&self) -> Vector3D<T, Src>","parent":null,"children":[],"decl_id":null,"docs":" Cast into a 3D vector.\n","sig":null,"attributes":[{"value":"/ Cast into a 3D vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326439,"byte_end":326465,"line_start":387,"line_end":387,"column_start":5,"column_end":31}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326470,"byte_end":326479,"line_start":388,"line_end":388,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2667},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326643,"byte_end":326651,"line_start":395,"line_end":395,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Translation3D<T, Src, Dst>>::to_array","value":"fn (&self) -> [T; 3]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x, y and z.\n","sig":null,"attributes":[{"value":"/ Cast into an array with x, y and z.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326578,"byte_end":326617,"line_start":393,"line_end":393,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326622,"byte_end":326631,"line_start":394,"line_end":394,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2669},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326779,"byte_end":326787,"line_start":401,"line_end":401,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Translation3D<T, Src, Dst>>::to_tuple","value":"fn (&self) -> (T, T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x, y and z.\n","sig":null,"attributes":[{"value":"/ Cast into a tuple with x, y and z.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326715,"byte_end":326753,"line_start":399,"line_end":399,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326758,"byte_end":326767,"line_start":400,"line_end":400,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2670},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326934,"byte_end":326944,"line_start":407,"line_end":407,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Translation3D<T, Src, Dst>>::to_untyped","value":"fn (&self) -> Translation3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326854,"byte_end":326908,"line_start":405,"line_end":405,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326913,"byte_end":326922,"line_start":406,"line_end":406,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2671},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":327208,"byte_end":327220,"line_start":418,"line_end":418,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Translation3D<T, Src, Dst>>::from_untyped","value":"fn (t: &Translation3D<T, UnknownUnit, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":327146,"byte_end":327182,"line_start":416,"line_end":416,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":327187,"byte_end":327196,"line_start":417,"line_end":417,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2676},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":327504,"byte_end":327512,"line_start":433,"line_end":433,"column_start":12,"column_end":20},"name":"identity","qualname":"<Translation3D<T, Src, Dst>>::identity","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":327483,"byte_end":327492,"line_start":432,"line_end":432,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2681},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":327696,"byte_end":327707,"line_start":443,"line_end":443,"column_start":12,"column_end":23},"name":"is_identity","qualname":"<Translation3D<T, Src, Dst>>::is_identity","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":327675,"byte_end":327684,"line_start":442,"line_end":442,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2686},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":327971,"byte_end":327988,"line_start":455,"line_end":455,"column_start":12,"column_end":29},"name":"transform_point3d","qualname":"<Translation3D<T, Src, Dst>>::transform_point3d","value":"fn (&self, p: &Point3D<T, Src>) -> Point3D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Translate a point and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a point and cast its unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":327905,"byte_end":327945,"line_start":453,"line_end":453,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":327950,"byte_end":327959,"line_start":454,"line_end":454,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2687},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":328172,"byte_end":328189,"line_start":461,"line_end":461,"column_start":12,"column_end":29},"name":"transform_point2d","qualname":"<Translation3D<T, Src, Dst>>::transform_point2d","value":"fn (&self, p: &Point2D<T, Src>) -> Point2D<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Translate a point and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a point and cast its unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":328106,"byte_end":328146,"line_start":459,"line_end":459,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":328151,"byte_end":328160,"line_start":460,"line_end":460,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2688},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":328363,"byte_end":328377,"line_start":467,"line_end":467,"column_start":12,"column_end":26},"name":"transform_rect","qualname":"<Translation3D<T, Src, Dst>>::transform_rect","value":"fn (&self, r: &Rect<T, Src>) -> Rect<T, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Translate a rectangle and cast its unit.\n","sig":null,"attributes":[{"value":"/ Translate a rectangle and cast its unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":328293,"byte_end":328337,"line_start":465,"line_end":465,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":328342,"byte_end":328351,"line_start":466,"line_end":466,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2693},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":328708,"byte_end":328715,"line_start":481,"line_end":481,"column_start":12,"column_end":19},"name":"inverse","qualname":"<Translation3D<T, Src, Dst>>::inverse","value":"fn (&self) -> Translation3D<T, Dst, Src>","parent":null,"children":[],"decl_id":null,"docs":" Return the inverse transformation.\n","sig":null,"attributes":[{"value":"/ Return the inverse transformation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":328644,"byte_end":328682,"line_start":479,"line_end":479,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":328687,"byte_end":328696,"line_start":480,"line_end":480,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2712},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":329961,"byte_end":329973,"line_start":531,"line_end":531,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Translation3D<T, Src, Dst>>::to_transform","value":"fn (&self) -> Transform3D<T, Src, Dst>","parent":null,"children":[],"decl_id":null,"docs":" Returns the matrix representation of this translation.\n","sig":null,"attributes":[{"value":"/ Returns the matrix representation of this translation.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":329877,"byte_end":329935,"line_start":529,"line_end":529,"column_start":5,"column_end":63}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":329940,"byte_end":329949,"line_start":530,"line_end":530,"column_start":5,"column_end":14}}]},{"kind":"Trait","id":{"krate":0,"index":2744},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\trig.rs","byte_start":332860,"byte_end":332864,"line_start":11,"line_end":11,"column_start":11,"column_end":15},"name":"Trig","qualname":"::trig::Trig","value":"Trig","parent":null,"children":[{"krate":0,"index":2745},{"krate":0,"index":2746},{"krate":0,"index":2747},{"krate":0,"index":2748},{"krate":0,"index":2749},{"krate":0,"index":2750}],"decl_id":null,"docs":" Trait for basic trigonometry functions, so they can be used on generic numeric types\n","sig":null,"attributes":[{"value":"/ Trait for basic trigonometry functions, so they can be used on generic numeric types","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\trig.rs","byte_start":332761,"byte_end":332849,"line_start":10,"line_end":10,"column_start":1,"column_end":89}}]},{"kind":"Method","id":{"krate":0,"index":2745},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\trig.rs","byte_start":332874,"byte_end":332877,"line_start":12,"line_end":12,"column_start":8,"column_end":11},"name":"sin","qualname":"::trig::Trig::sin","value":"fn (self) -> Self","parent":{"krate":0,"index":2744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2746},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\trig.rs","byte_start":332900,"byte_end":332903,"line_start":13,"line_end":13,"column_start":8,"column_end":11},"name":"cos","qualname":"::trig::Trig::cos","value":"fn (self) -> Self","parent":{"krate":0,"index":2744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2747},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\trig.rs","byte_start":332926,"byte_end":332929,"line_start":14,"line_end":14,"column_start":8,"column_end":11},"name":"tan","qualname":"::trig::Trig::tan","value":"fn (self) -> Self","parent":{"krate":0,"index":2744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2748},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\trig.rs","byte_start":332952,"byte_end":332962,"line_start":15,"line_end":15,"column_start":8,"column_end":18},"name":"fast_atan2","qualname":"::trig::Trig::fast_atan2","value":"fn (y: Self, x: Self) -> Self","parent":{"krate":0,"index":2744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2749},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\trig.rs","byte_start":332997,"byte_end":333015,"line_start":16,"line_end":16,"column_start":8,"column_end":26},"name":"degrees_to_radians","qualname":"::trig::Trig::degrees_to_radians","value":"fn (deg: Self) -> Self","parent":{"krate":0,"index":2744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2750},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\trig.rs","byte_start":333043,"byte_end":333061,"line_start":17,"line_end":17,"column_start":8,"column_end":26},"name":"radians_to_degrees","qualname":"::trig::Trig::radians_to_degrees","value":"fn (rad: Self) -> Self","parent":{"krate":0,"index":2744},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2796},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":336129,"byte_end":336137,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"Vector2D","qualname":"::vector::Vector2D","value":"Vector2D { x, y, _unit }","parent":null,"children":[{"krate":0,"index":2799},{"krate":0,"index":2800},{"krate":0,"index":2801}],"decl_id":null,"docs":" A 2d Vector tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 2d Vector tagged with a unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":336071,"byte_end":336106,"line_start":33,"line_end":33,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":336107,"byte_end":336117,"line_start":34,"line_end":34,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":2799},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":336210,"byte_end":336211,"line_start":37,"line_end":37,"column_start":9,"column_end":10},"name":"x","qualname":"::vector::Vector2D::x","value":"T","parent":{"krate":0,"index":2796},"children":[],"decl_id":null,"docs":" The `x` (traditionally, horizontal) coordinate.\n","sig":null,"attributes":[{"value":"/ The `x` (traditionally, horizontal) coordinate.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":336150,"byte_end":336201,"line_start":36,"line_end":36,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2800},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":336278,"byte_end":336279,"line_start":39,"line_end":39,"column_start":9,"column_end":10},"name":"y","qualname":"::vector::Vector2D::y","value":"T","parent":{"krate":0,"index":2796},"children":[],"decl_id":null,"docs":" The `y` (traditionally, vertical) coordinate.\n","sig":null,"attributes":[{"value":"/ The `y` (traditionally, vertical) coordinate.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":336220,"byte_end":336269,"line_start":38,"line_end":38,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":2801},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":336311,"byte_end":336316,"line_start":41,"line_end":41,"column_start":9,"column_end":14},"name":"_unit","qualname":"::vector::Vector2D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":2796},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2840},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":338584,"byte_end":338588,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"zero","qualname":"<Vector2D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all components to zero.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":338510,"byte_end":338558,"line_start":132,"line_end":132,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":338563,"byte_end":338572,"line_start":133,"line_end":133,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":338771,"byte_end":338774,"line_start":143,"line_end":143,"column_start":18,"column_end":21},"name":"new","qualname":"<Vector2D<T, U>>::new","value":"fn (x: T, y: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values directly.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":338693,"byte_end":338739,"line_start":141,"line_end":141,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":338744,"byte_end":338753,"line_start":142,"line_end":142,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2842},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":338991,"byte_end":339003,"line_start":153,"line_end":153,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Vector2D<T, U>>::from_lengths","value":"fn (x: Length<T, U>, y: Length<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking properly  Lengths instead of scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking properly  Lengths instead of scalar values.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":338899,"byte_end":338965,"line_start":151,"line_end":151,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":338970,"byte_end":338979,"line_start":152,"line_end":152,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339145,"byte_end":339157,"line_start":159,"line_end":159,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Vector2D<T, U>>::from_untyped","value":"fn (p: Vector2D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unit-less value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unit-less value with units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339082,"byte_end":339119,"line_start":157,"line_end":157,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339124,"byte_end":339133,"line_start":158,"line_end":158,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2844},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339801,"byte_end":339804,"line_start":183,"line_end":183,"column_start":12,"column_end":15},"name":"abs","qualname":"<Vector2D<T, U>>::abs","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the vector with absolute values of each component.","sig":null,"attributes":[{"value":"/ Computes the vector with absolute values of each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339231,"byte_end":339294,"line_start":163,"line_end":163,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339299,"byte_end":339302,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339307,"byte_end":339320,"line_start":165,"line_end":165,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339325,"byte_end":339328,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339333,"byte_end":339344,"line_start":167,"line_end":167,"column_start":5,"column_end":16}},{"value":"/ # use std::{i32, f32};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339349,"byte_end":339375,"line_start":168,"line_end":168,"column_start":5,"column_end":31}},{"value":"/ # use euclid::vec2;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339380,"byte_end":339403,"line_start":169,"line_end":169,"column_start":5,"column_end":28}},{"value":"/ enum U {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339408,"byte_end":339421,"line_start":170,"line_end":170,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339426,"byte_end":339429,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec2::<_, U>(-1, 2).abs(), vec2(1, 2));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339434,"byte_end":339488,"line_start":172,"line_end":172,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339493,"byte_end":339496,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ let vec = vec2::<_, U>(f32::NAN, -f32::MAX).abs();","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339501,"byte_end":339555,"line_start":174,"line_end":174,"column_start":5,"column_end":59}},{"value":"/ assert!(vec.x.is_nan());","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339560,"byte_end":339588,"line_start":175,"line_end":175,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec.y, f32::MAX);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339593,"byte_end":339625,"line_start":176,"line_end":176,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339630,"byte_end":339637,"line_start":177,"line_end":177,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339642,"byte_end":339645,"line_start":178,"line_end":178,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339650,"byte_end":339662,"line_start":179,"line_end":179,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339667,"byte_end":339670,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ The behavior for each component follows the scalar type's implementation of","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339675,"byte_end":339754,"line_start":181,"line_end":181,"column_start":5,"column_end":84}},{"value":"/ `num_traits::Signed::abs`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339759,"byte_end":339789,"line_start":182,"line_end":182,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339949,"byte_end":339952,"line_start":192,"line_end":192,"column_start":12,"column_end":15},"name":"dot","qualname":"<Vector2D<T, U>>::dot","value":"fn (self, other: Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Dot product.\n","sig":null,"attributes":[{"value":"/ Dot product.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339907,"byte_end":339923,"line_start":190,"line_end":190,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":339928,"byte_end":339937,"line_start":191,"line_end":191,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340206,"byte_end":340211,"line_start":201,"line_end":201,"column_start":12,"column_end":17},"name":"cross","qualname":"<Vector2D<T, U>>::cross","value":"fn (self, other: Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the norm of the cross product [self.x, self.y, 0] x [other.x, other.y, 0].\n","sig":null,"attributes":[{"value":"/ Returns the norm of the cross product [self.x, self.y, 0] x [other.x, other.y, 0].","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340094,"byte_end":340180,"line_start":199,"line_end":199,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340185,"byte_end":340194,"line_start":200,"line_end":200,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2850},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340481,"byte_end":340487,"line_start":212,"line_end":212,"column_start":12,"column_end":18},"name":"extend","qualname":"<Vector2D<T, U>>::extend","value":"fn (&self, z: T) -> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Create a 3d vector from this one, using the specified z value.\n","sig":null,"attributes":[{"value":"/ Create a 3d vector from this one, using the specified z value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340389,"byte_end":340455,"line_start":210,"line_end":210,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340460,"byte_end":340469,"line_start":211,"line_end":211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2851},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340688,"byte_end":340696,"line_start":220,"line_end":220,"column_start":12,"column_end":20},"name":"to_point","qualname":"<Vector2D<T, U>>::to_point","value":"fn (&self) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this vector into a point.","sig":null,"attributes":[{"value":"/ Cast this vector into a point.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340564,"byte_end":340598,"line_start":216,"line_end":216,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340603,"byte_end":340606,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Equivalent to adding this vector to the origin.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340611,"byte_end":340662,"line_start":218,"line_end":218,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340667,"byte_end":340676,"line_start":219,"line_end":219,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2852},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340883,"byte_end":340885,"line_start":230,"line_end":230,"column_start":12,"column_end":14},"name":"yx","qualname":"<Vector2D<T, U>>::yx","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Swap x and y.\n","sig":null,"attributes":[{"value":"/ Swap x and y.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340840,"byte_end":340857,"line_start":228,"line_end":228,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340862,"byte_end":340871,"line_start":229,"line_end":229,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2853},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341002,"byte_end":341009,"line_start":236,"line_end":236,"column_start":12,"column_end":19},"name":"to_size","qualname":"<Vector2D<T, U>>::to_size","value":"fn (&self) -> Size2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this vector into a size.\n","sig":null,"attributes":[{"value":"/ Cast this vector into a size.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340943,"byte_end":340976,"line_start":234,"line_end":234,"column_start":5,"column_end":38}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340981,"byte_end":340990,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2854},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341156,"byte_end":341166,"line_start":242,"line_end":242,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Vector2D<T, U>>::to_untyped","value":"fn (&self) -> Vector2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341076,"byte_end":341130,"line_start":240,"line_end":240,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341135,"byte_end":341144,"line_start":241,"line_end":241,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2855},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341288,"byte_end":341297,"line_start":248,"line_end":248,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Vector2D<T, U>>::cast_unit","value":"fn <V> (&self) -> Vector2D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit.\n","sig":null,"attributes":[{"value":"/ Cast the unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341244,"byte_end":341262,"line_start":246,"line_end":246,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341267,"byte_end":341276,"line_start":247,"line_end":247,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2857},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341430,"byte_end":341438,"line_start":254,"line_end":254,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Vector2D<T, U>>::to_array","value":"fn (&self) -> [T; 2]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x and y.\n","sig":null,"attributes":[{"value":"/ Cast into an array with x and y.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341368,"byte_end":341404,"line_start":252,"line_end":252,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341409,"byte_end":341418,"line_start":253,"line_end":253,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2859},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341555,"byte_end":341563,"line_start":260,"line_end":260,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Vector2D<T, U>>::to_tuple","value":"fn (&self) -> (T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x and y.\n","sig":null,"attributes":[{"value":"/ Cast into a tuple with x and y.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341494,"byte_end":341529,"line_start":258,"line_end":258,"column_start":5,"column_end":40}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341534,"byte_end":341543,"line_start":259,"line_end":259,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2860},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341716,"byte_end":341721,"line_start":266,"line_end":266,"column_start":12,"column_end":17},"name":"to_3d","qualname":"<Vector2D<T, U>>::to_3d","value":"fn (&self) -> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 3d vector with `z` coordinate equals to `T::zero()`.\n","sig":null,"attributes":[{"value":"/ Convert into a 3d vector with `z` coordinate equals to `T::zero()`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341619,"byte_end":341690,"line_start":264,"line_end":264,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341695,"byte_end":341704,"line_start":265,"line_end":265,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2861},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342190,"byte_end":342195,"line_start":285,"line_end":285,"column_start":12,"column_end":17},"name":"round","qualname":"<Vector2D<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341834,"byte_end":341889,"line_start":273,"line_end":273,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341894,"byte_end":341897,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341902,"byte_end":341977,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341982,"byte_end":341985,"line_start":276,"line_end":276,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":341990,"byte_end":342001,"line_start":277,"line_end":277,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec2;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342006,"byte_end":342029,"line_start":278,"line_end":278,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342034,"byte_end":342048,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342053,"byte_end":342056,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec2::<_, Mm>(-0.1, -0.8).round(), vec2::<_, Mm>(0.0, -1.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342061,"byte_end":342136,"line_start":281,"line_end":281,"column_start":5,"column_end":80}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342141,"byte_end":342148,"line_start":282,"line_end":282,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342153,"byte_end":342162,"line_start":283,"line_end":283,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342167,"byte_end":342178,"line_start":284,"line_end":284,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2862},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342691,"byte_end":342695,"line_start":304,"line_end":304,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Vector2D<T, U>>::ceil","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342301,"byte_end":342392,"line_start":292,"line_end":292,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342397,"byte_end":342400,"line_start":293,"line_end":293,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342405,"byte_end":342480,"line_start":294,"line_end":294,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342485,"byte_end":342488,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342493,"byte_end":342504,"line_start":296,"line_end":296,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec2;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342509,"byte_end":342532,"line_start":297,"line_end":297,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342537,"byte_end":342551,"line_start":298,"line_end":298,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342556,"byte_end":342559,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec2::<_, Mm>(-0.1, -0.8).ceil(), vec2::<_, Mm>(0.0, 0.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342564,"byte_end":342637,"line_start":300,"line_end":300,"column_start":5,"column_end":78}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342642,"byte_end":342649,"line_start":301,"line_end":301,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342654,"byte_end":342663,"line_start":302,"line_end":302,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342668,"byte_end":342679,"line_start":303,"line_end":303,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2863},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343188,"byte_end":343193,"line_start":323,"line_end":323,"column_start":12,"column_end":17},"name":"floor","qualname":"<Vector2D<T, U>>::floor","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342798,"byte_end":342886,"line_start":311,"line_end":311,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342891,"byte_end":342894,"line_start":312,"line_end":312,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342899,"byte_end":342974,"line_start":313,"line_end":313,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342979,"byte_end":342982,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":342987,"byte_end":342998,"line_start":315,"line_end":315,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec2;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343003,"byte_end":343026,"line_start":316,"line_end":316,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343031,"byte_end":343045,"line_start":317,"line_end":317,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343050,"byte_end":343053,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec2::<_, Mm>(-0.1, -0.8).floor(), vec2::<_, Mm>(-1.0, -1.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343058,"byte_end":343134,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343139,"byte_end":343146,"line_start":320,"line_end":320,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343151,"byte_end":343160,"line_start":321,"line_end":321,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343165,"byte_end":343176,"line_start":322,"line_end":322,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2864},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343534,"byte_end":343551,"line_start":335,"line_end":335,"column_start":12,"column_end":29},"name":"angle_from_x_axis","qualname":"<Vector2D<T, U>>::angle_from_x_axis","value":"fn (&self) -> Angle<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the signed angle between this vector and the x axis.\n Positive values counted counterclockwise, where 0 is `+x` axis, `PI/2`\n is `+y` axis.","sig":null,"attributes":[{"value":"/ Returns the signed angle between this vector and the x axis.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343299,"byte_end":343363,"line_start":330,"line_end":330,"column_start":5,"column_end":69}},{"value":"/ Positive values counted counterclockwise, where 0 is `+x` axis, `PI/2`","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343368,"byte_end":343442,"line_start":331,"line_end":331,"column_start":5,"column_end":79}},{"value":"/ is `+y` axis.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343447,"byte_end":343464,"line_start":332,"line_end":332,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343469,"byte_end":343472,"line_start":333,"line_end":333,"column_start":5,"column_end":8}},{"value":"/ The returned angle is between -PI and PI.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343477,"byte_end":343522,"line_start":334,"line_end":334,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2868},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343982,"byte_end":343994,"line_start":357,"line_end":357,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Vector2D<T, U>>::to_transform","value":"fn (&self) -> Transform2D<T, U, U>","parent":null,"children":[],"decl_id":null,"docs":" Creates translation by this vector in vector units.\n","sig":null,"attributes":[{"value":"/ Creates translation by this vector in vector units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343901,"byte_end":343956,"line_start":355,"line_end":355,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343961,"byte_end":343970,"line_start":356,"line_end":356,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2872},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":344253,"byte_end":344266,"line_start":369,"line_end":369,"column_start":12,"column_end":25},"name":"square_length","qualname":"<Vector2D<T, U>>::square_length","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector's length squared.\n","sig":null,"attributes":[{"value":"/ Returns the vector's length squared.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":344187,"byte_end":344227,"line_start":367,"line_end":367,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":344232,"byte_end":344241,"line_start":368,"line_end":368,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2873},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":344487,"byte_end":344506,"line_start":377,"line_end":377,"column_start":12,"column_end":31},"name":"project_onto_vector","qualname":"<Vector2D<T, U>>::project_onto_vector","value":"fn (&self, onto: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns this vector projected onto another one.","sig":null,"attributes":[{"value":"/ Returns this vector projected onto another one.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":344334,"byte_end":344385,"line_start":373,"line_end":373,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":344390,"byte_end":344393,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ Projecting onto a nil vector will cause a division by zero.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":344398,"byte_end":344461,"line_start":375,"line_end":375,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":344466,"byte_end":344475,"line_start":376,"line_end":376,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2874},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":344805,"byte_end":344813,"line_start":387,"line_end":387,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Vector2D<T, U>>::angle_to","value":"fn (&self, other: Self) -> Angle<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the signed angle between this vector and another vector.","sig":null,"attributes":[{"value":"/ Returns the signed angle between this vector and another vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":344667,"byte_end":344735,"line_start":384,"line_end":384,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":344740,"byte_end":344743,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ The returned angle is between -PI and PI.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":344748,"byte_end":344793,"line_start":386,"line_end":386,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":2878},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":345078,"byte_end":345084,"line_start":398,"line_end":398,"column_start":12,"column_end":18},"name":"length","qualname":"<Vector2D<T, U>>::length","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector length.\n","sig":null,"attributes":[{"value":"/ Returns the vector length.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":345022,"byte_end":345052,"line_start":396,"line_end":396,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":345057,"byte_end":345066,"line_start":397,"line_end":397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2879},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":345235,"byte_end":345244,"line_start":405,"line_end":405,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Vector2D<T, U>>::normalize","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector with length of one unit.\n","sig":null,"attributes":[{"value":"/ Returns the vector with length of one unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":345146,"byte_end":345193,"line_start":402,"line_end":402,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":345198,"byte_end":345207,"line_start":403,"line_end":403,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":345212,"byte_end":345223,"line_start":404,"line_end":404,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2880},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":345433,"byte_end":345449,"line_start":412,"line_end":412,"column_start":12,"column_end":28},"name":"robust_normalize","qualname":"<Vector2D<T, U>>::robust_normalize","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the normalized vector even if the length is larger than the max value of Float.\n","sig":null,"attributes":[{"value":"/ Return the normalized vector even if the length is larger than the max value of Float.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":345301,"byte_end":345391,"line_start":409,"line_end":409,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":345396,"byte_end":345405,"line_start":410,"line_end":410,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":345410,"byte_end":345421,"line_start":411,"line_end":411,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":2881},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":345761,"byte_end":345776,"line_start":424,"line_end":424,"column_start":12,"column_end":27},"name":"with_max_length","qualname":"<Vector2D<T, U>>::with_max_length","value":"fn (&self, max_length: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector capped to a maximum length.\n","sig":null,"attributes":[{"value":"/ Return this vector capped to a maximum length.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":345685,"byte_end":345735,"line_start":422,"line_end":422,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":345740,"byte_end":345749,"line_start":423,"line_end":423,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2882},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346093,"byte_end":346108,"line_start":435,"line_end":435,"column_start":12,"column_end":27},"name":"with_min_length","qualname":"<Vector2D<T, U>>::with_min_length","value":"fn (&self, min_length: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector with a minimum length applied.\n","sig":null,"attributes":[{"value":"/ Return this vector with a minimum length applied.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346014,"byte_end":346067,"line_start":433,"line_end":433,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346072,"byte_end":346081,"line_start":434,"line_end":434,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2883},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346436,"byte_end":346448,"line_start":446,"line_end":446,"column_start":12,"column_end":24},"name":"clamp_length","qualname":"<Vector2D<T, U>>::clamp_length","value":"fn (&self, min: T, max: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector with minimum and maximum lengths applied.\n","sig":null,"attributes":[{"value":"/ Return this vector with minimum and maximum lengths applied.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346346,"byte_end":346410,"line_start":444,"line_end":444,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346415,"byte_end":346424,"line_start":445,"line_end":445,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2887},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":347337,"byte_end":347341,"line_start":474,"line_end":474,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Vector2D<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate each component between this vector and another vector.","sig":null,"attributes":[{"value":"/ Linearly interpolate each component between this vector and another vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346692,"byte_end":346771,"line_start":456,"line_end":456,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346776,"byte_end":346779,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346784,"byte_end":346797,"line_start":458,"line_end":458,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346802,"byte_end":346805,"line_start":459,"line_end":459,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346810,"byte_end":346821,"line_start":460,"line_end":460,"column_start":5,"column_end":16}},{"value":"/ use euclid::vec2;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346826,"byte_end":346847,"line_start":461,"line_end":461,"column_start":5,"column_end":26}},{"value":"/ use euclid::default::Vector2D;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346852,"byte_end":346886,"line_start":462,"line_end":462,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346891,"byte_end":346894,"line_start":463,"line_end":463,"column_start":5,"column_end":8}},{"value":"/ let from: Vector2D<_> = vec2(0.0, 10.0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346899,"byte_end":346943,"line_start":464,"line_end":464,"column_start":5,"column_end":49}},{"value":"/ let to:  Vector2D<_> = vec2(8.0, -4.0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346948,"byte_end":346991,"line_start":465,"line_end":465,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346996,"byte_end":346999,"line_start":466,"line_end":466,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), vec2(-8.0,  24.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":347004,"byte_end":347059,"line_start":467,"line_end":467,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  0.0), vec2( 0.0,  10.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":347064,"byte_end":347119,"line_start":468,"line_end":468,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  0.5), vec2( 4.0,   3.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":347124,"byte_end":347179,"line_start":469,"line_end":469,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  1.0), vec2( 8.0,  -4.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":347184,"byte_end":347239,"line_start":470,"line_end":470,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(from.lerp(to,  2.0), vec2(16.0, -18.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":347244,"byte_end":347299,"line_start":471,"line_end":471,"column_start":5,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":347304,"byte_end":347311,"line_start":472,"line_end":472,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":347316,"byte_end":347325,"line_start":473,"line_end":473,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2888},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":347560,"byte_end":347567,"line_start":481,"line_end":481,"column_start":12,"column_end":19},"name":"reflect","qualname":"<Vector2D<T, U>>::reflect","value":"fn (&self, normal: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a reflection vector using an incident ray and a surface normal.\n","sig":null,"attributes":[{"value":"/ Returns a reflection vector using an incident ray and a surface normal.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":347459,"byte_end":347534,"line_start":479,"line_end":479,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":347539,"byte_end":347548,"line_start":480,"line_end":480,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2892},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":347851,"byte_end":347854,"line_start":490,"line_end":490,"column_start":12,"column_end":15},"name":"min","qualname":"<Vector2D<T, U>>::min","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which are minimum of this vector and another.\n","sig":null,"attributes":[{"value":"/ Returns the vector each component of which are minimum of this vector and another.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":347739,"byte_end":347825,"line_start":488,"line_end":488,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":347830,"byte_end":347839,"line_start":489,"line_end":489,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2893},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":348064,"byte_end":348067,"line_start":496,"line_end":496,"column_start":12,"column_end":15},"name":"max","qualname":"<Vector2D<T, U>>::max","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which are maximum of this vector and another.\n","sig":null,"attributes":[{"value":"/ Returns the vector each component of which are maximum of this vector and another.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":347952,"byte_end":348038,"line_start":494,"line_end":494,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":348043,"byte_end":348052,"line_start":495,"line_end":495,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2894},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":348363,"byte_end":348368,"line_start":505,"line_end":505,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Vector2D<T, U>>::clamp","value":"fn (&self, start: Self, end: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which is clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the vector each component of which is clamped by corresponding","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":348165,"byte_end":348239,"line_start":500,"line_end":500,"column_start":5,"column_end":79}},{"value":"/ components of `start` and `end`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":348244,"byte_end":348280,"line_start":501,"line_end":501,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":348285,"byte_end":348288,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":348293,"byte_end":348337,"line_start":503,"line_end":503,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":348342,"byte_end":348351,"line_start":504,"line_end":504,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2895},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":348589,"byte_end":348601,"line_start":514,"line_end":514,"column_start":12,"column_end":24},"name":"greater_than","qualname":"<Vector2D<T, U>>::greater_than","value":"fn (&self, other: Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"greater than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"greater than\" operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":348485,"byte_end":348563,"line_start":512,"line_end":512,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":348568,"byte_end":348577,"line_start":513,"line_end":513,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2896},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":348852,"byte_end":348862,"line_start":523,"line_end":523,"column_start":12,"column_end":22},"name":"lower_than","qualname":"<Vector2D<T, U>>::lower_than","value":"fn (&self, other: Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"lower than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"lower than\" operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":348750,"byte_end":348826,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":348831,"byte_end":348840,"line_start":522,"line_end":522,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2900},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":349149,"byte_end":349154,"line_start":534,"line_end":534,"column_start":12,"column_end":17},"name":"equal","qualname":"<Vector2D<T, U>>::equal","value":"fn (&self, other: Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"equal\" operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":349052,"byte_end":349123,"line_start":532,"line_end":532,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":349128,"byte_end":349137,"line_start":533,"line_end":533,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2901},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":349406,"byte_end":349415,"line_start":543,"line_end":543,"column_start":12,"column_end":21},"name":"not_equal","qualname":"<Vector2D<T, U>>::not_equal","value":"fn (&self, other: Self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"not equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"not equal\" operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":349305,"byte_end":349380,"line_start":541,"line_end":541,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":349385,"byte_end":349394,"line_start":542,"line_end":542,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2905},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":349993,"byte_end":349997,"line_start":558,"line_end":558,"column_start":12,"column_end":16},"name":"cast","qualname":"<Vector2D<T, U>>::cast","value":"fn <NewT> (&self) -> Vector2D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":349612,"byte_end":349686,"line_start":552,"line_end":552,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":349691,"byte_end":349694,"line_start":553,"line_end":553,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":349699,"byte_end":349787,"line_start":554,"line_end":554,"column_start":5,"column_end":93}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":349792,"byte_end":349880,"line_start":555,"line_end":555,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":349885,"byte_end":349967,"line_start":556,"line_end":556,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":349972,"byte_end":349981,"line_start":557,"line_end":557,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2907},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":350463,"byte_end":350471,"line_start":567,"line_end":567,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Vector2D<T, U>>::try_cast","value":"fn <NewT> (&self) -> Option<Vector2D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":350087,"byte_end":350170,"line_start":562,"line_end":562,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":350175,"byte_end":350178,"line_start":563,"line_end":563,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":350183,"byte_end":350271,"line_start":564,"line_end":564,"column_start":5,"column_end":93}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":350276,"byte_end":350364,"line_start":565,"line_end":565,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":350369,"byte_end":350451,"line_start":566,"line_end":566,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":2909},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":350797,"byte_end":350803,"line_start":578,"line_end":578,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Vector2D<T, U>>::to_f32","value":"fn (&self) -> Vector2D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` vector.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":350741,"byte_end":350771,"line_start":576,"line_end":576,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":350776,"byte_end":350785,"line_start":577,"line_end":577,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2910},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":350920,"byte_end":350926,"line_start":584,"line_end":584,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Vector2D<T, U>>::to_f64","value":"fn (&self) -> Vector2D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` vector.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":350864,"byte_end":350894,"line_start":582,"line_end":582,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":350899,"byte_end":350908,"line_start":583,"line_end":583,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2911},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351284,"byte_end":351292,"line_start":594,"line_end":594,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Vector2D<T, U>>::to_usize","value":"fn (&self) -> Vector2D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` vector, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":350987,"byte_end":351047,"line_start":588,"line_end":588,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351052,"byte_end":351055,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351060,"byte_end":351138,"line_start":590,"line_end":590,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351143,"byte_end":351217,"line_start":591,"line_end":591,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351222,"byte_end":351258,"line_start":592,"line_end":592,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351263,"byte_end":351272,"line_start":593,"line_end":593,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2912},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351650,"byte_end":351656,"line_start":604,"line_end":604,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Vector2D<T, U>>::to_u32","value":"fn (&self) -> Vector2D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` vector, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351355,"byte_end":351413,"line_start":598,"line_end":598,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351418,"byte_end":351421,"line_start":599,"line_end":599,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351426,"byte_end":351504,"line_start":600,"line_end":600,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351509,"byte_end":351583,"line_start":601,"line_end":601,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351588,"byte_end":351624,"line_start":602,"line_end":602,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351629,"byte_end":351638,"line_start":603,"line_end":603,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2913},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":352010,"byte_end":352016,"line_start":614,"line_end":614,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Vector2D<T, U>>::to_i32","value":"fn (&self) -> Vector2D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an i32 vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an i32 vector, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351717,"byte_end":351773,"line_start":608,"line_end":608,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351778,"byte_end":351781,"line_start":609,"line_end":609,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351786,"byte_end":351864,"line_start":610,"line_end":610,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351869,"byte_end":351943,"line_start":611,"line_end":611,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351948,"byte_end":351984,"line_start":612,"line_end":612,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":351989,"byte_end":351998,"line_start":613,"line_end":613,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":2914},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":352370,"byte_end":352376,"line_start":624,"line_end":624,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Vector2D<T, U>>::to_i64","value":"fn (&self) -> Vector2D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an i64 vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an i64 vector, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":352077,"byte_end":352133,"line_start":618,"line_end":618,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":352138,"byte_end":352141,"line_start":619,"line_end":619,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":352146,"byte_end":352224,"line_start":620,"line_end":620,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":352229,"byte_end":352303,"line_start":621,"line_end":621,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":352308,"byte_end":352344,"line_start":622,"line_end":622,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":352349,"byte_end":352358,"line_start":623,"line_end":623,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3017},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356601,"byte_end":356609,"line_start":813,"line_end":813,"column_start":12,"column_end":20},"name":"Vector3D","qualname":"::vector::Vector3D","value":"Vector3D { x, y, z, _unit }","parent":null,"children":[{"krate":0,"index":3020},{"krate":0,"index":3021},{"krate":0,"index":3022},{"krate":0,"index":3023}],"decl_id":null,"docs":" A 3d Vector tagged with a unit.\n","sig":null,"attributes":[{"value":"/ A 3d Vector tagged with a unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356543,"byte_end":356578,"line_start":811,"line_end":811,"column_start":1,"column_end":36}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356579,"byte_end":356589,"line_start":812,"line_end":812,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3020},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356682,"byte_end":356683,"line_start":815,"line_end":815,"column_start":9,"column_end":10},"name":"x","qualname":"::vector::Vector3D::x","value":"T","parent":{"krate":0,"index":3017},"children":[],"decl_id":null,"docs":" The `x` (traditionally, horizontal) coordinate.\n","sig":null,"attributes":[{"value":"/ The `x` (traditionally, horizontal) coordinate.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356622,"byte_end":356673,"line_start":814,"line_end":814,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":3021},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356750,"byte_end":356751,"line_start":817,"line_end":817,"column_start":9,"column_end":10},"name":"y","qualname":"::vector::Vector3D::y","value":"T","parent":{"krate":0,"index":3017},"children":[],"decl_id":null,"docs":" The `y` (traditionally, vertical) coordinate.\n","sig":null,"attributes":[{"value":"/ The `y` (traditionally, vertical) coordinate.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356692,"byte_end":356741,"line_start":816,"line_end":816,"column_start":5,"column_end":54}}]},{"kind":"Field","id":{"krate":0,"index":3022},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356815,"byte_end":356816,"line_start":819,"line_end":819,"column_start":9,"column_end":10},"name":"z","qualname":"::vector::Vector3D::z","value":"T","parent":{"krate":0,"index":3017},"children":[],"decl_id":null,"docs":" The `z` (traditionally, depth) coordinate.\n","sig":null,"attributes":[{"value":"/ The `z` (traditionally, depth) coordinate.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356760,"byte_end":356806,"line_start":818,"line_end":818,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":3023},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356848,"byte_end":356853,"line_start":821,"line_end":821,"column_start":9,"column_end":14},"name":"_unit","qualname":"::vector::Vector3D::_unit","value":"core::marker::PhantomData<U>","parent":{"krate":0,"index":3017},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3062},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":359315,"byte_end":359319,"line_start":917,"line_end":917,"column_start":12,"column_end":16},"name":"zero","qualname":"<Vector3D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all components to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all components to zero.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":359241,"byte_end":359289,"line_start":915,"line_end":915,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":359294,"byte_end":359303,"line_start":916,"line_end":916,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3063},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":359507,"byte_end":359510,"line_start":926,"line_end":926,"column_start":18,"column_end":21},"name":"new","qualname":"<Vector3D<T, U>>::new","value":"fn (x: T, y: T, z: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking scalar values directly.\n","sig":null,"attributes":[{"value":"/ Constructor taking scalar values directly.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":359429,"byte_end":359475,"line_start":924,"line_end":924,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":359480,"byte_end":359489,"line_start":925,"line_end":925,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3064},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":359748,"byte_end":359760,"line_start":937,"line_end":937,"column_start":12,"column_end":24},"name":"from_lengths","qualname":"<Vector3D<T, U>>::from_lengths","value":"fn (x: Length<T, U>, y: Length<T, U>, z: Length<T, U>) -> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Constructor taking properly  Lengths instead of scalar values.\n","sig":null,"attributes":[{"value":"/ Constructor taking properly  Lengths instead of scalar values.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":359656,"byte_end":359722,"line_start":935,"line_end":935,"column_start":5,"column_end":71}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":359727,"byte_end":359736,"line_start":936,"line_end":936,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3065},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":359933,"byte_end":359945,"line_start":943,"line_end":943,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Vector3D<T, U>>::from_untyped","value":"fn (p: Vector3D<T, UnknownUnit>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":359871,"byte_end":359907,"line_start":941,"line_end":941,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":359912,"byte_end":359921,"line_start":942,"line_end":942,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3066},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360637,"byte_end":360640,"line_start":968,"line_end":968,"column_start":12,"column_end":15},"name":"abs","qualname":"<Vector3D<T, U>>::abs","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Computes the vector with absolute values of each component.","sig":null,"attributes":[{"value":"/ Computes the vector with absolute values of each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360024,"byte_end":360087,"line_start":947,"line_end":947,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360092,"byte_end":360095,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360100,"byte_end":360113,"line_start":949,"line_end":949,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360118,"byte_end":360121,"line_start":950,"line_end":950,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360126,"byte_end":360137,"line_start":951,"line_end":951,"column_start":5,"column_end":16}},{"value":"/ # use std::{i32, f32};","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360142,"byte_end":360168,"line_start":952,"line_end":952,"column_start":5,"column_end":31}},{"value":"/ # use euclid::vec3;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360173,"byte_end":360196,"line_start":953,"line_end":953,"column_start":5,"column_end":28}},{"value":"/ enum U {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360201,"byte_end":360214,"line_start":954,"line_end":954,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360219,"byte_end":360222,"line_start":955,"line_end":955,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec3::<_, U>(-1, 0, 2).abs(), vec3(1, 0, 2));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360227,"byte_end":360287,"line_start":956,"line_end":956,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360292,"byte_end":360295,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ let vec = vec3::<_, U>(f32::NAN, 0.0, -f32::MAX).abs();","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360300,"byte_end":360359,"line_start":958,"line_end":958,"column_start":5,"column_end":64}},{"value":"/ assert!(vec.x.is_nan());","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360364,"byte_end":360392,"line_start":959,"line_end":959,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec.y, 0.0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360397,"byte_end":360424,"line_start":960,"line_end":960,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(vec.z, f32::MAX);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360429,"byte_end":360461,"line_start":961,"line_end":961,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360466,"byte_end":360473,"line_start":962,"line_end":962,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360478,"byte_end":360481,"line_start":963,"line_end":963,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360486,"byte_end":360498,"line_start":964,"line_end":964,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360503,"byte_end":360506,"line_start":965,"line_end":965,"column_start":5,"column_end":8}},{"value":"/ The behavior for each component follows the scalar type's implementation of","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360511,"byte_end":360590,"line_start":966,"line_end":966,"column_start":5,"column_end":84}},{"value":"/ `num_traits::Signed::abs`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360595,"byte_end":360625,"line_start":967,"line_end":967,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":3067},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360799,"byte_end":360802,"line_start":977,"line_end":977,"column_start":12,"column_end":15},"name":"dot","qualname":"<Vector3D<T, U>>::dot","value":"fn (self, other: Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Dot product.\n","sig":null,"attributes":[{"value":"/ Dot product.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360757,"byte_end":360773,"line_start":975,"line_end":975,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360778,"byte_end":360787,"line_start":976,"line_end":976,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3071},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":361043,"byte_end":361048,"line_start":988,"line_end":988,"column_start":12,"column_end":17},"name":"cross","qualname":"<Vector3D<T, U>>::cross","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Cross product.\n","sig":null,"attributes":[{"value":"/ Cross product.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360999,"byte_end":361017,"line_start":986,"line_end":986,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":361022,"byte_end":361031,"line_start":987,"line_end":987,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3072},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":361444,"byte_end":361452,"line_start":1003,"line_end":1003,"column_start":12,"column_end":20},"name":"to_point","qualname":"<Vector3D<T, U>>::to_point","value":"fn (&self) -> Point3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast this vector into a point.","sig":null,"attributes":[{"value":"/ Cast this vector into a point.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":361320,"byte_end":361354,"line_start":999,"line_end":999,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":361359,"byte_end":361362,"line_start":1000,"line_end":1000,"column_start":5,"column_end":8}},{"value":"/ Equivalent to adding this vector to the origin.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":361367,"byte_end":361418,"line_start":1001,"line_end":1001,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":361423,"byte_end":361432,"line_start":1002,"line_end":1002,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3073},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":361618,"byte_end":361620,"line_start":1009,"line_end":1009,"column_start":12,"column_end":14},"name":"xy","qualname":"<Vector3D<T, U>>::xy","value":"fn (&self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and y coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's x and y coordinates","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":361529,"byte_end":361592,"line_start":1007,"line_end":1007,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":361597,"byte_end":361606,"line_start":1008,"line_end":1008,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3074},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":361777,"byte_end":361779,"line_start":1015,"line_end":1015,"column_start":12,"column_end":14},"name":"xz","qualname":"<Vector3D<T, U>>::xz","value":"fn (&self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and z coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's x and z coordinates","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":361688,"byte_end":361751,"line_start":1013,"line_end":1013,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":361756,"byte_end":361765,"line_start":1014,"line_end":1014,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3075},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":361936,"byte_end":361938,"line_start":1021,"line_end":1021,"column_start":12,"column_end":14},"name":"yz","qualname":"<Vector3D<T, U>>::yz","value":"fn (&self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and z coordinates\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's x and z coordinates","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":361847,"byte_end":361910,"line_start":1019,"line_end":1019,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":361915,"byte_end":361924,"line_start":1020,"line_end":1020,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3076},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362071,"byte_end":362079,"line_start":1027,"line_end":1027,"column_start":12,"column_end":20},"name":"to_array","qualname":"<Vector3D<T, U>>::to_array","value":"fn (&self) -> [T; 3]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x, y and z.\n","sig":null,"attributes":[{"value":"/ Cast into an array with x, y and z.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362006,"byte_end":362045,"line_start":1025,"line_end":1025,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362050,"byte_end":362059,"line_start":1026,"line_end":1026,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3078},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362211,"byte_end":362222,"line_start":1033,"line_end":1033,"column_start":12,"column_end":23},"name":"to_array_4d","qualname":"<Vector3D<T, U>>::to_array_4d","value":"fn (&self) -> [T; 4]","parent":null,"children":[],"decl_id":null,"docs":" Cast into an array with x, y, z and 0.\n","sig":null,"attributes":[{"value":"/ Cast into an array with x, y, z and 0.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362143,"byte_end":362185,"line_start":1031,"line_end":1031,"column_start":5,"column_end":47}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362190,"byte_end":362199,"line_start":1032,"line_end":1032,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3080},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362395,"byte_end":362403,"line_start":1042,"line_end":1042,"column_start":12,"column_end":20},"name":"to_tuple","qualname":"<Vector3D<T, U>>::to_tuple","value":"fn (&self) -> (T, T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x, y and z.\n","sig":null,"attributes":[{"value":"/ Cast into a tuple with x, y and z.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362331,"byte_end":362369,"line_start":1040,"line_end":1040,"column_start":5,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362374,"byte_end":362383,"line_start":1041,"line_end":1041,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3081},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362537,"byte_end":362548,"line_start":1048,"line_end":1048,"column_start":12,"column_end":23},"name":"to_tuple_4d","qualname":"<Vector3D<T, U>>::to_tuple_4d","value":"fn (&self) -> (T, T, T, T)","parent":null,"children":[],"decl_id":null,"docs":" Cast into a tuple with x, y, z and 0.\n","sig":null,"attributes":[{"value":"/ Cast into a tuple with x, y, z and 0.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362470,"byte_end":362511,"line_start":1046,"line_end":1046,"column_start":5,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362516,"byte_end":362525,"line_start":1047,"line_end":1047,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3082},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362743,"byte_end":362753,"line_start":1057,"line_end":1057,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Vector3D<T, U>>::to_untyped","value":"fn (&self) -> Vector3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362663,"byte_end":362717,"line_start":1055,"line_end":1055,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362722,"byte_end":362731,"line_start":1056,"line_end":1056,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3083},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362883,"byte_end":362892,"line_start":1063,"line_end":1063,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Vector3D<T, U>>::cast_unit","value":"fn <V> (&self) -> Vector3D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit.\n","sig":null,"attributes":[{"value":"/ Cast the unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362839,"byte_end":362857,"line_start":1061,"line_end":1061,"column_start":5,"column_end":23}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362862,"byte_end":362871,"line_start":1062,"line_end":1062,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3085},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363026,"byte_end":363031,"line_start":1069,"line_end":1069,"column_start":12,"column_end":17},"name":"to_2d","qualname":"<Vector3D<T, U>>::to_2d","value":"fn (&self) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convert into a 2d vector.\n","sig":null,"attributes":[{"value":"/ Convert into a 2d vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":362971,"byte_end":363000,"line_start":1067,"line_end":1067,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363005,"byte_end":363014,"line_start":1068,"line_end":1068,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3086},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363454,"byte_end":363459,"line_start":1085,"line_end":1085,"column_start":12,"column_end":17},"name":"round","qualname":"<Vector3D<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the nearest integer value.","sig":null,"attributes":[{"value":"/ Rounds each component to the nearest integer value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363088,"byte_end":363143,"line_start":1073,"line_end":1073,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363148,"byte_end":363151,"line_start":1074,"line_end":1074,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363156,"byte_end":363231,"line_start":1075,"line_end":1075,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363236,"byte_end":363239,"line_start":1076,"line_end":1076,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363244,"byte_end":363255,"line_start":1077,"line_end":1077,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec3;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363260,"byte_end":363283,"line_start":1078,"line_end":1078,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363288,"byte_end":363302,"line_start":1079,"line_end":1079,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363307,"byte_end":363310,"line_start":1080,"line_end":1080,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec3::<_, Mm>(-0.1, -0.8, 0.4).round(), vec3::<_, Mm>(0.0, -1.0, 0.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363315,"byte_end":363400,"line_start":1081,"line_end":1081,"column_start":5,"column_end":90}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363405,"byte_end":363412,"line_start":1082,"line_end":1082,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363417,"byte_end":363426,"line_start":1083,"line_end":1083,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363431,"byte_end":363442,"line_start":1084,"line_end":1084,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3087},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363981,"byte_end":363985,"line_start":1104,"line_end":1104,"column_start":12,"column_end":16},"name":"ceil","qualname":"<Vector3D<T, U>>::ceil","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the smallest integer equal or greater than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the smallest integer equal or greater than the original value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363581,"byte_end":363672,"line_start":1092,"line_end":1092,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363677,"byte_end":363680,"line_start":1093,"line_end":1093,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363685,"byte_end":363760,"line_start":1094,"line_end":1094,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363765,"byte_end":363768,"line_start":1095,"line_end":1095,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363773,"byte_end":363784,"line_start":1096,"line_end":1096,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec3;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363789,"byte_end":363812,"line_start":1097,"line_end":1097,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363817,"byte_end":363831,"line_start":1098,"line_end":1098,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363836,"byte_end":363839,"line_start":1099,"line_end":1099,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec3::<_, Mm>(-0.1, -0.8, 0.4).ceil(), vec3::<_, Mm>(0.0, 0.0, 1.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363844,"byte_end":363927,"line_start":1100,"line_end":1100,"column_start":5,"column_end":88}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363932,"byte_end":363939,"line_start":1101,"line_end":1101,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363944,"byte_end":363953,"line_start":1102,"line_end":1102,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":363958,"byte_end":363969,"line_start":1103,"line_end":1103,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3088},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364503,"byte_end":364508,"line_start":1123,"line_end":1123,"column_start":12,"column_end":17},"name":"floor","qualname":"<Vector3D<T, U>>::floor","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Rounds each component to the biggest integer equal or lower than the original value.","sig":null,"attributes":[{"value":"/ Rounds each component to the biggest integer equal or lower than the original value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364103,"byte_end":364191,"line_start":1111,"line_end":1111,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364196,"byte_end":364199,"line_start":1112,"line_end":1112,"column_start":5,"column_end":8}},{"value":"/ This behavior is preserved for negative values (unlike the basic cast).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364204,"byte_end":364279,"line_start":1113,"line_end":1113,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364284,"byte_end":364287,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364292,"byte_end":364303,"line_start":1115,"line_end":1115,"column_start":5,"column_end":16}},{"value":"/ # use euclid::vec3;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364308,"byte_end":364331,"line_start":1116,"line_end":1116,"column_start":5,"column_end":28}},{"value":"/ enum Mm {}","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364336,"byte_end":364350,"line_start":1117,"line_end":1117,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364355,"byte_end":364358,"line_start":1118,"line_end":1118,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec3::<_, Mm>(-0.1, -0.8, 0.4).floor(), vec3::<_, Mm>(-1.0, -1.0, 0.0))","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364363,"byte_end":364449,"line_start":1119,"line_end":1119,"column_start":5,"column_end":91}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364454,"byte_end":364461,"line_start":1120,"line_end":1120,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364466,"byte_end":364475,"line_start":1121,"line_end":1121,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364480,"byte_end":364491,"line_start":1122,"line_end":1122,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3092},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364965,"byte_end":364977,"line_start":1146,"line_end":1146,"column_start":12,"column_end":24},"name":"to_transform","qualname":"<Vector3D<T, U>>::to_transform","value":"fn (&self) -> Transform3D<T, U, U>","parent":null,"children":[],"decl_id":null,"docs":" Creates translation by this vector in vector units\n","sig":null,"attributes":[{"value":"/ Creates translation by this vector in vector units","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364885,"byte_end":364939,"line_start":1144,"line_end":1144,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364944,"byte_end":364953,"line_start":1145,"line_end":1145,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3096},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":365242,"byte_end":365255,"line_start":1157,"line_end":1157,"column_start":12,"column_end":25},"name":"square_length","qualname":"<Vector3D<T, U>>::square_length","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector's length squared.\n","sig":null,"attributes":[{"value":"/ Returns the vector's length squared.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":365176,"byte_end":365216,"line_start":1155,"line_end":1155,"column_start":5,"column_end":45}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":365221,"byte_end":365230,"line_start":1156,"line_end":1156,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3097},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":365494,"byte_end":365513,"line_start":1165,"line_end":1165,"column_start":12,"column_end":31},"name":"project_onto_vector","qualname":"<Vector3D<T, U>>::project_onto_vector","value":"fn (&self, onto: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns this vector projected onto another one.","sig":null,"attributes":[{"value":"/ Returns this vector projected onto another one.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":365341,"byte_end":365392,"line_start":1161,"line_end":1161,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":365397,"byte_end":365400,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ Projecting onto a nil vector will cause a division by zero.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":365405,"byte_end":365468,"line_start":1163,"line_end":1163,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":365473,"byte_end":365482,"line_start":1164,"line_end":1164,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3101},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":365849,"byte_end":365857,"line_start":1177,"line_end":1177,"column_start":12,"column_end":20},"name":"angle_to","qualname":"<Vector3D<T, U>>::angle_to","value":"fn (&self, other: Self) -> Angle<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the positive angle between this vector and another vector.","sig":null,"attributes":[{"value":"/ Returns the positive angle between this vector and another vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":365711,"byte_end":365781,"line_start":1174,"line_end":1174,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":365786,"byte_end":365789,"line_start":1175,"line_end":1175,"column_start":5,"column_end":8}},{"value":"/ The returned angle is between 0 and PI.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":365794,"byte_end":365837,"line_start":1176,"line_end":1176,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3102},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":366076,"byte_end":366082,"line_start":1186,"line_end":1186,"column_start":12,"column_end":18},"name":"length","qualname":"<Vector3D<T, U>>::length","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector length.\n","sig":null,"attributes":[{"value":"/ Returns the vector length.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":366020,"byte_end":366050,"line_start":1184,"line_end":1184,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":366055,"byte_end":366064,"line_start":1185,"line_end":1185,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3103},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":366232,"byte_end":366241,"line_start":1193,"line_end":1193,"column_start":12,"column_end":21},"name":"normalize","qualname":"<Vector3D<T, U>>::normalize","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector with length of one unit\n","sig":null,"attributes":[{"value":"/ Returns the vector with length of one unit","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":366144,"byte_end":366190,"line_start":1190,"line_end":1190,"column_start":5,"column_end":51}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":366195,"byte_end":366204,"line_start":1191,"line_end":1191,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":366209,"byte_end":366220,"line_start":1192,"line_end":1192,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3104},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":366430,"byte_end":366446,"line_start":1200,"line_end":1200,"column_start":12,"column_end":28},"name":"robust_normalize","qualname":"<Vector3D<T, U>>::robust_normalize","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return the normalized vector even if the length is larger than the max value of Float.\n","sig":null,"attributes":[{"value":"/ Return the normalized vector even if the length is larger than the max value of Float.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":366298,"byte_end":366388,"line_start":1197,"line_end":1197,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":366393,"byte_end":366402,"line_start":1198,"line_end":1198,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":366407,"byte_end":366418,"line_start":1199,"line_end":1199,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3105},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":366758,"byte_end":366773,"line_start":1212,"line_end":1212,"column_start":12,"column_end":27},"name":"with_max_length","qualname":"<Vector3D<T, U>>::with_max_length","value":"fn (&self, max_length: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector capped to a maximum length.\n","sig":null,"attributes":[{"value":"/ Return this vector capped to a maximum length.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":366682,"byte_end":366732,"line_start":1210,"line_end":1210,"column_start":5,"column_end":55}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":366737,"byte_end":366746,"line_start":1211,"line_end":1211,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3106},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367090,"byte_end":367105,"line_start":1223,"line_end":1223,"column_start":12,"column_end":27},"name":"with_min_length","qualname":"<Vector3D<T, U>>::with_min_length","value":"fn (&self, min_length: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector with a minimum length applied.\n","sig":null,"attributes":[{"value":"/ Return this vector with a minimum length applied.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367011,"byte_end":367064,"line_start":1221,"line_end":1221,"column_start":5,"column_end":58}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367069,"byte_end":367078,"line_start":1222,"line_end":1222,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3107},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367433,"byte_end":367445,"line_start":1234,"line_end":1234,"column_start":12,"column_end":24},"name":"clamp_length","qualname":"<Vector3D<T, U>>::clamp_length","value":"fn (&self, min: T, max: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return this vector with minimum and maximum lengths applied.\n","sig":null,"attributes":[{"value":"/ Return this vector with minimum and maximum lengths applied.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367343,"byte_end":367407,"line_start":1232,"line_end":1232,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367412,"byte_end":367421,"line_start":1233,"line_end":1233,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3111},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":368376,"byte_end":368380,"line_start":1262,"line_end":1262,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Vector3D<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate each component between this vector and another vector.","sig":null,"attributes":[{"value":"/ Linearly interpolate each component between this vector and another vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367689,"byte_end":367768,"line_start":1244,"line_end":1244,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367773,"byte_end":367776,"line_start":1245,"line_end":1245,"column_start":5,"column_end":8}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367781,"byte_end":367794,"line_start":1246,"line_end":1246,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367799,"byte_end":367802,"line_start":1247,"line_end":1247,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367807,"byte_end":367818,"line_start":1248,"line_end":1248,"column_start":5,"column_end":16}},{"value":"/ use euclid::vec3;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367823,"byte_end":367844,"line_start":1249,"line_end":1249,"column_start":5,"column_end":26}},{"value":"/ use euclid::default::Vector3D;","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367849,"byte_end":367883,"line_start":1250,"line_end":1250,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367888,"byte_end":367891,"line_start":1251,"line_end":1251,"column_start":5,"column_end":8}},{"value":"/ let from: Vector3D<_> = vec3(0.0, 10.0, -1.0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367896,"byte_end":367946,"line_start":1252,"line_end":1252,"column_start":5,"column_end":55}},{"value":"/ let to:  Vector3D<_> = vec3(8.0, -4.0,  0.0);","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367951,"byte_end":368000,"line_start":1253,"line_end":1253,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":368005,"byte_end":368008,"line_start":1254,"line_end":1254,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(from.lerp(to, -1.0), vec3(-8.0,  24.0, -2.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":368013,"byte_end":368074,"line_start":1255,"line_end":1255,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(from.lerp(to,  0.0), vec3( 0.0,  10.0, -1.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":368079,"byte_end":368140,"line_start":1256,"line_end":1256,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(from.lerp(to,  0.5), vec3( 4.0,   3.0, -0.5));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":368145,"byte_end":368206,"line_start":1257,"line_end":1257,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(from.lerp(to,  1.0), vec3( 8.0,  -4.0,  0.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":368211,"byte_end":368272,"line_start":1258,"line_end":1258,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(from.lerp(to,  2.0), vec3(16.0, -18.0,  1.0));","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":368277,"byte_end":368338,"line_start":1259,"line_end":1259,"column_start":5,"column_end":66}},{"value":"/ ```","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":368343,"byte_end":368350,"line_start":1260,"line_end":1260,"column_start":5,"column_end":12}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":368355,"byte_end":368364,"line_start":1261,"line_end":1261,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3112},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":368599,"byte_end":368606,"line_start":1269,"line_end":1269,"column_start":12,"column_end":19},"name":"reflect","qualname":"<Vector3D<T, U>>::reflect","value":"fn (&self, normal: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a reflection vector using an incident ray and a surface normal.\n","sig":null,"attributes":[{"value":"/ Returns a reflection vector using an incident ray and a surface normal.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":368498,"byte_end":368573,"line_start":1267,"line_end":1267,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":368578,"byte_end":368587,"line_start":1268,"line_end":1268,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3116},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":368890,"byte_end":368893,"line_start":1278,"line_end":1278,"column_start":12,"column_end":15},"name":"min","qualname":"<Vector3D<T, U>>::min","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which are minimum of this vector and another.\n","sig":null,"attributes":[{"value":"/ Returns the vector each component of which are minimum of this vector and another.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":368778,"byte_end":368864,"line_start":1276,"line_end":1276,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":368869,"byte_end":368878,"line_start":1277,"line_end":1277,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3117},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":369172,"byte_end":369175,"line_start":1288,"line_end":1288,"column_start":12,"column_end":15},"name":"max","qualname":"<Vector3D<T, U>>::max","value":"fn (self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which are maximum of this vector and another.\n","sig":null,"attributes":[{"value":"/ Returns the vector each component of which are maximum of this vector and another.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":369060,"byte_end":369146,"line_start":1286,"line_end":1286,"column_start":5,"column_end":91}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":369151,"byte_end":369160,"line_start":1287,"line_end":1287,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3118},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":369540,"byte_end":369545,"line_start":1301,"line_end":1301,"column_start":12,"column_end":17},"name":"clamp","qualname":"<Vector3D<T, U>>::clamp","value":"fn (&self, start: Self, end: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the vector each component of which is clamped by corresponding\n components of `start` and `end`.","sig":null,"attributes":[{"value":"/ Returns the vector each component of which is clamped by corresponding","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":369342,"byte_end":369416,"line_start":1296,"line_end":1296,"column_start":5,"column_end":79}},{"value":"/ components of `start` and `end`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":369421,"byte_end":369457,"line_start":1297,"line_end":1297,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":369462,"byte_end":369465,"line_start":1298,"line_end":1298,"column_start":5,"column_end":8}},{"value":"/ Shortcut for `self.max(start).min(end)`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":369470,"byte_end":369514,"line_start":1299,"line_end":1299,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":369519,"byte_end":369528,"line_start":1300,"line_end":1300,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3119},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":369766,"byte_end":369778,"line_start":1310,"line_end":1310,"column_start":12,"column_end":24},"name":"greater_than","qualname":"<Vector3D<T, U>>::greater_than","value":"fn (&self, other: Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"greater than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"greater than\" operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":369662,"byte_end":369740,"line_start":1308,"line_end":1308,"column_start":5,"column_end":83}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":369745,"byte_end":369754,"line_start":1309,"line_end":1309,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":370062,"byte_end":370072,"line_start":1320,"line_end":1320,"column_start":12,"column_end":22},"name":"lower_than","qualname":"<Vector3D<T, U>>::lower_than","value":"fn (&self, other: Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"lower than\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"lower than\" operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":369960,"byte_end":370036,"line_start":1318,"line_end":1318,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":370041,"byte_end":370050,"line_start":1319,"line_end":1319,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":370392,"byte_end":370397,"line_start":1332,"line_end":1332,"column_start":12,"column_end":17},"name":"equal","qualname":"<Vector3D<T, U>>::equal","value":"fn (&self, other: Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"equal\" operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":370295,"byte_end":370366,"line_start":1330,"line_end":1330,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":370371,"byte_end":370380,"line_start":1331,"line_end":1331,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3125},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":370683,"byte_end":370692,"line_start":1342,"line_end":1342,"column_start":12,"column_end":21},"name":"not_equal","qualname":"<Vector3D<T, U>>::not_equal","value":"fn (&self, other: Self) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Returns vector with results of \"not equal\" operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns vector with results of \"not equal\" operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":370582,"byte_end":370657,"line_start":1340,"line_end":1340,"column_start":5,"column_end":80}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":370662,"byte_end":370671,"line_start":1341,"line_end":1341,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":371304,"byte_end":371308,"line_start":1358,"line_end":1358,"column_start":12,"column_end":16},"name":"cast","qualname":"<Vector3D<T, U>>::cast","value":"fn <NewT> (&self) -> Vector3D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":370923,"byte_end":370997,"line_start":1352,"line_end":1352,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":371002,"byte_end":371005,"line_start":1353,"line_end":1353,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":371010,"byte_end":371098,"line_start":1354,"line_end":1354,"column_start":5,"column_end":93}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":371103,"byte_end":371191,"line_start":1355,"line_end":1355,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":371196,"byte_end":371278,"line_start":1356,"line_end":1356,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":371283,"byte_end":371292,"line_start":1357,"line_end":1357,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3131},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":371774,"byte_end":371782,"line_start":1367,"line_end":1367,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Vector3D<T, U>>::try_cast","value":"fn <NewT> (&self) -> Option<Vector3D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":371398,"byte_end":371481,"line_start":1362,"line_end":1362,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":371486,"byte_end":371489,"line_start":1363,"line_end":1363,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":371494,"byte_end":371582,"line_start":1364,"line_end":1364,"column_start":5,"column_end":93}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":371587,"byte_end":371675,"line_start":1365,"line_end":1365,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using `round()`, `ceil()` or `floor()` before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":371680,"byte_end":371762,"line_start":1366,"line_end":1366,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372181,"byte_end":372187,"line_start":1382,"line_end":1382,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Vector3D<T, U>>::to_f32","value":"fn (&self) -> Vector3D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` vector.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372125,"byte_end":372155,"line_start":1380,"line_end":1380,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372160,"byte_end":372169,"line_start":1381,"line_end":1381,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372304,"byte_end":372310,"line_start":1388,"line_end":1388,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Vector3D<T, U>>::to_f64","value":"fn (&self) -> Vector3D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` vector.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372248,"byte_end":372278,"line_start":1386,"line_end":1386,"column_start":5,"column_end":35}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372283,"byte_end":372292,"line_start":1387,"line_end":1387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3135},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372668,"byte_end":372676,"line_start":1398,"line_end":1398,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Vector3D<T, U>>::to_usize","value":"fn (&self) -> Vector3D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` vector, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372371,"byte_end":372431,"line_start":1392,"line_end":1392,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372436,"byte_end":372439,"line_start":1393,"line_end":1393,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372444,"byte_end":372522,"line_start":1394,"line_end":1394,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372527,"byte_end":372601,"line_start":1395,"line_end":1395,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372606,"byte_end":372642,"line_start":1396,"line_end":1396,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372647,"byte_end":372656,"line_start":1397,"line_end":1397,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373034,"byte_end":373040,"line_start":1408,"line_end":1408,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Vector3D<T, U>>::to_u32","value":"fn (&self) -> Vector3D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` vector, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372739,"byte_end":372797,"line_start":1402,"line_end":1402,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372802,"byte_end":372805,"line_start":1403,"line_end":1403,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372810,"byte_end":372888,"line_start":1404,"line_end":1404,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372893,"byte_end":372967,"line_start":1405,"line_end":1405,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":372972,"byte_end":373008,"line_start":1406,"line_end":1406,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373013,"byte_end":373022,"line_start":1407,"line_end":1407,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3137},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373396,"byte_end":373402,"line_start":1418,"line_end":1418,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Vector3D<T, U>>::to_i32","value":"fn (&self) -> Vector3D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` vector, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373101,"byte_end":373159,"line_start":1412,"line_end":1412,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373164,"byte_end":373167,"line_start":1413,"line_end":1413,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373172,"byte_end":373250,"line_start":1414,"line_end":1414,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373255,"byte_end":373329,"line_start":1415,"line_end":1415,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373334,"byte_end":373370,"line_start":1416,"line_end":1416,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373375,"byte_end":373384,"line_start":1417,"line_end":1417,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3138},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373758,"byte_end":373764,"line_start":1428,"line_end":1428,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Vector3D<T, U>>::to_i64","value":"fn (&self) -> Vector3D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` vector, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` vector, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373463,"byte_end":373521,"line_start":1422,"line_end":1422,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373526,"byte_end":373529,"line_start":1423,"line_end":1423,"column_start":5,"column_end":8}},{"value":"/ When casting from floating vector vectors, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373534,"byte_end":373612,"line_start":1424,"line_end":1424,"column_start":5,"column_end":83}},{"value":"/ to `round()`, `ceil()` or `floor()` before the cast in order to obtain","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373617,"byte_end":373691,"line_start":1425,"line_end":1425,"column_start":5,"column_end":79}},{"value":"/ the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373696,"byte_end":373732,"line_start":1426,"line_end":1426,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373737,"byte_end":373746,"line_start":1427,"line_end":1427,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3724},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378388,"byte_end":378400,"line_start":1625,"line_end":1625,"column_start":12,"column_end":24},"name":"BoolVector2D","qualname":"::vector::BoolVector2D","value":"BoolVector2D { x, y }","parent":null,"children":[{"krate":0,"index":3725},{"krate":0,"index":3726}],"decl_id":null,"docs":" A 2d vector of booleans, useful for component-wise logic operations.\n","sig":null,"attributes":[{"value":"/ A 2d vector of booleans, useful for component-wise logic operations.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378253,"byte_end":378325,"line_start":1623,"line_end":1623,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3725},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378411,"byte_end":378412,"line_start":1626,"line_end":1626,"column_start":9,"column_end":10},"name":"x","qualname":"::vector::BoolVector2D::x","value":"bool","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3726},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378428,"byte_end":378429,"line_start":1627,"line_end":1627,"column_start":9,"column_end":10},"name":"y","qualname":"::vector::BoolVector2D::y","value":"bool","parent":{"krate":0,"index":3724},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3742},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378575,"byte_end":378587,"line_start":1632,"line_end":1632,"column_start":12,"column_end":24},"name":"BoolVector3D","qualname":"::vector::BoolVector3D","value":"BoolVector3D { x, y, z }","parent":null,"children":[{"krate":0,"index":3743},{"krate":0,"index":3744},{"krate":0,"index":3745}],"decl_id":null,"docs":" A 3d vector of booleans, useful for component-wise logic operations.\n","sig":null,"attributes":[{"value":"/ A 3d vector of booleans, useful for component-wise logic operations.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378440,"byte_end":378512,"line_start":1630,"line_end":1630,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":3743},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378598,"byte_end":378599,"line_start":1633,"line_end":1633,"column_start":9,"column_end":10},"name":"x","qualname":"::vector::BoolVector3D::x","value":"bool","parent":{"krate":0,"index":3742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3744},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378615,"byte_end":378616,"line_start":1634,"line_end":1634,"column_start":9,"column_end":10},"name":"y","qualname":"::vector::BoolVector3D::y","value":"bool","parent":{"krate":0,"index":3742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3745},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378632,"byte_end":378633,"line_start":1635,"line_end":1635,"column_start":9,"column_end":10},"name":"z","qualname":"::vector::BoolVector3D::z","value":"bool","parent":{"krate":0,"index":3742},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3238},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378764,"byte_end":378767,"line_start":1641,"line_end":1641,"column_start":12,"column_end":15},"name":"all","qualname":"<BoolVector2D>::all","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all components are `true` and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all components are `true` and `false` otherwise.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378668,"byte_end":378738,"line_start":1639,"line_end":1639,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378743,"byte_end":378752,"line_start":1640,"line_end":1640,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3239},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378916,"byte_end":378919,"line_start":1647,"line_end":1647,"column_start":12,"column_end":15},"name":"any","qualname":"<BoolVector2D>::any","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any component are `true` and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if any component are `true` and `false` otherwise.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378821,"byte_end":378890,"line_start":1645,"line_end":1645,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378895,"byte_end":378904,"line_start":1646,"line_end":1646,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3240},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":379091,"byte_end":379095,"line_start":1653,"line_end":1653,"column_start":12,"column_end":16},"name":"none","qualname":"<BoolVector2D>::none","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all components are `false` and `false` otherwise. Negation of `any()`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all components are `false` and `false` otherwise. Negation of `any()`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378973,"byte_end":379065,"line_start":1651,"line_end":1651,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":379070,"byte_end":379079,"line_start":1652,"line_end":1652,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3241},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":379233,"byte_end":379236,"line_start":1659,"line_end":1659,"column_start":12,"column_end":15},"name":"and","qualname":"<BoolVector2D>::and","value":"fn (&self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with by-component AND operation applied.\n","sig":null,"attributes":[{"value":"/ Returns new vector with by-component AND operation applied.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":379144,"byte_end":379207,"line_start":1657,"line_end":1657,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":379212,"byte_end":379221,"line_start":1658,"line_end":1658,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3242},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":379467,"byte_end":379469,"line_start":1668,"line_end":1668,"column_start":12,"column_end":14},"name":"or","qualname":"<BoolVector2D>::or","value":"fn (&self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with by-component OR operation applied.\n","sig":null,"attributes":[{"value":"/ Returns new vector with by-component OR operation applied.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":379379,"byte_end":379441,"line_start":1666,"line_end":1666,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":379446,"byte_end":379455,"line_start":1667,"line_end":1667,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3243},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":379714,"byte_end":379717,"line_start":1677,"line_end":1677,"column_start":12,"column_end":15},"name":"not","qualname":"<BoolVector2D>::not","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with results of negation operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns new vector with results of negation operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":379612,"byte_end":379688,"line_start":1675,"line_end":1675,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":379693,"byte_end":379702,"line_start":1676,"line_end":1676,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3244},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":380040,"byte_end":380052,"line_start":1687,"line_end":1687,"column_start":12,"column_end":24},"name":"select_point","qualname":"<BoolVector2D>::select_point","value":"fn <T, U> (&self, a: Point2D<T, U>, b: Point2D<T, U>) -> Point2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns point, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns point, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":379827,"byte_end":379919,"line_start":1684,"line_end":1684,"column_start":5,"column_end":97}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":379924,"byte_end":380014,"line_start":1685,"line_end":1685,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":380019,"byte_end":380028,"line_start":1686,"line_end":1686,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3247},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":380460,"byte_end":380473,"line_start":1697,"line_end":1697,"column_start":12,"column_end":25},"name":"select_vector","qualname":"<BoolVector2D>::select_vector","value":"fn <T, U> (&self, a: Vector2D<T, U>, b: Vector2D<T, U>) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns vector, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns vector, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":380246,"byte_end":380339,"line_start":1694,"line_end":1694,"column_start":5,"column_end":98}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":380344,"byte_end":380434,"line_start":1695,"line_end":1695,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":380439,"byte_end":380448,"line_start":1696,"line_end":1696,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3250},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":380880,"byte_end":380891,"line_start":1707,"line_end":1707,"column_start":12,"column_end":23},"name":"select_size","qualname":"<BoolVector2D>::select_size","value":"fn <T, U> (&self, a: Size2D<T, U>, b: Size2D<T, U>) -> Size2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns size, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns size, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":380668,"byte_end":380759,"line_start":1704,"line_end":1704,"column_start":5,"column_end":96}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":380764,"byte_end":380854,"line_start":1705,"line_end":1705,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":380859,"byte_end":380868,"line_start":1706,"line_end":1706,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3254},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":381217,"byte_end":381220,"line_start":1718,"line_end":1718,"column_start":12,"column_end":15},"name":"all","qualname":"<BoolVector3D>::all","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all components are `true` and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all components are `true` and `false` otherwise.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":381121,"byte_end":381191,"line_start":1716,"line_end":1716,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":381196,"byte_end":381205,"line_start":1717,"line_end":1717,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3255},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":381379,"byte_end":381382,"line_start":1724,"line_end":1724,"column_start":12,"column_end":15},"name":"any","qualname":"<BoolVector3D>::any","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if any component are `true` and `false` otherwise.\n","sig":null,"attributes":[{"value":"/ Returns `true` if any component are `true` and `false` otherwise.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":381284,"byte_end":381353,"line_start":1722,"line_end":1722,"column_start":5,"column_end":74}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":381358,"byte_end":381367,"line_start":1723,"line_end":1723,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3256},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":381564,"byte_end":381568,"line_start":1730,"line_end":1730,"column_start":12,"column_end":16},"name":"none","qualname":"<BoolVector3D>::none","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if all components are `false` and `false` otherwise. Negation of `any()`.\n","sig":null,"attributes":[{"value":"/ Returns `true` if all components are `false` and `false` otherwise. Negation of `any()`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":381446,"byte_end":381538,"line_start":1728,"line_end":1728,"column_start":5,"column_end":97}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":381543,"byte_end":381552,"line_start":1729,"line_end":1729,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3257},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":381706,"byte_end":381709,"line_start":1736,"line_end":1736,"column_start":12,"column_end":15},"name":"and","qualname":"<BoolVector3D>::and","value":"fn (&self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with by-component AND operation applied.\n","sig":null,"attributes":[{"value":"/ Returns new vector with by-component AND operation applied.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":381617,"byte_end":381680,"line_start":1734,"line_end":1734,"column_start":5,"column_end":68}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":381685,"byte_end":381694,"line_start":1735,"line_end":1735,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":381974,"byte_end":381976,"line_start":1746,"line_end":1746,"column_start":12,"column_end":14},"name":"or","qualname":"<BoolVector3D>::or","value":"fn (&self, other: Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with by-component OR operation applied.\n","sig":null,"attributes":[{"value":"/ Returns new vector with by-component OR operation applied.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":381886,"byte_end":381948,"line_start":1744,"line_end":1744,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":381953,"byte_end":381962,"line_start":1745,"line_end":1745,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3259},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":382255,"byte_end":382258,"line_start":1756,"line_end":1756,"column_start":12,"column_end":15},"name":"not","qualname":"<BoolVector3D>::not","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns new vector with results of negation operation on each component.\n","sig":null,"attributes":[{"value":"/ Returns new vector with results of negation operation on each component.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":382153,"byte_end":382229,"line_start":1754,"line_end":1754,"column_start":5,"column_end":81}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":382234,"byte_end":382243,"line_start":1755,"line_end":1755,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3260},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":382606,"byte_end":382618,"line_start":1768,"line_end":1768,"column_start":12,"column_end":24},"name":"select_point","qualname":"<BoolVector3D>::select_point","value":"fn <T, U> (&self, a: Point3D<T, U>, b: Point3D<T, U>) -> Point3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns point, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns point, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":382393,"byte_end":382485,"line_start":1765,"line_end":1765,"column_start":5,"column_end":97}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":382490,"byte_end":382580,"line_start":1766,"line_end":1766,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":382585,"byte_end":382594,"line_start":1767,"line_end":1767,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3263},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":383070,"byte_end":383083,"line_start":1779,"line_end":1779,"column_start":12,"column_end":25},"name":"select_vector","qualname":"<BoolVector3D>::select_vector","value":"fn <T, U> (&self, a: Vector3D<T, U>, b: Vector3D<T, U>) -> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns vector, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns vector, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":382856,"byte_end":382949,"line_start":1776,"line_end":1776,"column_start":5,"column_end":98}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":382954,"byte_end":383044,"line_start":1777,"line_end":1777,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":383049,"byte_end":383058,"line_start":1778,"line_end":1778,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3266},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":383550,"byte_end":383561,"line_start":1791,"line_end":1791,"column_start":12,"column_end":23},"name":"select_size","qualname":"<BoolVector3D>::select_size","value":"fn <T, U> (&self, a: Size3D<T, U>, b: Size3D<T, U>) -> Size3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Returns size, each component of which or from `a`, or from `b` depending on truly value\n of corresponding vector component. `true` selects value from `a` and `false` from `b`.\n","sig":null,"attributes":[{"value":"/ Returns size, each component of which or from `a`, or from `b` depending on truly value","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":383322,"byte_end":383413,"line_start":1787,"line_end":1787,"column_start":5,"column_end":96}},{"value":"/ of corresponding vector component. `true` selects value from `a` and `false` from `b`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":383418,"byte_end":383508,"line_start":1788,"line_end":1788,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":383513,"byte_end":383522,"line_start":1789,"line_end":1789,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":383527,"byte_end":383538,"line_start":1790,"line_end":1790,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":383911,"byte_end":383913,"line_start":1801,"line_end":1801,"column_start":12,"column_end":14},"name":"xy","qualname":"<BoolVector3D>::xy","value":"fn (&self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and y coordinates.\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's x and y coordinates.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":383821,"byte_end":383885,"line_start":1799,"line_end":1799,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":383890,"byte_end":383899,"line_start":1800,"line_end":1800,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3270},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384119,"byte_end":384121,"line_start":1810,"line_end":1810,"column_start":12,"column_end":14},"name":"xz","qualname":"<BoolVector3D>::xz","value":"fn (&self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's x and z coordinates.\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's x and z coordinates.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384029,"byte_end":384093,"line_start":1808,"line_end":1808,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384098,"byte_end":384107,"line_start":1809,"line_end":1809,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3271},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384327,"byte_end":384329,"line_start":1819,"line_end":1819,"column_start":12,"column_end":14},"name":"yz","qualname":"<BoolVector3D>::yz","value":"fn (&self) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Returns a 2d vector using this vector's y and z coordinates.\n","sig":null,"attributes":[{"value":"/ Returns a 2d vector using this vector's y and z coordinates.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384237,"byte_end":384301,"line_start":1817,"line_end":1817,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384306,"byte_end":384315,"line_start":1818,"line_end":1818,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":3272},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384490,"byte_end":384494,"line_start":1830,"line_end":1830,"column_start":8,"column_end":12},"name":"vec2","qualname":"::vector::vec2","value":"fn <T, U> (x: T, y: T) -> Vector2D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convenience constructor.\n","sig":null,"attributes":[{"value":"/ Convenience constructor.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384444,"byte_end":384472,"line_start":1828,"line_end":1828,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384473,"byte_end":384482,"line_start":1829,"line_end":1829,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3275},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384653,"byte_end":384657,"line_start":1840,"line_end":1840,"column_start":8,"column_end":12},"name":"vec3","qualname":"::vector::vec3","value":"fn <T, U> (x: T, y: T, z: T) -> Vector3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Convenience constructor.\n","sig":null,"attributes":[{"value":"/ Convenience constructor.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384607,"byte_end":384635,"line_start":1838,"line_end":1838,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384636,"byte_end":384645,"line_start":1839,"line_end":1839,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3278},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384847,"byte_end":384852,"line_start":1851,"line_end":1851,"column_start":8,"column_end":13},"name":"bvec2","qualname":"::vector::bvec2","value":"fn (x: bool, y: bool) -> BoolVector2D","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `BoolVector2D { x, y }`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `BoolVector2D { x, y }`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384787,"byte_end":384829,"line_start":1849,"line_end":1849,"column_start":1,"column_end":43}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384830,"byte_end":384839,"line_start":1850,"line_end":1850,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":3279},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384981,"byte_end":384986,"line_start":1857,"line_end":1857,"column_start":8,"column_end":13},"name":"bvec3","qualname":"::vector::bvec3","value":"fn (x: bool, y: bool, z: bool) -> BoolVector3D","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `BoolVector3D { x, y, z }`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `BoolVector3D { x, y, z }`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384918,"byte_end":384963,"line_start":1855,"line_end":1855,"column_start":1,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":384964,"byte_end":384973,"line_start":1856,"line_end":1856,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":3305},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":400759,"byte_end":400764,"line_start":34,"line_end":34,"column_start":12,"column_end":17},"name":"Box3D","qualname":"::box3d::Box3D","value":"Box3D { min, max }","parent":null,"children":[{"krate":0,"index":3308},{"krate":0,"index":3309}],"decl_id":null,"docs":" An axis aligned 3D box represented by its minimum and maximum coordinates.\n","sig":null,"attributes":[{"value":"/ An axis aligned 3D box represented by its minimum and maximum coordinates.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":400485,"byte_end":400563,"line_start":30,"line_end":30,"column_start":1,"column_end":79}},{"value":"repr(C)","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":400564,"byte_end":400574,"line_start":31,"line_end":31,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3308},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":400781,"byte_end":400784,"line_start":35,"line_end":35,"column_start":9,"column_end":12},"name":"min","qualname":"::box3d::Box3D::min","value":"point::Point3D<T, U>","parent":{"krate":0,"index":3305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3309},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":400809,"byte_end":400812,"line_start":36,"line_end":36,"column_start":9,"column_end":12},"name":"max","qualname":"::box3d::Box3D::max","value":"point::Point3D<T, U>","parent":{"krate":0,"index":3305},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3340},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":401960,"byte_end":401963,"line_start":84,"line_end":84,"column_start":18,"column_end":21},"name":"new","qualname":"<Box3D<T, U>>::new","value":"fn (min: Point3D<T, U>, max: Point3D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor.\n","sig":null,"attributes":[{"value":"/ Constructor.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":401912,"byte_end":401928,"line_start":82,"line_end":82,"column_start":5,"column_end":21}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":401933,"byte_end":401942,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3344},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":402231,"byte_end":402240,"line_start":98,"line_end":98,"column_start":12,"column_end":21},"name":"from_size","qualname":"<Box3D<T, U>>::from_size","value":"fn (size: Size3D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a Box3D of the given size, at offset zero.\n","sig":null,"attributes":[{"value":"/ Creates a Box3D of the given size, at offset zero.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":402151,"byte_end":402205,"line_start":96,"line_end":96,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":402210,"byte_end":402219,"line_start":97,"line_end":97,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3348},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":402719,"byte_end":402730,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"is_negative","qualname":"<Box3D<T, U>>::is_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the box has a negative volume.","sig":null,"attributes":[{"value":"/ Returns true if the box has a negative volume.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":402462,"byte_end":402512,"line_start":109,"line_end":109,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":402517,"byte_end":402520,"line_start":110,"line_end":110,"column_start":5,"column_end":8}},{"value":"/ The common interpretation for a negative box is to consider it empty. It can be obtained","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":402525,"byte_end":402617,"line_start":111,"line_end":111,"column_start":5,"column_end":97}},{"value":"/ by calculating the intersection of two boxes that do not intersect.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":402622,"byte_end":402693,"line_start":112,"line_end":112,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":402698,"byte_end":402707,"line_start":113,"line_end":113,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3349},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":402920,"byte_end":402940,"line_start":120,"line_end":120,"column_start":12,"column_end":32},"name":"is_empty_or_negative","qualname":"<Box3D<T, U>>::is_empty_or_negative","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the size is zero or negative.\n","sig":null,"attributes":[{"value":"/ Returns true if the size is zero or negative.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":402845,"byte_end":402894,"line_start":118,"line_end":118,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":402899,"byte_end":402908,"line_start":119,"line_end":119,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3350},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":403079,"byte_end":403089,"line_start":125,"line_end":125,"column_start":12,"column_end":22},"name":"intersects","qualname":"<Box3D<T, U>>::intersects","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":403058,"byte_end":403067,"line_start":124,"line_end":124,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3351},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":403599,"byte_end":403607,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"contains","qualname":"<Box3D<T, U>>::contains","value":"fn (&self, other: Point3D<T, U>) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this box3d contains the point. Points are considered\n in the box3d if they are on the front, left or top faces, but outside if they\n are on the back, right or bottom faces.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this box3d contains the point. Points are considered","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":403365,"byte_end":403439,"line_start":134,"line_end":134,"column_start":5,"column_end":79}},{"value":"/ in the box3d if they are on the front, left or top faces, but outside if they","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":403444,"byte_end":403525,"line_start":135,"line_end":135,"column_start":5,"column_end":86}},{"value":"/ are on the back, right or bottom faces.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":403530,"byte_end":403573,"line_start":136,"line_end":136,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":403578,"byte_end":403587,"line_start":137,"line_end":137,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3352},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":404064,"byte_end":404076,"line_start":148,"line_end":148,"column_start":12,"column_end":24},"name":"contains_box","qualname":"<Box3D<T, U>>::contains_box","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if this box3d contains the interior of the other box3d. Always\n returns `true` if other is empty, and always returns `false` if other is\n nonempty but this box3d is empty.\n","sig":null,"attributes":[{"value":"/ Returns `true` if this box3d contains the interior of the other box3d. Always","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":403834,"byte_end":403915,"line_start":144,"line_end":144,"column_start":5,"column_end":86}},{"value":"/ returns `true` if other is empty, and always returns `false` if other is","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":403920,"byte_end":403996,"line_start":145,"line_end":145,"column_start":5,"column_end":81}},{"value":"/ nonempty but this box3d is empty.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":404001,"byte_end":404038,"line_start":146,"line_end":146,"column_start":5,"column_end":42}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":404043,"byte_end":404052,"line_start":147,"line_end":147,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3356},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":404456,"byte_end":404468,"line_start":161,"line_end":161,"column_start":12,"column_end":24},"name":"to_non_empty","qualname":"<Box3D<T, U>>::to_non_empty","value":"fn (&self) -> Option<NonEmpty<Self>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":404435,"byte_end":404444,"line_start":160,"line_end":160,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3357},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":404643,"byte_end":404659,"line_start":170,"line_end":170,"column_start":12,"column_end":28},"name":"try_intersection","qualname":"<Box3D<T, U>>::try_intersection","value":"fn (&self, other: &Self) -> Option<NonEmpty<Self>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":404622,"byte_end":404631,"line_start":169,"line_end":169,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3358},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":404849,"byte_end":404861,"line_start":178,"line_end":178,"column_start":12,"column_end":24},"name":"intersection","qualname":"<Box3D<T, U>>::intersection","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3362},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":405520,"byte_end":405529,"line_start":205,"line_end":205,"column_start":12,"column_end":21},"name":"translate","qualname":"<Box3D<T, U>>::translate","value":"fn (&self, by: Vector3D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the same box3d, translated by a vector.\n","sig":null,"attributes":[{"value":"/ Returns the same box3d, translated by a vector.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":405427,"byte_end":405478,"line_start":202,"line_end":202,"column_start":5,"column_end":56}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":405483,"byte_end":405492,"line_start":203,"line_end":203,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":405497,"byte_end":405508,"line_start":204,"line_end":204,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3366},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":405756,"byte_end":405760,"line_start":218,"line_end":218,"column_start":12,"column_end":16},"name":"size","qualname":"<Box3D<T, U>>::size","value":"fn (&self) -> Size3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":405735,"byte_end":405744,"line_start":217,"line_end":217,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3367},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":405959,"byte_end":405964,"line_start":227,"line_end":227,"column_start":12,"column_end":17},"name":"width","qualname":"<Box3D<T, U>>::width","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":405938,"byte_end":405947,"line_start":226,"line_end":226,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3368},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":406043,"byte_end":406049,"line_start":232,"line_end":232,"column_start":12,"column_end":18},"name":"height","qualname":"<Box3D<T, U>>::height","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":406022,"byte_end":406031,"line_start":231,"line_end":231,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3369},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":406128,"byte_end":406133,"line_start":237,"line_end":237,"column_start":12,"column_end":17},"name":"depth","qualname":"<Box3D<T, U>>::depth","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":406107,"byte_end":406116,"line_start":236,"line_end":236,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3373},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":406403,"byte_end":406410,"line_start":249,"line_end":249,"column_start":12,"column_end":19},"name":"inflate","qualname":"<Box3D<T, U>>::inflate","value":"fn (&self, width: T, height: T, depth: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Inflates the box by the specified sizes on each side respectively.\n","sig":null,"attributes":[{"value":"/ Inflates the box by the specified sizes on each side respectively.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":406291,"byte_end":406361,"line_start":246,"line_end":246,"column_start":5,"column_end":75}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":406366,"byte_end":406375,"line_start":247,"line_end":247,"column_start":5,"column_end":14}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":406380,"byte_end":406391,"line_start":248,"line_end":248,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3377},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":406819,"byte_end":406830,"line_start":262,"line_end":262,"column_start":12,"column_end":23},"name":"from_points","qualname":"<Box3D<T, U>>::from_points","value":"fn <I> (points: I) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns the smallest box containing all of the provided points.\n","sig":null,"attributes":[{"value":"/ Returns the smallest box containing all of the provided points.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":406740,"byte_end":406807,"line_start":261,"line_end":261,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":3382},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":408084,"byte_end":408088,"line_start":310,"line_end":310,"column_start":12,"column_end":16},"name":"lerp","qualname":"<Box3D<T, U>>::lerp","value":"fn (&self, other: Self, t: T) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Linearly interpolate between this box3d and another box3d.\n","sig":null,"attributes":[{"value":"/ Linearly interpolate between this box3d and another box3d.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":407996,"byte_end":408058,"line_start":308,"line_end":308,"column_start":5,"column_end":67}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":408063,"byte_end":408072,"line_start":309,"line_end":309,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3386},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":408342,"byte_end":408348,"line_start":322,"line_end":322,"column_start":12,"column_end":18},"name":"center","qualname":"<Box3D<T, U>>::center","value":"fn (&self) -> Point3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3390},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":408602,"byte_end":408607,"line_start":333,"line_end":333,"column_start":12,"column_end":17},"name":"union","qualname":"<Box3D<T, U>>::union","value":"fn (&self, other: &Self) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":408581,"byte_end":408590,"line_start":332,"line_end":332,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3394},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":409105,"byte_end":409110,"line_start":354,"line_end":354,"column_start":12,"column_end":17},"name":"scale","qualname":"<Box3D<T, U>>::scale","value":"fn <S> (&self, x: S, y: S, z: S) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":409084,"byte_end":409093,"line_start":353,"line_end":353,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3399},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":409497,"byte_end":409503,"line_start":370,"line_end":370,"column_start":12,"column_end":18},"name":"volume","qualname":"<Box3D<T, U>>::volume","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":409476,"byte_end":409485,"line_start":369,"line_end":369,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3400},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":409628,"byte_end":409635,"line_start":376,"line_end":376,"column_start":12,"column_end":19},"name":"xy_area","qualname":"<Box3D<T, U>>::xy_area","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":409607,"byte_end":409616,"line_start":375,"line_end":375,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3401},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":409747,"byte_end":409754,"line_start":382,"line_end":382,"column_start":12,"column_end":19},"name":"yz_area","qualname":"<Box3D<T, U>>::yz_area","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":409726,"byte_end":409735,"line_start":381,"line_end":381,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3402},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":409866,"byte_end":409873,"line_start":388,"line_end":388,"column_start":12,"column_end":19},"name":"xz_area","qualname":"<Box3D<T, U>>::xz_area","value":"fn (&self) -> T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":409845,"byte_end":409854,"line_start":387,"line_end":387,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3406},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":410064,"byte_end":410068,"line_start":399,"line_end":399,"column_start":12,"column_end":16},"name":"zero","qualname":"<Box3D<T, U>>::zero","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Constructor, setting all sides to zero.\n","sig":null,"attributes":[{"value":"/ Constructor, setting all sides to zero.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":410009,"byte_end":410052,"line_start":398,"line_end":398,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":3410},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":410261,"byte_end":410269,"line_start":410,"line_end":410,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Box3D<T, U>>::is_empty","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the volume is zero.\n","sig":null,"attributes":[{"value":"/ Returns true if the volume is zero.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":410196,"byte_end":410235,"line_start":408,"line_end":408,"column_start":5,"column_end":44}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":410240,"byte_end":410249,"line_start":409,"line_end":409,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3436},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":411477,"byte_end":411487,"line_start":465,"line_end":465,"column_start":12,"column_end":22},"name":"to_untyped","qualname":"<Box3D<T, U>>::to_untyped","value":"fn (&self) -> Box3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":" Drop the units, preserving only the numeric value.\n","sig":null,"attributes":[{"value":"/ Drop the units, preserving only the numeric value.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":411397,"byte_end":411451,"line_start":463,"line_end":463,"column_start":5,"column_end":59}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":411456,"byte_end":411465,"line_start":464,"line_end":464,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3437},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":411701,"byte_end":411713,"line_start":474,"line_end":474,"column_start":12,"column_end":24},"name":"from_untyped","qualname":"<Box3D<T, U>>::from_untyped","value":"fn (c: &Box3D<T, UnknownUnit>) -> Box3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Tag a unitless value with units.\n","sig":null,"attributes":[{"value":"/ Tag a unitless value with units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":411639,"byte_end":411675,"line_start":472,"line_end":472,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":411680,"byte_end":411689,"line_start":473,"line_end":473,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3438},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":411932,"byte_end":411941,"line_start":483,"line_end":483,"column_start":12,"column_end":21},"name":"cast_unit","qualname":"<Box3D<T, U>>::cast_unit","value":"fn <V> (&self) -> Box3D<T, V>","parent":null,"children":[],"decl_id":null,"docs":" Cast the unit\n","sig":null,"attributes":[{"value":"/ Cast the unit","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":411889,"byte_end":411906,"line_start":481,"line_end":481,"column_start":5,"column_end":22}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":411911,"byte_end":411920,"line_start":482,"line_end":482,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3443},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":412479,"byte_end":412483,"line_start":498,"line_end":498,"column_start":12,"column_end":16},"name":"cast","qualname":"<Box3D<T, U>>::cast","value":"fn <NewT> (&self) -> Box3D<NewT, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":412099,"byte_end":412173,"line_start":492,"line_end":492,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":412178,"byte_end":412181,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":412186,"byte_end":412273,"line_start":494,"line_end":494,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":412278,"byte_end":412366,"line_start":495,"line_end":495,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":412371,"byte_end":412453,"line_start":496,"line_end":496,"column_start":5,"column_end":87}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":412458,"byte_end":412467,"line_start":497,"line_end":497,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3445},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":413000,"byte_end":413008,"line_start":510,"line_end":510,"column_start":12,"column_end":20},"name":"try_cast","qualname":"<Box3D<T, U>>::try_cast","value":"fn <NewT> (&self) -> Option<Box3D<NewT, U>>","parent":null,"children":[],"decl_id":null,"docs":" Fallible cast from one numeric representation to another, preserving the units.","sig":null,"attributes":[{"value":"/ Fallible cast from one numeric representation to another, preserving the units.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":412625,"byte_end":412708,"line_start":505,"line_end":505,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":412713,"byte_end":412716,"line_start":506,"line_end":506,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point to integer coordinates, the decimals are truncated","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":412721,"byte_end":412808,"line_start":507,"line_end":507,"column_start":5,"column_end":92}},{"value":"/ as one would expect from a simple cast, but this behavior does not always make sense","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":412813,"byte_end":412901,"line_start":508,"line_end":508,"column_start":5,"column_end":93}},{"value":"/ geometrically. Consider using round(), round_in or round_out() before casting.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":412906,"byte_end":412988,"line_start":509,"line_end":509,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":3450},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":413815,"byte_end":413820,"line_start":532,"line_end":532,"column_start":12,"column_end":17},"name":"round","qualname":"<Box3D<T, U>>::round","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box3d with edges rounded to integer coordinates, such that\n the returned box3d has the same set of pixel centers as the original\n one.\n Values equal to 0.5 round up.\n Suitable for most places where integral device coordinates\n are needed, but note that any translation should be applied first to\n avoid pixel rounding errors.\n Note that this is *not* rounding to nearest integer if the values are negative.\n They are always rounding as floor(n + 0.5).\n","sig":null,"attributes":[{"value":"/ Return a box3d with edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":413267,"byte_end":413338,"line_start":522,"line_end":522,"column_start":5,"column_end":76}},{"value":"/ the returned box3d has the same set of pixel centers as the original","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":413343,"byte_end":413415,"line_start":523,"line_end":523,"column_start":5,"column_end":77}},{"value":"/ one.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":413420,"byte_end":413428,"line_start":524,"line_end":524,"column_start":5,"column_end":13}},{"value":"/ Values equal to 0.5 round up.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":413433,"byte_end":413466,"line_start":525,"line_end":525,"column_start":5,"column_end":38}},{"value":"/ Suitable for most places where integral device coordinates","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":413471,"byte_end":413533,"line_start":526,"line_end":526,"column_start":5,"column_end":67}},{"value":"/ are needed, but note that any translation should be applied first to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":413538,"byte_end":413610,"line_start":527,"line_end":527,"column_start":5,"column_end":77}},{"value":"/ avoid pixel rounding errors.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":413615,"byte_end":413647,"line_start":528,"line_end":528,"column_start":5,"column_end":37}},{"value":"/ Note that this is *not* rounding to nearest integer if the values are negative.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":413652,"byte_end":413735,"line_start":529,"line_end":529,"column_start":5,"column_end":88}},{"value":"/ They are always rounding as floor(n + 0.5).","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":413740,"byte_end":413787,"line_start":530,"line_end":530,"column_start":5,"column_end":52}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":413792,"byte_end":413803,"line_start":531,"line_end":531,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3454},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414120,"byte_end":414128,"line_start":544,"line_end":544,"column_start":12,"column_end":20},"name":"round_in","qualname":"<Box3D<T, U>>::round_in","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box3d with faces/edges rounded to integer coordinates, such that\n the original box3d contains the resulting box3d.\n","sig":null,"attributes":[{"value":"/ Return a box3d with faces/edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":413958,"byte_end":414035,"line_start":541,"line_end":541,"column_start":5,"column_end":82}},{"value":"/ the original box3d contains the resulting box3d.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414040,"byte_end":414092,"line_start":542,"line_end":542,"column_start":5,"column_end":57}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414097,"byte_end":414108,"line_start":543,"line_end":543,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3455},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414421,"byte_end":414430,"line_start":554,"line_end":554,"column_start":12,"column_end":21},"name":"round_out","qualname":"<Box3D<T, U>>::round_out","value":"fn (&self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Return a box3d with faces/edges rounded to integer coordinates, such that\n the original box3d is contained in the resulting box3d.\n","sig":null,"attributes":[{"value":"/ Return a box3d with faces/edges rounded to integer coordinates, such that","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414252,"byte_end":414329,"line_start":551,"line_end":551,"column_start":5,"column_end":82}},{"value":"/ the original box3d is contained in the resulting box3d.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414334,"byte_end":414393,"line_start":552,"line_end":552,"column_start":5,"column_end":64}},{"value":"must_use","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414398,"byte_end":414409,"line_start":553,"line_end":553,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":3459},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414694,"byte_end":414700,"line_start":566,"line_end":566,"column_start":12,"column_end":18},"name":"to_f32","qualname":"<Box3D<T, U>>::to_f32","value":"fn (&self) -> Box3D<f32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f32` box3d.\n","sig":null,"attributes":[{"value":"/ Cast into an `f32` box3d.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414639,"byte_end":414668,"line_start":564,"line_end":564,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414673,"byte_end":414682,"line_start":565,"line_end":565,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3460},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414813,"byte_end":414819,"line_start":572,"line_end":572,"column_start":12,"column_end":18},"name":"to_f64","qualname":"<Box3D<T, U>>::to_f64","value":"fn (&self) -> Box3D<f64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `f64` box3d.\n","sig":null,"attributes":[{"value":"/ Cast into an `f64` box3d.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414758,"byte_end":414787,"line_start":570,"line_end":570,"column_start":5,"column_end":34}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414792,"byte_end":414801,"line_start":571,"line_end":571,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3461},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415180,"byte_end":415188,"line_start":582,"line_end":582,"column_start":12,"column_end":20},"name":"to_usize","qualname":"<Box3D<T, U>>::to_usize","value":"fn (&self) -> Box3D<usize, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `usize` box3d, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `usize` box3d, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414877,"byte_end":414936,"line_start":576,"line_end":576,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414941,"byte_end":414944,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point cuboids, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414949,"byte_end":415026,"line_start":578,"line_end":578,"column_start":5,"column_end":82}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415031,"byte_end":415106,"line_start":579,"line_end":579,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415111,"byte_end":415154,"line_start":580,"line_end":580,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415159,"byte_end":415168,"line_start":581,"line_end":581,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3462},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415549,"byte_end":415555,"line_start":592,"line_end":592,"column_start":12,"column_end":18},"name":"to_u32","qualname":"<Box3D<T, U>>::to_u32","value":"fn (&self) -> Box3D<u32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `u32` box3d, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `u32` box3d, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415248,"byte_end":415305,"line_start":586,"line_end":586,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415310,"byte_end":415313,"line_start":587,"line_end":587,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point cuboids, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415318,"byte_end":415395,"line_start":588,"line_end":588,"column_start":5,"column_end":82}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415400,"byte_end":415475,"line_start":589,"line_end":589,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415480,"byte_end":415523,"line_start":590,"line_end":590,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415528,"byte_end":415537,"line_start":591,"line_end":591,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3463},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415914,"byte_end":415920,"line_start":602,"line_end":602,"column_start":12,"column_end":18},"name":"to_i32","qualname":"<Box3D<T, U>>::to_i32","value":"fn (&self) -> Box3D<i32, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i32` box3d, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i32` box3d, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415613,"byte_end":415670,"line_start":596,"line_end":596,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415675,"byte_end":415678,"line_start":597,"line_end":597,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point cuboids, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415683,"byte_end":415760,"line_start":598,"line_end":598,"column_start":5,"column_end":82}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415765,"byte_end":415840,"line_start":599,"line_end":599,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415845,"byte_end":415888,"line_start":600,"line_end":600,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415893,"byte_end":415902,"line_start":601,"line_end":601,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3464},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":416279,"byte_end":416285,"line_start":612,"line_end":612,"column_start":12,"column_end":18},"name":"to_i64","qualname":"<Box3D<T, U>>::to_i64","value":"fn (&self) -> Box3D<i64, U>","parent":null,"children":[],"decl_id":null,"docs":" Cast into an `i64` box3d, truncating decimals if any.","sig":null,"attributes":[{"value":"/ Cast into an `i64` box3d, truncating decimals if any.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":415978,"byte_end":416035,"line_start":606,"line_end":606,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":416040,"byte_end":416043,"line_start":607,"line_end":607,"column_start":5,"column_end":8}},{"value":"/ When casting from floating point cuboids, it is worth considering whether","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":416048,"byte_end":416125,"line_start":608,"line_end":608,"column_start":5,"column_end":82}},{"value":"/ to `round()`, `round_in()` or `round_out()` before the cast in order to","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":416130,"byte_end":416205,"line_start":609,"line_end":609,"column_start":5,"column_end":80}},{"value":"/ obtain the desired conversion behavior.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":416210,"byte_end":416253,"line_start":610,"line_end":610,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":416258,"byte_end":416267,"line_start":611,"line_end":611,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":3469},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":416594,"byte_end":416599,"line_start":627,"line_end":627,"column_start":8,"column_end":13},"name":"box3d","qualname":"::box3d::box3d","value":"fn <T, U> (min_x: T, min_y: T, min_z: T, max_x: T, max_y: T, max_z: T) -> Box3D<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Shorthand for `Box3D::new(Point3D::new(x1, y1, z1), Point3D::new(x2, y2, z2))`.\n","sig":null,"attributes":[{"value":"/ Shorthand for `Box3D::new(Point3D::new(x1, y1, z1), Point3D::new(x2, y2, z2))`.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":416503,"byte_end":416586,"line_start":626,"line_end":626,"column_start":1,"column_end":84}}]},{"kind":"Struct","id":{"krate":0,"index":3761},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":425291,"byte_end":425299,"line_start":11,"line_end":11,"column_start":12,"column_end":20},"name":"NonEmpty","qualname":"::nonempty::NonEmpty","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3497},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":425472,"byte_end":425475,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"get","qualname":"<NonEmpty<T>>::get","value":"fn (&self) -> &T","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":425451,"byte_end":425460,"line_start":21,"line_end":21,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3501},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":425649,"byte_end":425654,"line_start":32,"line_end":32,"column_start":12,"column_end":17},"name":"union","qualname":"<NonEmpty<Rect<T, U>>>::union","value":"fn (&self, other: &NonEmpty<Rect<T, U>>) -> NonEmpty<Rect<T, U>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":425628,"byte_end":425637,"line_start":31,"line_end":31,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3502},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":426187,"byte_end":426200,"line_start":51,"line_end":51,"column_start":12,"column_end":25},"name":"contains_rect","qualname":"<NonEmpty<Rect<T, U>>>::contains_rect","value":"fn (&self, rect: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":426166,"byte_end":426175,"line_start":50,"line_end":50,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3503},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":426432,"byte_end":426441,"line_start":59,"line_end":59,"column_start":12,"column_end":21},"name":"translate","qualname":"<NonEmpty<Rect<T, U>>>::translate","value":"fn (&self, by: Vector2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":426411,"byte_end":426420,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3507},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":426619,"byte_end":426624,"line_start":69,"line_end":69,"column_start":12,"column_end":17},"name":"union","qualname":"<NonEmpty<Box2D<T, U>>>::union","value":"fn (&self, other: &NonEmpty<Box2D<T, U>>) -> NonEmpty<Box2D<T, U>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":426598,"byte_end":426607,"line_start":68,"line_end":68,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3508},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":427095,"byte_end":427107,"line_start":84,"line_end":84,"column_start":12,"column_end":24},"name":"contains_box","qualname":"<NonEmpty<Box2D<T, U>>>::contains_box","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this box contains the interior of the other box.\n","sig":null,"attributes":[{"value":"/ Returns true if this box contains the interior of the other box.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":427001,"byte_end":427069,"line_start":82,"line_end":82,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":427074,"byte_end":427083,"line_start":83,"line_end":83,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3512},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":427405,"byte_end":427414,"line_start":97,"line_end":97,"column_start":12,"column_end":21},"name":"translate","qualname":"<NonEmpty<Box2D<T, U>>>::translate","value":"fn (&self, by: Vector2D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":427384,"byte_end":427393,"line_start":96,"line_end":96,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3516},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":427592,"byte_end":427597,"line_start":107,"line_end":107,"column_start":12,"column_end":17},"name":"union","qualname":"<NonEmpty<Box3D<T, U>>>::union","value":"fn (&self, other: &NonEmpty<Box3D<T, U>>) -> NonEmpty<Box3D<T, U>>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":427571,"byte_end":427580,"line_start":106,"line_end":106,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3517},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":428160,"byte_end":428172,"line_start":124,"line_end":124,"column_start":12,"column_end":24},"name":"contains_box","qualname":"<NonEmpty<Box3D<T, U>>>::contains_box","value":"fn (&self, other: &Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this box contains the interior of the other box.\n","sig":null,"attributes":[{"value":"/ Returns true if this box contains the interior of the other box.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":428066,"byte_end":428134,"line_start":122,"line_end":122,"column_start":5,"column_end":73}},{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":428139,"byte_end":428148,"line_start":123,"line_end":123,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":3521},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":428552,"byte_end":428561,"line_start":139,"line_end":139,"column_start":12,"column_end":21},"name":"translate","qualname":"<NonEmpty<Box3D<T, U>>>::translate","value":"fn (&self, by: Vector3D<T, U>) -> Self","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":428531,"byte_end":428540,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":3788},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":3132,"byte_end":3143,"line_start":101,"line_end":101,"column_start":12,"column_end":23},"name":"UnknownUnit","qualname":"::UnknownUnit","value":"","parent":null,"children":[],"decl_id":null,"docs":" The default unit.\n","sig":null,"attributes":[{"value":"/ The default unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":3022,"byte_end":3043,"line_start":99,"line_end":99,"column_start":1,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":3522},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":3154,"byte_end":3161,"line_start":103,"line_end":103,"column_start":9,"column_end":16},"name":"default","qualname":"::default","value":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3526},{"krate":0,"index":3528},{"krate":0,"index":3530},{"krate":0,"index":3532},{"krate":0,"index":3534},{"krate":0,"index":3536},{"krate":0,"index":3538},{"krate":0,"index":3540},{"krate":0,"index":3542},{"krate":0,"index":3544},{"krate":0,"index":3546},{"krate":0,"index":3548},{"krate":0,"index":3550},{"krate":0,"index":3552},{"krate":0,"index":3554},{"krate":0,"index":3556},{"krate":0,"index":3558},{"krate":0,"index":3560},{"krate":0,"index":3562}],"decl_id":null,"docs":" A set of aliases for all types, tagged with the default unknown unit.\n","sig":null,"attributes":[{"value":"! A set of aliases for all types, tagged with the default unknown unit.","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":3168,"byte_end":3241,"line_start":104,"line_end":104,"column_start":5,"column_end":78}}]},{"kind":"Type","id":{"krate":0,"index":3524},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":3284,"byte_end":3290,"line_start":107,"line_end":107,"column_start":14,"column_end":20},"name":"Length","qualname":"::default::Length","value":"super::Length<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3526},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":3340,"byte_end":3347,"line_start":108,"line_end":108,"column_start":14,"column_end":21},"name":"Point2D","qualname":"::default::Point2D","value":"super::Point2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3528},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":3398,"byte_end":3405,"line_start":109,"line_end":109,"column_start":14,"column_end":21},"name":"Point3D","qualname":"::default::Point3D","value":"super::Point3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3530},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":3456,"byte_end":3464,"line_start":110,"line_end":110,"column_start":14,"column_end":22},"name":"Vector2D","qualname":"::default::Vector2D","value":"super::Vector2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3532},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":3516,"byte_end":3524,"line_start":111,"line_end":111,"column_start":14,"column_end":22},"name":"Vector3D","qualname":"::default::Vector3D","value":"super::Vector3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3534},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":3576,"byte_end":3593,"line_start":112,"line_end":112,"column_start":14,"column_end":31},"name":"HomogeneousVector","qualname":"::default::HomogeneousVector","value":"super::HomogeneousVector<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3536},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":3654,"byte_end":3660,"line_start":113,"line_end":113,"column_start":14,"column_end":20},"name":"Size2D","qualname":"::default::Size2D","value":"super::Size2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3538},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":3710,"byte_end":3716,"line_start":114,"line_end":114,"column_start":14,"column_end":20},"name":"Size3D","qualname":"::default::Size3D","value":"super::Size3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3540},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":3766,"byte_end":3770,"line_start":115,"line_end":115,"column_start":14,"column_end":18},"name":"Rect","qualname":"::default::Rect","value":"super::Rect<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3542},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":3818,"byte_end":3823,"line_start":116,"line_end":116,"column_start":14,"column_end":19},"name":"Box2D","qualname":"::default::Box2D","value":"super::Box2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3544},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":3872,"byte_end":3877,"line_start":117,"line_end":117,"column_start":14,"column_end":19},"name":"Box3D","qualname":"::default::Box3D","value":"super::Box3D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3546},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":3926,"byte_end":3939,"line_start":118,"line_end":118,"column_start":14,"column_end":27},"name":"SideOffsets2D","qualname":"::default::SideOffsets2D","value":"super::SideOffsets2D<T, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3548},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":3996,"byte_end":4007,"line_start":119,"line_end":119,"column_start":14,"column_end":25},"name":"Transform2D","qualname":"::default::Transform2D","value":"super::Transform2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3550},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":4075,"byte_end":4086,"line_start":120,"line_end":120,"column_start":14,"column_end":25},"name":"Transform3D","qualname":"::default::Transform3D","value":"super::Transform3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3552},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":4154,"byte_end":4164,"line_start":121,"line_end":121,"column_start":14,"column_end":24},"name":"Rotation2D","qualname":"::default::Rotation2D","value":"super::Rotation2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3554},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":4231,"byte_end":4241,"line_start":122,"line_end":122,"column_start":14,"column_end":24},"name":"Rotation3D","qualname":"::default::Rotation3D","value":"super::Rotation3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3556},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":4308,"byte_end":4321,"line_start":123,"line_end":123,"column_start":14,"column_end":27},"name":"Translation2D","qualname":"::default::Translation2D","value":"super::Translation2D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3558},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":4391,"byte_end":4404,"line_start":124,"line_end":124,"column_start":14,"column_end":27},"name":"Translation3D","qualname":"::default::Translation3D","value":"super::Translation3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3560},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":4474,"byte_end":4479,"line_start":125,"line_end":125,"column_start":14,"column_end":19},"name":"Scale","qualname":"::default::Scale","value":"super::Scale<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3562},"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":4541,"byte_end":4557,"line_start":126,"line_end":126,"column_start":14,"column_end":30},"name":"RigidTransform3D","qualname":"::default::RigidTransform3D","value":"super::RigidTransform3D<T, UnknownUnit, UnknownUnit>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":6607,"byte_end":6612,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":6786,"byte_end":6791,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":7059,"byte_end":7064,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":7603,"byte_end":7608,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":88}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":7759,"byte_end":7764,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":91}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":7868,"byte_end":7873,"line_start":94,"line_end":94,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":8341,"byte_end":8346,"line_start":119,"line_end":119,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":101},{"krate":0,"index":102}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":8526,"byte_end":8531,"line_start":126,"line_end":126,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":8679,"byte_end":8684,"line_start":132,"line_end":132,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":108},{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":8877,"byte_end":8882,"line_start":139,"line_end":139,"column_start":37,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":9030,"byte_end":9035,"line_start":145,"line_end":145,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":9202,"byte_end":9207,"line_start":153,"line_end":153,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":119},{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":9391,"byte_end":9396,"line_start":161,"line_end":161,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":9524,"byte_end":9529,"line_start":167,"line_end":167,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":126},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":9713,"byte_end":9718,"line_start":175,"line_end":175,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":9840,"byte_end":9845,"line_start":181,"line_end":181,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":133},{"krate":0,"index":134}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":9986,"byte_end":9991,"line_start":188,"line_end":188,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":138}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":15642,"byte_end":15647,"line_start":41,"line_end":41,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":15786,"byte_end":15791,"line_start":48,"line_end":48,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":15830,"byte_end":15835,"line_start":50,"line_end":50,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":196}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":15986,"byte_end":15991,"line_start":56,"line_end":56,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":200}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":16131,"byte_end":16136,"line_start":62,"line_end":62,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":16185,"byte_end":16190,"line_start":64,"line_end":64,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":16422,"byte_end":16427,"line_start":73,"line_end":73,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":16678,"byte_end":16683,"line_start":83,"line_end":83,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":215}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":16878,"byte_end":16883,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":17203,"byte_end":17208,"line_start":107,"line_end":107,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":18918,"byte_end":18923,"line_start":155,"line_end":155,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20013,"byte_end":20018,"line_start":197,"line_end":197,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20303,"byte_end":20308,"line_start":211,"line_end":211,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20789,"byte_end":20794,"line_start":239,"line_end":239,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":248}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":21216,"byte_end":21221,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":252},{"krate":0,"index":253}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":22130,"byte_end":22135,"line_start":281,"line_end":281,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":257}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":23143,"byte_end":23148,"line_start":322,"line_end":322,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":23496,"byte_end":23501,"line_start":336,"line_end":336,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":23722,"byte_end":23727,"line_start":346,"line_end":346,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":24140,"byte_end":24145,"line_start":365,"line_end":365,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":274}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":24446,"byte_end":24451,"line_start":381,"line_end":381,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":279}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":24650,"byte_end":24655,"line_start":392,"line_end":392,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":283}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":24832,"byte_end":24837,"line_start":402,"line_end":402,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":287}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":25055,"byte_end":25060,"line_start":413,"line_end":413,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":291},{"krate":0,"index":292}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":25270,"byte_end":25275,"line_start":424,"line_end":424,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":296},{"krate":0,"index":297}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":25505,"byte_end":25510,"line_start":435,"line_end":435,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":25772,"byte_end":25777,"line_start":446,"line_end":446,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":308},{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26008,"byte_end":26013,"line_start":457,"line_end":457,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":313},{"krate":0,"index":314},{"krate":0,"index":315}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26653,"byte_end":26658,"line_start":483,"line_end":483,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":320},{"krate":0,"index":322}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":27830,"byte_end":27835,"line_start":513,"line_end":513,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":327}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28510,"byte_end":28515,"line_start":532,"line_end":532,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":331},{"krate":0,"index":332}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29212,"byte_end":29217,"line_start":556,"line_end":556,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337},{"krate":0,"index":338},{"krate":0,"index":339},{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30946,"byte_end":30951,"line_start":610,"line_end":610,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":345}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":38549,"byte_end":38566,"line_start":35,"line_end":35,"column_start":27,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":38605,"byte_end":38622,"line_start":37,"line_end":37,"column_start":29,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":39577,"byte_end":39594,"line_start":72,"line_end":72,"column_start":19,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":39642,"byte_end":39659,"line_start":74,"line_end":74,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":39850,"byte_end":39867,"line_start":82,"line_end":82,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":389}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":40067,"byte_end":40084,"line_start":93,"line_end":93,"column_start":12,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":394}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":40340,"byte_end":40357,"line_start":102,"line_end":102,"column_start":57,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":41101,"byte_end":41118,"line_start":128,"line_end":128,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":41296,"byte_end":41313,"line_start":135,"line_end":135,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":41490,"byte_end":41507,"line_start":142,"line_end":142,"column_start":48,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":41681,"byte_end":41698,"line_start":149,"line_end":149,"column_start":41,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":415}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":41864,"byte_end":41881,"line_start":156,"line_end":156,"column_start":39,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":419}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":42160,"byte_end":42177,"line_start":167,"line_end":167,"column_start":43,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":423}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":43724,"byte_end":43725,"line_start":17,"line_end":17,"column_start":36,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":430}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":43865,"byte_end":43866,"line_start":27,"line_end":27,"column_start":34,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":47607,"byte_end":47613,"line_start":42,"line_end":42,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":478}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":47731,"byte_end":47737,"line_start":48,"line_end":48,"column_start":27,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48340,"byte_end":48346,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48514,"byte_end":48520,"line_start":87,"line_end":87,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":492}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":49625,"byte_end":49631,"line_start":125,"line_end":125,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":496},{"krate":0,"index":498}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":50090,"byte_end":50096,"line_start":139,"line_end":139,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":503}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":50237,"byte_end":50243,"line_start":145,"line_end":145,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":507}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":50374,"byte_end":50380,"line_start":151,"line_end":151,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":511}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":50505,"byte_end":50511,"line_start":158,"line_end":158,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":50640,"byte_end":50646,"line_start":166,"line_end":166,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":50847,"byte_end":50853,"line_start":175,"line_end":175,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":50985,"byte_end":50991,"line_start":182,"line_end":182,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":529},{"krate":0,"index":530}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":51200,"byte_end":51206,"line_start":191,"line_end":191,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":534}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":51384,"byte_end":51390,"line_start":198,"line_end":198,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":538},{"krate":0,"index":539}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":51687,"byte_end":51693,"line_start":209,"line_end":209,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":544},{"krate":0,"index":545}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":51915,"byte_end":51921,"line_start":219,"line_end":219,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":52150,"byte_end":52156,"line_start":229,"line_end":229,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":554}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":52305,"byte_end":52311,"line_start":237,"line_end":237,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":558},{"krate":0,"index":559}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":52540,"byte_end":52546,"line_start":247,"line_end":247,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":563}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":52724,"byte_end":52730,"line_start":255,"line_end":255,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":568},{"krate":0,"index":569}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":52982,"byte_end":52988,"line_start":265,"line_end":265,"column_start":52,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":574},{"krate":0,"index":575}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":53200,"byte_end":53206,"line_start":275,"line_end":275,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":579},{"krate":0,"index":580}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":53380,"byte_end":53386,"line_start":285,"line_end":285,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":584}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":53511,"byte_end":53517,"line_start":291,"line_end":291,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":588}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":53656,"byte_end":53662,"line_start":297,"line_end":297,"column_start":23,"column_end":29},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":53697,"byte_end":53703,"line_start":299,"line_end":299,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":53822,"byte_end":53828,"line_start":305,"line_end":305,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":599}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":53958,"byte_end":53964,"line_start":312,"line_end":312,"column_start":41,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":62269,"byte_end":62276,"line_start":38,"line_end":38,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":62315,"byte_end":62322,"line_start":40,"line_end":40,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":63145,"byte_end":63152,"line_start":73,"line_end":73,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":63200,"byte_end":63207,"line_start":75,"line_end":75,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":63356,"byte_end":63363,"line_start":83,"line_end":83,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":663}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":63578,"byte_end":63585,"line_start":94,"line_end":94,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":63808,"byte_end":63815,"line_start":103,"line_end":103,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":64125,"byte_end":64132,"line_start":113,"line_end":113,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":64250,"byte_end":64257,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":682},{"krate":0,"index":683},{"krate":0,"index":684}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65154,"byte_end":65161,"line_start":162,"line_end":162,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":694},{"krate":0,"index":696},{"krate":0,"index":697},{"krate":0,"index":698},{"krate":0,"index":699},{"krate":0,"index":700},{"krate":0,"index":701}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":70270,"byte_end":70277,"line_start":365,"line_end":365,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":705},{"krate":0,"index":706},{"krate":0,"index":707}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":70879,"byte_end":70886,"line_start":389,"line_end":389,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":711},{"krate":0,"index":713},{"krate":0,"index":715},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73728,"byte_end":73735,"line_start":467,"line_end":467,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":724}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73911,"byte_end":73918,"line_start":475,"line_end":475,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":728},{"krate":0,"index":729}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":74099,"byte_end":74106,"line_start":485,"line_end":485,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":733},{"krate":0,"index":734}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":74346,"byte_end":74353,"line_start":494,"line_end":494,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":74540,"byte_end":74547,"line_start":502,"line_end":502,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":742},{"krate":0,"index":743}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":74798,"byte_end":74805,"line_start":511,"line_end":511,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":74946,"byte_end":74953,"line_start":519,"line_end":519,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":751},{"krate":0,"index":752}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":75163,"byte_end":75170,"line_start":528,"line_end":528,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":756},{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":75410,"byte_end":75417,"line_start":537,"line_end":537,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":75604,"byte_end":75611,"line_start":545,"line_end":545,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":75862,"byte_end":75869,"line_start":554,"line_end":554,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":76021,"byte_end":76028,"line_start":562,"line_end":562,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":76257,"byte_end":76264,"line_start":571,"line_end":571,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":779}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":76422,"byte_end":76429,"line_start":578,"line_end":578,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":784},{"krate":0,"index":785}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":76684,"byte_end":76691,"line_start":587,"line_end":587,"column_start":61,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":789}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":76875,"byte_end":76882,"line_start":596,"line_end":596,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":793},{"krate":0,"index":794}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":77111,"byte_end":77118,"line_start":605,"line_end":605,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":798}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":77276,"byte_end":77283,"line_start":612,"line_end":612,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":803},{"krate":0,"index":804}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":77538,"byte_end":77545,"line_start":621,"line_end":621,"column_start":61,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":77720,"byte_end":77727,"line_start":630,"line_end":630,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":812}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":77834,"byte_end":77841,"line_start":637,"line_end":637,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":816}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":77998,"byte_end":78005,"line_start":645,"line_end":645,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":78160,"byte_end":78167,"line_start":653,"line_end":653,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":824}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":78350,"byte_end":78357,"line_start":661,"line_end":661,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":828},{"krate":0,"index":829}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":78683,"byte_end":78690,"line_start":674,"line_end":674,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":834}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":78791,"byte_end":78798,"line_start":680,"line_end":680,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":840}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":78903,"byte_end":78910,"line_start":686,"line_end":686,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":845}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":79011,"byte_end":79018,"line_start":692,"line_end":692,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":79341,"byte_end":79348,"line_start":712,"line_end":712,"column_start":27,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":79387,"byte_end":79394,"line_start":714,"line_end":714,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":863}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":80263,"byte_end":80270,"line_start":748,"line_end":748,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":80318,"byte_end":80325,"line_start":750,"line_end":750,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":80495,"byte_end":80502,"line_start":758,"line_end":758,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":874}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":80705,"byte_end":80712,"line_start":768,"line_end":768,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":879}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":80963,"byte_end":80970,"line_start":778,"line_end":778,"column_start":43,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":883}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":81297,"byte_end":81304,"line_start":790,"line_end":790,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":887}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":81442,"byte_end":81449,"line_start":797,"line_end":797,"column_start":12,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":891},{"krate":0,"index":892},{"krate":0,"index":893},{"krate":0,"index":894},{"krate":0,"index":895}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82408,"byte_end":82415,"line_start":840,"line_end":840,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":905},{"krate":0,"index":907},{"krate":0,"index":908},{"krate":0,"index":909},{"krate":0,"index":910},{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88021,"byte_end":88028,"line_start":1055,"line_end":1055,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88768,"byte_end":88775,"line_start":1087,"line_end":1087,"column_start":28,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":926},{"krate":0,"index":928},{"krate":0,"index":930},{"krate":0,"index":931},{"krate":0,"index":932},{"krate":0,"index":933},{"krate":0,"index":934},{"krate":0,"index":935}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91703,"byte_end":91710,"line_start":1169,"line_end":1169,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":939}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91908,"byte_end":91915,"line_start":1177,"line_end":1177,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":943},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":92105,"byte_end":92112,"line_start":1187,"line_end":1187,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":948},{"krate":0,"index":949}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":92374,"byte_end":92381,"line_start":1196,"line_end":1196,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":953}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":92599,"byte_end":92606,"line_start":1205,"line_end":1205,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":957},{"krate":0,"index":958}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":92875,"byte_end":92882,"line_start":1214,"line_end":1214,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":962}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":93023,"byte_end":93030,"line_start":1222,"line_end":1222,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":966},{"krate":0,"index":967}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":93258,"byte_end":93265,"line_start":1231,"line_end":1231,"column_start":39,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":971},{"krate":0,"index":972}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":93527,"byte_end":93534,"line_start":1240,"line_end":1240,"column_start":51,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":976}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":93752,"byte_end":93759,"line_start":1249,"line_end":1249,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":980},{"krate":0,"index":981}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":94028,"byte_end":94035,"line_start":1258,"line_end":1258,"column_start":69,"column_end":76},"value":"","parent":null,"children":[{"krate":0,"index":985}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":94187,"byte_end":94194,"line_start":1266,"line_end":1266,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":989},{"krate":0,"index":990}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":94485,"byte_end":94492,"line_start":1279,"line_end":1279,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":994}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":94711,"byte_end":94718,"line_start":1288,"line_end":1288,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":95045,"byte_end":95052,"line_start":1301,"line_end":1301,"column_start":61,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":95200,"byte_end":95207,"line_start":1309,"line_end":1309,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1008},{"krate":0,"index":1009}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":95498,"byte_end":95505,"line_start":1322,"line_end":1322,"column_start":48,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":95724,"byte_end":95731,"line_start":1331,"line_end":1331,"column_start":56,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":1018},{"krate":0,"index":1019}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":96058,"byte_end":96065,"line_start":1344,"line_end":1344,"column_start":61,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1023}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":96204,"byte_end":96211,"line_start":1352,"line_end":1352,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1027}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":96318,"byte_end":96325,"line_start":1359,"line_end":1359,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1031}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":96482,"byte_end":96489,"line_start":1367,"line_end":1367,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":96644,"byte_end":96651,"line_start":1375,"line_end":1375,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1039}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":96834,"byte_end":96841,"line_start":1383,"line_end":1383,"column_start":53,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1043},{"krate":0,"index":1044}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":97289,"byte_end":97296,"line_start":1401,"line_end":1401,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1049}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":97405,"byte_end":97412,"line_start":1407,"line_end":1407,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1055}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":97526,"byte_end":97533,"line_start":1413,"line_end":1413,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1060}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":97648,"byte_end":97655,"line_start":1419,"line_end":1419,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1064}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":111675,"byte_end":111679,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":111822,"byte_end":111826,"line_start":48,"line_end":48,"column_start":27,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":111865,"byte_end":111869,"line_start":50,"line_end":50,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":112023,"byte_end":112027,"line_start":56,"line_end":56,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":112175,"byte_end":112179,"line_start":62,"line_end":62,"column_start":23,"column_end":27},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":112228,"byte_end":112232,"line_start":64,"line_end":64,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":112515,"byte_end":112519,"line_start":74,"line_end":74,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":112796,"byte_end":112800,"line_start":84,"line_end":84,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":112914,"byte_end":112918,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1136}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":113119,"byte_end":113123,"line_start":101,"line_end":101,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1140},{"krate":0,"index":1141}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":113523,"byte_end":113527,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1149},{"krate":0,"index":1150},{"krate":0,"index":1151},{"krate":0,"index":1152},{"krate":0,"index":1153},{"krate":0,"index":1154},{"krate":0,"index":1155},{"krate":0,"index":1156},{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":116509,"byte_end":116513,"line_start":239,"line_end":239,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":119897,"byte_end":119901,"line_start":335,"line_end":335,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1172}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":120269,"byte_end":120273,"line_start":349,"line_end":349,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1176}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":120496,"byte_end":120500,"line_start":359,"line_end":359,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1180}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":121231,"byte_end":121235,"line_start":387,"line_end":387,"column_start":12,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1184}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":121573,"byte_end":121577,"line_start":400,"line_end":400,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1189}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":121693,"byte_end":121697,"line_start":407,"line_end":407,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1193}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":121934,"byte_end":121938,"line_start":414,"line_end":414,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1197}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":122098,"byte_end":122102,"line_start":422,"line_end":422,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":122349,"byte_end":122353,"line_start":433,"line_end":433,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1206}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":122553,"byte_end":122557,"line_start":441,"line_end":441,"column_start":50,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1210},{"krate":0,"index":1211}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":122777,"byte_end":122781,"line_start":449,"line_end":449,"column_start":70,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123031,"byte_end":123035,"line_start":457,"line_end":457,"column_start":70,"column_end":74},"value":"","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1223}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123233,"byte_end":123237,"line_start":465,"line_end":465,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1227},{"krate":0,"index":1228},{"krate":0,"index":1229}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123878,"byte_end":123882,"line_start":488,"line_end":488,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1234},{"krate":0,"index":1236}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":125109,"byte_end":125113,"line_start":515,"line_end":515,"column_start":76,"column_end":80},"value":"","parent":null,"children":[{"krate":0,"index":1241},{"krate":0,"index":1242},{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":126679,"byte_end":126683,"line_start":552,"line_end":552,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249},{"krate":0,"index":1250},{"krate":0,"index":1251},{"krate":0,"index":1252},{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":128833,"byte_end":128837,"line_start":616,"line_end":616,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1257}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":138996,"byte_end":139012,"line_start":26,"line_end":26,"column_start":19,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1274}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":139325,"byte_end":139341,"line_start":37,"line_end":37,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1279}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":139623,"byte_end":139639,"line_start":46,"line_end":46,"column_start":40,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1286},{"krate":0,"index":1287},{"krate":0,"index":1288},{"krate":0,"index":1289},{"krate":0,"index":1290},{"krate":0,"index":1291},{"krate":0,"index":1293},{"krate":0,"index":1295},{"krate":0,"index":1296},{"krate":0,"index":1297},{"krate":0,"index":1298}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":144541,"byte_end":144557,"line_start":204,"line_end":204,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1303}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":144737,"byte_end":144753,"line_start":212,"line_end":212,"column_start":9,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1308}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":148647,"byte_end":148657,"line_start":33,"line_end":33,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":148710,"byte_end":148720,"line_start":35,"line_end":35,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1357}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":148902,"byte_end":148912,"line_start":44,"line_end":44,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":148974,"byte_end":148984,"line_start":46,"line_end":46,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":149134,"byte_end":149144,"line_start":54,"line_end":54,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1371}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":149290,"byte_end":149300,"line_start":62,"line_end":62,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1377},{"krate":0,"index":1378},{"krate":0,"index":1379}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":149798,"byte_end":149808,"line_start":86,"line_end":86,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1384}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":150029,"byte_end":150039,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1391}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":150246,"byte_end":150256,"line_start":106,"line_end":106,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1398},{"krate":0,"index":1400},{"krate":0,"index":1402},{"krate":0,"index":1403},{"krate":0,"index":1404},{"krate":0,"index":1405}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":152623,"byte_end":152633,"line_start":184,"line_end":184,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1410}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":154141,"byte_end":154151,"line_start":228,"line_end":228,"column_start":34,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":154204,"byte_end":154214,"line_start":230,"line_end":230,"column_start":36,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1428}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":154481,"byte_end":154491,"line_start":242,"line_end":242,"column_start":26,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":154553,"byte_end":154563,"line_start":244,"line_end":244,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1437}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":154804,"byte_end":154814,"line_start":255,"line_end":255,"column_start":28,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1442}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155028,"byte_end":155038,"line_start":266,"line_end":266,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1448}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155649,"byte_end":155659,"line_start":286,"line_end":286,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1453},{"krate":0,"index":1454}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":156140,"byte_end":156150,"line_start":308,"line_end":308,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1482},{"krate":0,"index":1484},{"krate":0,"index":1485},{"krate":0,"index":1486},{"krate":0,"index":1487},{"krate":0,"index":1488}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":166764,"byte_end":166774,"line_start":660,"line_end":660,"column_start":46,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1493}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":167044,"byte_end":167054,"line_start":670,"line_end":670,"column_start":50,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1498}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":167301,"byte_end":167311,"line_start":680,"line_end":680,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1503},{"krate":0,"index":1504}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177882,"byte_end":177887,"line_start":47,"line_end":47,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1536},{"krate":0,"index":1537},{"krate":0,"index":1538},{"krate":0,"index":1539},{"krate":0,"index":1540},{"krate":0,"index":1541},{"krate":0,"index":1542}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181094,"byte_end":181099,"line_start":169,"line_end":169,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1547},{"krate":0,"index":1548}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181696,"byte_end":181701,"line_start":197,"line_end":197,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1553},{"krate":0,"index":1555}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183518,"byte_end":183523,"line_start":254,"line_end":254,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1560}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183771,"byte_end":183776,"line_start":262,"line_end":262,"column_start":47,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1566},{"krate":0,"index":1567}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183999,"byte_end":184004,"line_start":272,"line_end":272,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1572},{"krate":0,"index":1573}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":184239,"byte_end":184244,"line_start":282,"line_end":282,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1578},{"krate":0,"index":1579}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":184603,"byte_end":184608,"line_start":295,"line_end":295,"column_start":44,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1584}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":184743,"byte_end":184748,"line_start":301,"line_end":301,"column_start":30,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":184811,"byte_end":184816,"line_start":303,"line_end":303,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1593}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":184971,"byte_end":184976,"line_start":309,"line_end":309,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1598}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":185111,"byte_end":185116,"line_start":315,"line_end":315,"column_start":36,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1603}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":185249,"byte_end":185254,"line_start":321,"line_end":321,"column_start":34,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":185317,"byte_end":185322,"line_start":323,"line_end":323,"column_start":46,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":1612}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":185477,"byte_end":185482,"line_start":329,"line_end":329,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":185627,"byte_end":185632,"line_start":335,"line_end":335,"column_start":40,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1622}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":185749,"byte_end":185754,"line_start":341,"line_end":341,"column_start":34,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1627}],"docs":"","sig":null,"attributes":[]},{"id":277,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":185884,"byte_end":185889,"line_start":347,"line_end":347,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1633}],"docs":"","sig":null,"attributes":[]},{"id":278,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":188348,"byte_end":188361,"line_start":38,"line_end":38,"column_start":27,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":279,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":188400,"byte_end":188413,"line_start":40,"line_end":40,"column_start":29,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1662}],"docs":"","sig":null,"attributes":[]},{"id":280,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":188697,"byte_end":188710,"line_start":52,"line_end":52,"column_start":19,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":188758,"byte_end":188771,"line_start":54,"line_end":54,"column_start":26,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":189026,"byte_end":189039,"line_start":65,"line_end":65,"column_start":21,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1673}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":189280,"byte_end":189293,"line_start":76,"line_end":76,"column_start":39,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1678}],"docs":"","sig":null,"attributes":[]},{"id":284,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":189537,"byte_end":189550,"line_start":86,"line_end":86,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1682}],"docs":"","sig":null,"attributes":[]},{"id":285,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":189826,"byte_end":189839,"line_start":98,"line_end":98,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1686},{"krate":0,"index":1687},{"krate":0,"index":1688},{"krate":0,"index":1689}],"docs":"","sig":null,"attributes":[]},{"id":286,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":191788,"byte_end":191801,"line_start":163,"line_end":163,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1693},{"krate":0,"index":1694}],"docs":"","sig":null,"attributes":[]},{"id":287,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":192199,"byte_end":192212,"line_start":175,"line_end":175,"column_start":12,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1698},{"krate":0,"index":1699}],"docs":"","sig":null,"attributes":[]},{"id":288,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":192428,"byte_end":192441,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1703},{"krate":0,"index":1704}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":192759,"byte_end":192772,"line_start":203,"line_end":203,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1708}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":194754,"byte_end":194760,"line_start":40,"line_end":40,"column_start":27,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":194799,"byte_end":194805,"line_start":42,"line_end":42,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1757}],"docs":"","sig":null,"attributes":[]},{"id":292,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":195787,"byte_end":195793,"line_start":77,"line_end":77,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":293,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":195841,"byte_end":195847,"line_start":79,"line_end":79,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":294,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":196014,"byte_end":196020,"line_start":87,"line_end":87,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1768}],"docs":"","sig":null,"attributes":[]},{"id":295,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":196208,"byte_end":196214,"line_start":96,"line_end":96,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1773}],"docs":"","sig":null,"attributes":[]},{"id":296,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":196441,"byte_end":196447,"line_start":104,"line_end":104,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1777}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":196718,"byte_end":196724,"line_start":114,"line_end":114,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1781}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":196841,"byte_end":196847,"line_start":121,"line_end":121,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1785},{"krate":0,"index":1786},{"krate":0,"index":1787},{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197718,"byte_end":197724,"line_start":155,"line_end":155,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1792},{"krate":0,"index":1794},{"krate":0,"index":1795},{"krate":0,"index":1796},{"krate":0,"index":1797},{"krate":0,"index":1799},{"krate":0,"index":1800},{"krate":0,"index":1801},{"krate":0,"index":1802},{"krate":0,"index":1803}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":201104,"byte_end":201110,"line_start":278,"line_end":278,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1807},{"krate":0,"index":1809},{"krate":0,"index":1811},{"krate":0,"index":1812},{"krate":0,"index":1813},{"krate":0,"index":1814},{"krate":0,"index":1815},{"krate":0,"index":1816},{"krate":0,"index":1817}],"docs":"","sig":null,"attributes":[]},{"id":301,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204287,"byte_end":204293,"line_start":366,"line_end":366,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1821},{"krate":0,"index":1822}],"docs":"","sig":null,"attributes":[]},{"id":302,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204888,"byte_end":204894,"line_start":382,"line_end":382,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1826},{"krate":0,"index":1827},{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831}],"docs":"","sig":null,"attributes":[]},{"id":303,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":206540,"byte_end":206546,"line_start":439,"line_end":439,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1835},{"krate":0,"index":1836}],"docs":"","sig":null,"attributes":[]},{"id":304,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":207108,"byte_end":207114,"line_start":458,"line_end":458,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1840}],"docs":"","sig":null,"attributes":[]},{"id":305,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":207273,"byte_end":207279,"line_start":466,"line_end":466,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1844}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":207436,"byte_end":207442,"line_start":474,"line_end":474,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1848}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":207601,"byte_end":207607,"line_start":482,"line_end":482,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":207736,"byte_end":207742,"line_start":490,"line_end":490,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1856},{"krate":0,"index":1857}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":207922,"byte_end":207928,"line_start":500,"line_end":500,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1861},{"krate":0,"index":1862}],"docs":"","sig":null,"attributes":[]},{"id":310,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":208159,"byte_end":208165,"line_start":509,"line_end":509,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1866}],"docs":"","sig":null,"attributes":[]},{"id":311,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":208339,"byte_end":208345,"line_start":518,"line_end":518,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1870},{"krate":0,"index":1871}],"docs":"","sig":null,"attributes":[]},{"id":312,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":208576,"byte_end":208582,"line_start":527,"line_end":527,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1875}],"docs":"","sig":null,"attributes":[]},{"id":313,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":208767,"byte_end":208773,"line_start":536,"line_end":536,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":1880}],"docs":"","sig":null,"attributes":[]},{"id":314,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":209007,"byte_end":209013,"line_start":545,"line_end":545,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1884}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":209209,"byte_end":209215,"line_start":553,"line_end":553,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1889},{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":209483,"byte_end":209489,"line_start":562,"line_end":562,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1894}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":209637,"byte_end":209643,"line_start":570,"line_end":570,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899}],"docs":"","sig":null,"attributes":[]},{"id":318,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":209877,"byte_end":209883,"line_start":579,"line_end":579,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1903}],"docs":"","sig":null,"attributes":[]},{"id":319,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":210079,"byte_end":210085,"line_start":587,"line_end":587,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1908},{"krate":0,"index":1909}],"docs":"","sig":null,"attributes":[]},{"id":320,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":210353,"byte_end":210359,"line_start":596,"line_end":596,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":1913}],"docs":"","sig":null,"attributes":[]},{"id":321,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":211118,"byte_end":211124,"line_start":632,"line_end":632,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":322,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":211249,"byte_end":211255,"line_start":639,"line_end":639,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1925}],"docs":"","sig":null,"attributes":[]},{"id":323,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":211379,"byte_end":211385,"line_start":646,"line_end":646,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1931}],"docs":"","sig":null,"attributes":[]},{"id":324,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":211503,"byte_end":211509,"line_start":653,"line_end":653,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1936}],"docs":"","sig":null,"attributes":[]},{"id":325,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":211633,"byte_end":211639,"line_start":660,"line_end":660,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1940}],"docs":"","sig":null,"attributes":[]},{"id":326,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":217512,"byte_end":217518,"line_start":878,"line_end":878,"column_start":27,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":327,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":217557,"byte_end":217563,"line_start":880,"line_end":880,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1954}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":218493,"byte_end":218499,"line_start":914,"line_end":914,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":218547,"byte_end":218553,"line_start":916,"line_end":916,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1961}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":218749,"byte_end":218755,"line_start":924,"line_end":924,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1965}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":218971,"byte_end":218977,"line_start":934,"line_end":934,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1970}],"docs":"","sig":null,"attributes":[]},{"id":332,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":219271,"byte_end":219277,"line_start":944,"line_end":944,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1974}],"docs":"","sig":null,"attributes":[]},{"id":333,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":219617,"byte_end":219623,"line_start":956,"line_end":956,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1978}],"docs":"","sig":null,"attributes":[]},{"id":334,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":219760,"byte_end":219766,"line_start":963,"line_end":963,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":1985}],"docs":"","sig":null,"attributes":[]},{"id":335,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":220706,"byte_end":220712,"line_start":998,"line_end":998,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1989},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2000}],"docs":"","sig":null,"attributes":[]},{"id":336,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":224312,"byte_end":224318,"line_start":1121,"line_end":1121,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2004},{"krate":0,"index":2006},{"krate":0,"index":2008},{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227179,"byte_end":227185,"line_start":1199,"line_end":1199,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2017},{"krate":0,"index":2018}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227825,"byte_end":227831,"line_start":1215,"line_end":1215,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2022},{"krate":0,"index":2023},{"krate":0,"index":2024},{"krate":0,"index":2025},{"krate":0,"index":2026},{"krate":0,"index":2027}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":229667,"byte_end":229673,"line_start":1276,"line_end":1276,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2031},{"krate":0,"index":2032}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":230319,"byte_end":230325,"line_start":1297,"line_end":1297,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2036}],"docs":"","sig":null,"attributes":[]},{"id":341,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":230484,"byte_end":230490,"line_start":1305,"line_end":1305,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2040}],"docs":"","sig":null,"attributes":[]},{"id":342,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":230647,"byte_end":230653,"line_start":1313,"line_end":1313,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2044}],"docs":"","sig":null,"attributes":[]},{"id":343,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":230812,"byte_end":230818,"line_start":1321,"line_end":1321,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2048}],"docs":"","sig":null,"attributes":[]},{"id":344,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":230961,"byte_end":230967,"line_start":1329,"line_end":1329,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2052},{"krate":0,"index":2053}],"docs":"","sig":null,"attributes":[]},{"id":345,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":231160,"byte_end":231166,"line_start":1339,"line_end":1339,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2057},{"krate":0,"index":2058}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":231423,"byte_end":231429,"line_start":1348,"line_end":1348,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2062}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":231639,"byte_end":231645,"line_start":1358,"line_end":1358,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2066},{"krate":0,"index":2067}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":231902,"byte_end":231908,"line_start":1367,"line_end":1367,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":232129,"byte_end":232135,"line_start":1377,"line_end":1377,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2075},{"krate":0,"index":2076}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":232445,"byte_end":232451,"line_start":1390,"line_end":1390,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2080}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":232685,"byte_end":232691,"line_start":1399,"line_end":1399,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2085},{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":352,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":233037,"byte_end":233043,"line_start":1412,"line_end":1412,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2090}],"docs":"","sig":null,"attributes":[]},{"id":353,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":233191,"byte_end":233197,"line_start":1420,"line_end":1420,"column_start":36,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2094},{"krate":0,"index":2095}],"docs":"","sig":null,"attributes":[]},{"id":354,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":233507,"byte_end":233513,"line_start":1433,"line_end":1433,"column_start":48,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2099}],"docs":"","sig":null,"attributes":[]},{"id":355,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":233747,"byte_end":233753,"line_start":1442,"line_end":1442,"column_start":56,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2104},{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":356,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":234099,"byte_end":234105,"line_start":1455,"line_end":1455,"column_start":61,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2109}],"docs":"","sig":null,"attributes":[]},{"id":357,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":234683,"byte_end":234689,"line_start":1482,"line_end":1482,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2113}],"docs":"","sig":null,"attributes":[]},{"id":358,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":234819,"byte_end":234825,"line_start":1489,"line_end":1489,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2118}],"docs":"","sig":null,"attributes":[]},{"id":359,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":234961,"byte_end":234967,"line_start":1496,"line_end":1496,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2124}],"docs":"","sig":null,"attributes":[]},{"id":360,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":235094,"byte_end":235100,"line_start":1503,"line_end":1503,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2129}],"docs":"","sig":null,"attributes":[]},{"id":361,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":235242,"byte_end":235248,"line_start":1510,"line_end":1510,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2133}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242929,"byte_end":242940,"line_start":55,"line_end":55,"column_start":34,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242993,"byte_end":243004,"line_start":57,"line_end":57,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2187}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":244279,"byte_end":244290,"line_start":107,"line_end":107,"column_start":26,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":244352,"byte_end":244363,"line_start":109,"line_end":109,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2196}],"docs":"","sig":null,"attributes":[]},{"id":366,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":244694,"byte_end":244705,"line_start":122,"line_end":122,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2201}],"docs":"","sig":null,"attributes":[]},{"id":367,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":244979,"byte_end":244990,"line_start":135,"line_end":135,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":2209},{"krate":0,"index":2210}],"docs":"","sig":null,"attributes":[]},{"id":368,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":247040,"byte_end":247051,"line_start":190,"line_end":190,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2215},{"krate":0,"index":2217},{"krate":0,"index":2219},{"krate":0,"index":2222},{"krate":0,"index":2224},{"krate":0,"index":2227},{"krate":0,"index":2228}],"docs":"","sig":null,"attributes":[]},{"id":369,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":250382,"byte_end":250393,"line_start":285,"line_end":285,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2233},{"krate":0,"index":2235}],"docs":"","sig":null,"attributes":[]},{"id":370,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":251318,"byte_end":251329,"line_start":311,"line_end":311,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2241},{"krate":0,"index":2242}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":251892,"byte_end":251903,"line_start":332,"line_end":332,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2247},{"krate":0,"index":2249},{"krate":0,"index":2251},{"krate":0,"index":2252},{"krate":0,"index":2253},{"krate":0,"index":2254},{"krate":0,"index":2255},{"krate":0,"index":2256},{"krate":0,"index":2257},{"krate":0,"index":2258},{"krate":0,"index":2259},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2262},{"krate":0,"index":2263},{"krate":0,"index":2265}],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":257680,"byte_end":257691,"line_start":512,"line_end":512,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2271},{"krate":0,"index":2272},{"krate":0,"index":2273}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":258746,"byte_end":258757,"line_start":549,"line_end":549,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2278}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":259230,"byte_end":259241,"line_start":566,"line_end":566,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2283}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":259408,"byte_end":259419,"line_start":574,"line_end":574,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2288},{"krate":0,"index":2289}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":260005,"byte_end":260016,"line_start":587,"line_end":587,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2294}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":268223,"byte_end":268234,"line_start":58,"line_end":58,"column_start":34,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":378,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":268287,"byte_end":268298,"line_start":60,"line_end":60,"column_start":36,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2360}],"docs":"","sig":null,"attributes":[]},{"id":379,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":270169,"byte_end":270180,"line_start":123,"line_end":123,"column_start":26,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":380,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":270242,"byte_end":270253,"line_start":125,"line_end":125,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2369}],"docs":"","sig":null,"attributes":[]},{"id":381,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":270954,"byte_end":270965,"line_start":148,"line_end":148,"column_start":28,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2374}],"docs":"","sig":null,"attributes":[]},{"id":382,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":271499,"byte_end":271510,"line_start":171,"line_end":171,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2380},{"krate":0,"index":2381}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":273480,"byte_end":273491,"line_start":223,"line_end":223,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2386},{"krate":0,"index":2387}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":274146,"byte_end":274157,"line_start":247,"line_end":247,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2392},{"krate":0,"index":2393},{"krate":0,"index":2394},{"krate":0,"index":2395},{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2401},{"krate":0,"index":2403},{"krate":0,"index":2404},{"krate":0,"index":2405},{"krate":0,"index":2407},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":2415},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2418},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2426},{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":2429},{"krate":0,"index":2430},{"krate":0,"index":2431},{"krate":0,"index":2432}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":297774,"byte_end":297785,"line_start":827,"line_end":827,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2437},{"krate":0,"index":2439},{"krate":0,"index":2441},{"krate":0,"index":2444},{"krate":0,"index":2447},{"krate":0,"index":2449}],"docs":"","sig":null,"attributes":[]},{"id":386,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":301962,"byte_end":301973,"line_start":926,"line_end":926,"column_start":35,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2456},{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":387,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":303494,"byte_end":303505,"line_start":957,"line_end":957,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2464},{"krate":0,"index":2465}],"docs":"","sig":null,"attributes":[]},{"id":388,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":304439,"byte_end":304450,"line_start":973,"line_end":973,"column_start":32,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2470}],"docs":"","sig":null,"attributes":[]},{"id":389,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":304603,"byte_end":304614,"line_start":981,"line_end":981,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2475}],"docs":"","sig":null,"attributes":[]},{"id":390,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":318497,"byte_end":318510,"line_start":53,"line_end":53,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":318563,"byte_end":318576,"line_start":55,"line_end":55,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2522}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":318784,"byte_end":318797,"line_start":65,"line_end":65,"column_start":26,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":318859,"byte_end":318872,"line_start":67,"line_end":67,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2531}],"docs":"","sig":null,"attributes":[]},{"id":394,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319035,"byte_end":319048,"line_start":75,"line_end":75,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2536}],"docs":"","sig":null,"attributes":[]},{"id":395,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319214,"byte_end":319227,"line_start":84,"line_end":84,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2542},{"krate":0,"index":2543}],"docs":"","sig":null,"attributes":[]},{"id":396,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319590,"byte_end":319603,"line_start":101,"line_end":101,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2548},{"krate":0,"index":2549},{"krate":0,"index":2551},{"krate":0,"index":2552},{"krate":0,"index":2553}],"docs":"","sig":null,"attributes":[]},{"id":397,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":320559,"byte_end":320572,"line_start":144,"line_end":144,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2558}],"docs":"","sig":null,"attributes":[]},{"id":398,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":320728,"byte_end":320741,"line_start":154,"line_end":154,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2563}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":320933,"byte_end":320946,"line_start":165,"line_end":165,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2568},{"krate":0,"index":2569}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":321468,"byte_end":321481,"line_start":185,"line_end":185,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2574}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":321765,"byte_end":321778,"line_start":197,"line_end":197,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2580},{"krate":0,"index":2581}],"docs":"","sig":null,"attributes":[]},{"id":402,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":322139,"byte_end":322152,"line_start":212,"line_end":212,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2587},{"krate":0,"index":2588}],"docs":"","sig":null,"attributes":[]},{"id":403,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":322460,"byte_end":322473,"line_start":225,"line_end":225,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2593}],"docs":"","sig":null,"attributes":[]},{"id":404,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":322937,"byte_end":322950,"line_start":244,"line_end":244,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2598}],"docs":"","sig":null,"attributes":[]},{"id":405,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":323100,"byte_end":323113,"line_start":251,"line_end":251,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2603}],"docs":"","sig":null,"attributes":[]},{"id":406,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":323260,"byte_end":323273,"line_start":258,"line_end":258,"column_start":54,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2608}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":323605,"byte_end":323618,"line_start":275,"line_end":275,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2613}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":323758,"byte_end":323771,"line_start":283,"line_end":283,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2618}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":323964,"byte_end":323977,"line_start":289,"line_end":289,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2623}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":324503,"byte_end":324516,"line_start":309,"line_end":309,"column_start":34,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":411,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":324569,"byte_end":324582,"line_start":311,"line_end":311,"column_start":36,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2640}],"docs":"","sig":null,"attributes":[]},{"id":412,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":325517,"byte_end":325530,"line_start":345,"line_end":345,"column_start":26,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":413,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":325592,"byte_end":325605,"line_start":347,"line_end":347,"column_start":33,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":2649}],"docs":"","sig":null,"attributes":[]},{"id":414,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":325789,"byte_end":325802,"line_start":355,"line_end":355,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2654}],"docs":"","sig":null,"attributes":[]},{"id":415,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":325992,"byte_end":326005,"line_start":365,"line_end":365,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2660},{"krate":0,"index":2661}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326388,"byte_end":326401,"line_start":383,"line_end":383,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2666},{"krate":0,"index":2667},{"krate":0,"index":2669},{"krate":0,"index":2670},{"krate":0,"index":2671}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":327432,"byte_end":327445,"line_start":428,"line_end":428,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":327612,"byte_end":327625,"line_start":438,"line_end":438,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2681}],"docs":"","sig":null,"attributes":[]},{"id":419,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":327833,"byte_end":327846,"line_start":449,"line_end":449,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2688}],"docs":"","sig":null,"attributes":[]},{"id":420,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":328575,"byte_end":328588,"line_start":475,"line_end":475,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2693}],"docs":"","sig":null,"attributes":[]},{"id":421,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":328881,"byte_end":328894,"line_start":487,"line_end":487,"column_start":5,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":2699},{"krate":0,"index":2700}],"docs":"","sig":null,"attributes":[]},{"id":422,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":329285,"byte_end":329298,"line_start":503,"line_end":503,"column_start":9,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2706},{"krate":0,"index":2707}],"docs":"","sig":null,"attributes":[]},{"id":423,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":329636,"byte_end":329649,"line_start":517,"line_end":517,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2712}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":330129,"byte_end":330142,"line_start":536,"line_end":536,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2717}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":330297,"byte_end":330310,"line_start":543,"line_end":543,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2722}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":330465,"byte_end":330478,"line_start":550,"line_end":550,"column_start":54,"column_end":67},"value":"","parent":null,"children":[{"krate":0,"index":2727}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":330818,"byte_end":330831,"line_start":567,"line_end":567,"column_start":32,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2732}],"docs":"","sig":null,"attributes":[]},{"id":428,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":330971,"byte_end":330984,"line_start":575,"line_end":575,"column_start":46,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2737}],"docs":"","sig":null,"attributes":[]},{"id":429,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":331190,"byte_end":331203,"line_start":581,"line_end":581,"column_start":50,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2742}],"docs":"","sig":null,"attributes":[]},{"id":430,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":336401,"byte_end":336409,"line_start":46,"line_end":46,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":431,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":336448,"byte_end":336456,"line_start":48,"line_end":48,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2808}],"docs":"","sig":null,"attributes":[]},{"id":432,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":337287,"byte_end":337295,"line_start":81,"line_end":81,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":337342,"byte_end":337350,"line_start":83,"line_end":83,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2815}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":337482,"byte_end":337490,"line_start":89,"line_end":89,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2819}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":337639,"byte_end":337647,"line_start":96,"line_end":96,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2824}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":337844,"byte_end":337852,"line_start":104,"line_end":104,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2828}],"docs":"","sig":null,"attributes":[]},{"id":437,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":338075,"byte_end":338083,"line_start":113,"line_end":113,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2832}],"docs":"","sig":null,"attributes":[]},{"id":438,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":338363,"byte_end":338371,"line_start":125,"line_end":125,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2836}],"docs":"","sig":null,"attributes":[]},{"id":439,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":338489,"byte_end":338497,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":2845},{"krate":0,"index":2846}],"docs":"","sig":null,"attributes":[]},{"id":440,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340368,"byte_end":340376,"line_start":209,"line_end":209,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2850},{"krate":0,"index":2851},{"krate":0,"index":2852},{"krate":0,"index":2853},{"krate":0,"index":2854},{"krate":0,"index":2855},{"krate":0,"index":2857},{"krate":0,"index":2859},{"krate":0,"index":2860},{"krate":0,"index":2861},{"krate":0,"index":2862},{"krate":0,"index":2863},{"krate":0,"index":2864}],"docs":"","sig":null,"attributes":[]},{"id":441,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343681,"byte_end":343689,"line_start":343,"line_end":343,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2868}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":344104,"byte_end":344112,"line_start":362,"line_end":362,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2872},{"krate":0,"index":2873},{"krate":0,"index":2874}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":345001,"byte_end":345009,"line_start":395,"line_end":395,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2878},{"krate":0,"index":2879},{"krate":0,"index":2880},{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346592,"byte_end":346600,"line_start":452,"line_end":452,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2887},{"krate":0,"index":2888}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":347718,"byte_end":347726,"line_start":487,"line_end":487,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2892},{"krate":0,"index":2893},{"krate":0,"index":2894},{"krate":0,"index":2895},{"krate":0,"index":2896}],"docs":"","sig":null,"attributes":[]},{"id":446,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":349031,"byte_end":349039,"line_start":531,"line_end":531,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2900},{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":447,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":349591,"byte_end":349599,"line_start":551,"line_end":551,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2905},{"krate":0,"index":2907},{"krate":0,"index":2909},{"krate":0,"index":2910},{"krate":0,"index":2911},{"krate":0,"index":2912},{"krate":0,"index":2913},{"krate":0,"index":2914}],"docs":"","sig":null,"attributes":[]},{"id":448,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":352460,"byte_end":352468,"line_start":630,"line_end":630,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2918},{"krate":0,"index":2919}],"docs":"","sig":null,"attributes":[]},{"id":449,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":352634,"byte_end":352642,"line_start":640,"line_end":640,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2923},{"krate":0,"index":2924}],"docs":"","sig":null,"attributes":[]},{"id":450,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":352875,"byte_end":352883,"line_start":649,"line_end":649,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":353014,"byte_end":353022,"line_start":657,"line_end":657,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2932},{"krate":0,"index":2933}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":353262,"byte_end":353270,"line_start":666,"line_end":666,"column_start":69,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":2937}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":353412,"byte_end":353420,"line_start":674,"line_end":674,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2941},{"krate":0,"index":2942}],"docs":"","sig":null,"attributes":[]},{"id":454,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":353648,"byte_end":353656,"line_start":683,"line_end":683,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2946}],"docs":"","sig":null,"attributes":[]},{"id":455,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":353814,"byte_end":353822,"line_start":690,"line_end":690,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2951},{"krate":0,"index":2952}],"docs":"","sig":null,"attributes":[]},{"id":456,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":354076,"byte_end":354084,"line_start":699,"line_end":699,"column_start":61,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2956}],"docs":"","sig":null,"attributes":[]},{"id":457,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":354268,"byte_end":354276,"line_start":708,"line_end":708,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2960},{"krate":0,"index":2961}],"docs":"","sig":null,"attributes":[]},{"id":458,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":354504,"byte_end":354512,"line_start":717,"line_end":717,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2965}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":354670,"byte_end":354678,"line_start":724,"line_end":724,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":2970},{"krate":0,"index":2971}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":354932,"byte_end":354940,"line_start":733,"line_end":733,"column_start":61,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":2975}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":355117,"byte_end":355125,"line_start":742,"line_end":742,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2979}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":355285,"byte_end":355293,"line_start":750,"line_end":750,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2983}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":355451,"byte_end":355459,"line_start":758,"line_end":758,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2987}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":355646,"byte_end":355654,"line_start":766,"line_end":766,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2991},{"krate":0,"index":2992}],"docs":"","sig":null,"attributes":[]},{"id":465,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":355978,"byte_end":355986,"line_start":779,"line_end":779,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2997}],"docs":"","sig":null,"attributes":[]},{"id":466,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356087,"byte_end":356095,"line_start":785,"line_end":785,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3003}],"docs":"","sig":null,"attributes":[]},{"id":467,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356198,"byte_end":356206,"line_start":791,"line_end":791,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3008}],"docs":"","sig":null,"attributes":[]},{"id":468,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356307,"byte_end":356315,"line_start":797,"line_end":797,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3012}],"docs":"","sig":null,"attributes":[]},{"id":469,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356435,"byte_end":356443,"line_start":803,"line_end":803,"column_start":35,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":3016}],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356941,"byte_end":356949,"line_start":826,"line_end":826,"column_start":27,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356988,"byte_end":356996,"line_start":828,"line_end":828,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3030}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":357873,"byte_end":357881,"line_start":862,"line_end":862,"column_start":23,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":357928,"byte_end":357936,"line_start":864,"line_end":864,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3037}],"docs":"","sig":null,"attributes":[]},{"id":474,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":358089,"byte_end":358097,"line_start":870,"line_end":870,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3041}],"docs":"","sig":null,"attributes":[]},{"id":475,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":358270,"byte_end":358278,"line_start":878,"line_end":878,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3046}],"docs":"","sig":null,"attributes":[]},{"id":476,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":358480,"byte_end":358488,"line_start":886,"line_end":886,"column_start":39,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":3050}],"docs":"","sig":null,"attributes":[]},{"id":477,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":358739,"byte_end":358747,"line_start":896,"line_end":896,"column_start":43,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":3054}],"docs":"","sig":null,"attributes":[]},{"id":478,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":359074,"byte_end":359082,"line_start":908,"line_end":908,"column_start":33,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":3058}],"docs":"","sig":null,"attributes":[]},{"id":479,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":359220,"byte_end":359228,"line_start":914,"line_end":914,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3062},{"krate":0,"index":3063},{"krate":0,"index":3064},{"krate":0,"index":3065},{"krate":0,"index":3066},{"krate":0,"index":3067}],"docs":"","sig":null,"attributes":[]},{"id":480,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360978,"byte_end":360986,"line_start":985,"line_end":985,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":3071},{"krate":0,"index":3072},{"krate":0,"index":3073},{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3076},{"krate":0,"index":3078},{"krate":0,"index":3080},{"krate":0,"index":3081},{"krate":0,"index":3082},{"krate":0,"index":3083},{"krate":0,"index":3085},{"krate":0,"index":3086},{"krate":0,"index":3087},{"krate":0,"index":3088}],"docs":"","sig":null,"attributes":[]},{"id":481,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364639,"byte_end":364647,"line_start":1131,"line_end":1131,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3092}],"docs":"","sig":null,"attributes":[]},{"id":482,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":365095,"byte_end":365103,"line_start":1151,"line_end":1151,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3096},{"krate":0,"index":3097}],"docs":"","sig":null,"attributes":[]},{"id":483,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":365690,"byte_end":365698,"line_start":1173,"line_end":1173,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3101},{"krate":0,"index":3102},{"krate":0,"index":3103},{"krate":0,"index":3104},{"krate":0,"index":3105},{"krate":0,"index":3106},{"krate":0,"index":3107}],"docs":"","sig":null,"attributes":[]},{"id":484,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367589,"byte_end":367597,"line_start":1240,"line_end":1240,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3111},{"krate":0,"index":3112}],"docs":"","sig":null,"attributes":[]},{"id":485,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":368757,"byte_end":368765,"line_start":1275,"line_end":1275,"column_start":24,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3116},{"krate":0,"index":3117},{"krate":0,"index":3118},{"krate":0,"index":3119},{"krate":0,"index":3120}],"docs":"","sig":null,"attributes":[]},{"id":486,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":370274,"byte_end":370282,"line_start":1329,"line_end":1329,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":3124},{"krate":0,"index":3125}],"docs":"","sig":null,"attributes":[]},{"id":487,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":370902,"byte_end":370910,"line_start":1351,"line_end":1351,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3129},{"krate":0,"index":3131},{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3138}],"docs":"","sig":null,"attributes":[]},{"id":488,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373848,"byte_end":373856,"line_start":1434,"line_end":1434,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3142},{"krate":0,"index":3143}],"docs":"","sig":null,"attributes":[]},{"id":489,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":374031,"byte_end":374039,"line_start":1444,"line_end":1444,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3147},{"krate":0,"index":3148}],"docs":"","sig":null,"attributes":[]},{"id":490,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":374281,"byte_end":374289,"line_start":1453,"line_end":1453,"column_start":53,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":3152}],"docs":"","sig":null,"attributes":[]},{"id":491,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":374420,"byte_end":374428,"line_start":1461,"line_end":1461,"column_start":25,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3156},{"krate":0,"index":3157}],"docs":"","sig":null,"attributes":[]},{"id":492,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":374686,"byte_end":374694,"line_start":1470,"line_end":1470,"column_start":69,"column_end":77},"value":"","parent":null,"children":[{"krate":0,"index":3161}],"docs":"","sig":null,"attributes":[]},{"id":493,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":374836,"byte_end":374844,"line_start":1478,"line_end":1478,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3165},{"krate":0,"index":3166}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":375142,"byte_end":375150,"line_start":1491,"line_end":1491,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3170}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":375308,"byte_end":375316,"line_start":1498,"line_end":1498,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3175},{"krate":0,"index":3176}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":375596,"byte_end":375604,"line_start":1507,"line_end":1507,"column_start":61,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3180}],"docs":"","sig":null,"attributes":[]},{"id":497,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":375823,"byte_end":375831,"line_start":1517,"line_end":1517,"column_start":36,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3184},{"krate":0,"index":3185}],"docs":"","sig":null,"attributes":[]},{"id":498,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":376129,"byte_end":376137,"line_start":1530,"line_end":1530,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3189}],"docs":"","sig":null,"attributes":[]},{"id":499,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":376295,"byte_end":376303,"line_start":1537,"line_end":1537,"column_start":56,"column_end":64},"value":"","parent":null,"children":[{"krate":0,"index":3194},{"krate":0,"index":3195}],"docs":"","sig":null,"attributes":[]},{"id":500,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":376583,"byte_end":376591,"line_start":1546,"line_end":1546,"column_start":61,"column_end":69},"value":"","parent":null,"children":[{"krate":0,"index":3199}],"docs":"","sig":null,"attributes":[]},{"id":501,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":376803,"byte_end":376811,"line_start":1556,"line_end":1556,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3203}],"docs":"","sig":null,"attributes":[]},{"id":502,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":376971,"byte_end":376979,"line_start":1564,"line_end":1564,"column_start":27,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3207}],"docs":"","sig":null,"attributes":[]},{"id":503,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":377137,"byte_end":377145,"line_start":1572,"line_end":1572,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3211}],"docs":"","sig":null,"attributes":[]},{"id":504,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":377332,"byte_end":377340,"line_start":1580,"line_end":1580,"column_start":54,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":3215},{"krate":0,"index":3216}],"docs":"","sig":null,"attributes":[]},{"id":505,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":377786,"byte_end":377794,"line_start":1598,"line_end":1598,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3221}],"docs":"","sig":null,"attributes":[]},{"id":506,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":377903,"byte_end":377911,"line_start":1604,"line_end":1604,"column_start":29,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":3227}],"docs":"","sig":null,"attributes":[]},{"id":507,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378023,"byte_end":378031,"line_start":1610,"line_end":1610,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3232}],"docs":"","sig":null,"attributes":[]},{"id":508,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378146,"byte_end":378154,"line_start":1616,"line_end":1616,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3236}],"docs":"","sig":null,"attributes":[]},{"id":509,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378649,"byte_end":378661,"line_start":1638,"line_end":1638,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3240},{"krate":0,"index":3241},{"krate":0,"index":3242},{"krate":0,"index":3243},{"krate":0,"index":3244},{"krate":0,"index":3247},{"krate":0,"index":3250}],"docs":"","sig":null,"attributes":[]},{"id":510,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":381102,"byte_end":381114,"line_start":1715,"line_end":1715,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3254},{"krate":0,"index":3255},{"krate":0,"index":3256},{"krate":0,"index":3257},{"krate":0,"index":3258},{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3263},{"krate":0,"index":3266},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3271}],"docs":"","sig":null,"attributes":[]},{"id":511,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":400858,"byte_end":400863,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3313}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":401002,"byte_end":401007,"line_start":46,"line_end":46,"column_start":27,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":401046,"byte_end":401051,"line_start":48,"line_end":48,"column_start":29,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3321}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":401202,"byte_end":401207,"line_start":54,"line_end":54,"column_start":50,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3325}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":401347,"byte_end":401352,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":401401,"byte_end":401406,"line_start":62,"line_end":62,"column_start":39,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":3332}],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":401638,"byte_end":401643,"line_start":71,"line_end":71,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3336}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":401894,"byte_end":401899,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3340}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":402094,"byte_end":402099,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3344}],"docs":"","sig":null,"attributes":[]},{"id":520,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":402419,"byte_end":402424,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3348},{"krate":0,"index":3349},{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352}],"docs":"","sig":null,"attributes":[]},{"id":521,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":404385,"byte_end":404390,"line_start":156,"line_end":156,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3356},{"krate":0,"index":3357},{"krate":0,"index":3358}],"docs":"","sig":null,"attributes":[]},{"id":522,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":405369,"byte_end":405374,"line_start":198,"line_end":198,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3362}],"docs":"","sig":null,"attributes":[]},{"id":523,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":405677,"byte_end":405682,"line_start":213,"line_end":213,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3366},{"krate":0,"index":3367},{"krate":0,"index":3368},{"krate":0,"index":3369}],"docs":"","sig":null,"attributes":[]},{"id":524,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":406200,"byte_end":406205,"line_start":242,"line_end":242,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3373}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":406683,"byte_end":406688,"line_start":257,"line_end":257,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3377}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":407899,"byte_end":407904,"line_start":304,"line_end":304,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3382}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":408256,"byte_end":408261,"line_start":318,"line_end":318,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3386}],"docs":"","sig":null,"attributes":[]},{"id":528,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":408482,"byte_end":408487,"line_start":328,"line_end":328,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3390}],"docs":"","sig":null,"attributes":[]},{"id":529,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":409047,"byte_end":409052,"line_start":349,"line_end":349,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3394}],"docs":"","sig":null,"attributes":[]},{"id":530,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":409397,"byte_end":409402,"line_start":365,"line_end":365,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":3402}],"docs":"","sig":null,"attributes":[]},{"id":531,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":409972,"byte_end":409977,"line_start":394,"line_end":394,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3406}],"docs":"","sig":null,"attributes":[]},{"id":532,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":410154,"byte_end":410159,"line_start":404,"line_end":404,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3410}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":410407,"byte_end":410412,"line_start":415,"line_end":415,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3414},{"krate":0,"index":3415}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":410622,"byte_end":410627,"line_start":426,"line_end":426,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":3419},{"krate":0,"index":3420}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":410857,"byte_end":410862,"line_start":437,"line_end":437,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3425},{"krate":0,"index":3426}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":411124,"byte_end":411129,"line_start":448,"line_end":448,"column_start":43,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":3431},{"krate":0,"index":3432}],"docs":"","sig":null,"attributes":[]},{"id":537,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":411360,"byte_end":411365,"line_start":459,"line_end":459,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3436},{"krate":0,"index":3437},{"krate":0,"index":3438}],"docs":"","sig":null,"attributes":[]},{"id":538,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":412052,"byte_end":412057,"line_start":488,"line_end":488,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3443},{"krate":0,"index":3445}],"docs":"","sig":null,"attributes":[]},{"id":539,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":413229,"byte_end":413234,"line_start":518,"line_end":518,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3450}],"docs":"","sig":null,"attributes":[]},{"id":540,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":413913,"byte_end":413918,"line_start":537,"line_end":537,"column_start":12,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3454},{"krate":0,"index":3455}],"docs":"","sig":null,"attributes":[]},{"id":541,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414621,"byte_end":414626,"line_start":563,"line_end":563,"column_start":28,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3459},{"krate":0,"index":3460},{"krate":0,"index":3461},{"krate":0,"index":3462},{"krate":0,"index":3463},{"krate":0,"index":3464}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":416375,"byte_end":416380,"line_start":617,"line_end":617,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":3468}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Direct","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":425337,"byte_end":425345,"line_start":13,"line_end":13,"column_start":19,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":3493},{"krate":0,"index":3494}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":425433,"byte_end":425441,"line_start":20,"line_end":20,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3497}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":425527,"byte_end":425535,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3501},{"krate":0,"index":3502},{"krate":0,"index":3503}],"docs":"","sig":null,"attributes":[]},{"id":546,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":426538,"byte_end":426546,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3507},{"krate":0,"index":3508}],"docs":"","sig":null,"attributes":[]},{"id":547,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":427316,"byte_end":427324,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3512}],"docs":"","sig":null,"attributes":[]},{"id":548,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":427511,"byte_end":427519,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3516},{"krate":0,"index":3517}],"docs":"","sig":null,"attributes":[]},{"id":549,"kind":"Inherent","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":428463,"byte_end":428471,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":3521}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2760,"byte_end":2768,"line_start":78,"line_end":78,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":139}},{"kind":"Mod","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2778,"byte_end":2787,"line_start":79,"line_end":79,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":146}},{"kind":"Mod","span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\lib.rs","byte_start":2821,"byte_end":2824,"line_start":82,"line_end":82,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":424}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":6607,"byte_end":6612,"line_start":26,"line_end":26,"column_start":9,"column_end":14},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":6786,"byte_end":6791,"line_start":38,"line_end":38,"column_start":9,"column_end":14},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":7059,"byte_end":7064,"line_start":55,"line_end":55,"column_start":9,"column_end":14},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":7603,"byte_end":7608,"line_start":75,"line_end":75,"column_start":9,"column_end":14},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":7759,"byte_end":7764,"line_start":85,"line_end":85,"column_start":9,"column_end":14},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":7868,"byte_end":7873,"line_start":94,"line_end":94,"column_start":9,"column_end":14},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3564},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":8341,"byte_end":8346,"line_start":119,"line_end":119,"column_start":37,"column_end":42},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3564},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":8526,"byte_end":8531,"line_start":126,"line_end":126,"column_start":37,"column_end":42},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3564},"to":{"krate":1,"index":1948}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":8679,"byte_end":8684,"line_start":132,"line_end":132,"column_start":47,"column_end":52},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3564},"to":{"krate":1,"index":1920}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":8877,"byte_end":8882,"line_start":139,"line_end":139,"column_start":37,"column_end":42},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3564},"to":{"krate":1,"index":1952}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":9030,"byte_end":9035,"line_start":145,"line_end":145,"column_start":47,"column_end":52},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3564},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":9202,"byte_end":9207,"line_start":153,"line_end":153,"column_start":40,"column_end":45},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3564},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":9391,"byte_end":9396,"line_start":161,"line_end":161,"column_start":40,"column_end":45},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3564},"to":{"krate":1,"index":1960}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":9524,"byte_end":9529,"line_start":167,"line_end":167,"column_start":40,"column_end":45},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3564},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":9713,"byte_end":9718,"line_start":175,"line_end":175,"column_start":40,"column_end":45},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3564},"to":{"krate":1,"index":1956}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":9840,"byte_end":9845,"line_start":181,"line_end":181,"column_start":34,"column_end":39},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3564},"to":{"krate":1,"index":1942}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\angle.rs","byte_start":9986,"byte_end":9991,"line_start":188,"line_end":188,"column_start":38,"column_end":43},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3564},"to":{"krate":0,"index":140}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":15642,"byte_end":15647,"line_start":41,"line_end":41,"column_start":27,"column_end":32},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":15786,"byte_end":15791,"line_start":48,"line_end":48,"column_start":27,"column_end":32},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":15830,"byte_end":15835,"line_start":50,"line_end":50,"column_start":29,"column_end":34},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":15986,"byte_end":15991,"line_start":56,"line_end":56,"column_start":50,"column_end":55},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":16131,"byte_end":16136,"line_start":62,"line_end":62,"column_start":23,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":16185,"byte_end":16190,"line_start":64,"line_end":64,"column_start":39,"column_end":44},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":16422,"byte_end":16427,"line_start":73,"line_end":73,"column_start":43,"column_end":48},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":16678,"byte_end":16683,"line_start":83,"line_end":83,"column_start":12,"column_end":17},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":16878,"byte_end":16883,"line_start":94,"line_end":94,"column_start":12,"column_end":17},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":17203,"byte_end":17208,"line_start":107,"line_end":107,"column_start":12,"column_end":17},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":18918,"byte_end":18923,"line_start":155,"line_end":155,"column_start":12,"column_end":17},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20013,"byte_end":20018,"line_start":197,"line_end":197,"column_start":12,"column_end":17},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20303,"byte_end":20308,"line_start":211,"line_end":211,"column_start":12,"column_end":17},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":20789,"byte_end":20794,"line_start":239,"line_end":239,"column_start":12,"column_end":17},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":21216,"byte_end":21221,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":22130,"byte_end":22135,"line_start":281,"line_end":281,"column_start":12,"column_end":17},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":23143,"byte_end":23148,"line_start":322,"line_end":322,"column_start":12,"column_end":17},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":23496,"byte_end":23501,"line_start":336,"line_end":336,"column_start":12,"column_end":17},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":23722,"byte_end":23727,"line_start":346,"line_end":346,"column_start":12,"column_end":17},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":24140,"byte_end":24145,"line_start":365,"line_end":365,"column_start":12,"column_end":17},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":24446,"byte_end":24451,"line_start":381,"line_end":381,"column_start":12,"column_end":17},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":24650,"byte_end":24655,"line_start":392,"line_end":392,"column_start":12,"column_end":17},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":24832,"byte_end":24837,"line_start":402,"line_end":402,"column_start":12,"column_end":17},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":25055,"byte_end":25060,"line_start":413,"line_end":413,"column_start":23,"column_end":28},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":25270,"byte_end":25275,"line_start":424,"line_end":424,"column_start":23,"column_end":28},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":25505,"byte_end":25510,"line_start":435,"line_end":435,"column_start":43,"column_end":48},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":25772,"byte_end":25777,"line_start":446,"line_end":446,"column_start":43,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26008,"byte_end":26013,"line_start":457,"line_end":457,"column_start":12,"column_end":17},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":26653,"byte_end":26658,"line_start":483,"line_end":483,"column_start":12,"column_end":17},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":27830,"byte_end":27835,"line_start":513,"line_end":513,"column_start":12,"column_end":17},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":28510,"byte_end":28515,"line_start":532,"line_end":532,"column_start":12,"column_end":17},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":29212,"byte_end":29217,"line_start":556,"line_end":556,"column_start":28,"column_end":33},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":180},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box2d.rs","byte_start":30946,"byte_end":30951,"line_start":610,"line_end":610,"column_start":35,"column_end":40},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":180},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":38549,"byte_end":38566,"line_start":35,"line_end":35,"column_start":27,"column_end":44},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":364},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":38605,"byte_end":38622,"line_start":37,"line_end":37,"column_start":29,"column_end":46},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":364},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":39577,"byte_end":39594,"line_start":72,"line_end":72,"column_start":19,"column_end":36},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":364},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":39642,"byte_end":39659,"line_start":74,"line_end":74,"column_start":26,"column_end":43},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":364},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":39850,"byte_end":39867,"line_start":82,"line_end":82,"column_start":21,"column_end":38},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":364},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":40067,"byte_end":40084,"line_start":93,"line_end":93,"column_start":12,"column_end":29},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":40340,"byte_end":40357,"line_start":102,"line_end":102,"column_start":57,"column_end":74},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":364},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":41101,"byte_end":41118,"line_start":128,"line_end":128,"column_start":43,"column_end":60},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":364},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":41296,"byte_end":41313,"line_start":135,"line_end":135,"column_start":43,"column_end":60},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":364},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":41490,"byte_end":41507,"line_start":142,"line_end":142,"column_start":48,"column_end":65},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":364},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":41681,"byte_end":41698,"line_start":149,"line_end":149,"column_start":41,"column_end":58},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":364},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":41864,"byte_end":41881,"line_start":156,"line_end":156,"column_start":39,"column_end":56},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":364},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\homogen.rs","byte_start":42160,"byte_end":42177,"line_start":167,"line_end":167,"column_start":43,"column_end":60},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":364},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":43724,"byte_end":43725,"line_start":17,"line_end":17,"column_start":36,"column_end":37},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":429},"to":{"krate":0,"index":426}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":43865,"byte_end":43866,"line_start":27,"line_end":27,"column_start":34,"column_end":35},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":434},"to":{"krate":0,"index":431}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44007,"byte_end":44011,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":1862},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44282,"byte_end":44286,"line_start":42,"line_end":42,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":1,"index":1862},"to":{"krate":0,"index":438}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\num.rs","byte_start":44592,"byte_end":44596,"line_start":50,"line_end":50,"column_start":17,"column_end":21},"kind":"SuperTrait","from":{"krate":1,"index":1862},"to":{"krate":0,"index":440}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":47607,"byte_end":47613,"line_start":42,"line_end":42,"column_start":29,"column_end":35},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":47731,"byte_end":47737,"line_start":48,"line_end":48,"column_start":27,"column_end":33},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48340,"byte_end":48346,"line_start":79,"line_end":79,"column_start":12,"column_end":18},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":48514,"byte_end":48520,"line_start":87,"line_end":87,"column_start":19,"column_end":25},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":49625,"byte_end":49631,"line_start":125,"line_end":125,"column_start":29,"column_end":35},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":469},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":50090,"byte_end":50096,"line_start":139,"line_end":139,"column_start":39,"column_end":45},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":50237,"byte_end":50243,"line_start":145,"line_end":145,"column_start":43,"column_end":49},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":50374,"byte_end":50380,"line_start":151,"line_end":151,"column_start":33,"column_end":39},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1843}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":50505,"byte_end":50511,"line_start":158,"line_end":158,"column_start":27,"column_end":33},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":50640,"byte_end":50646,"line_start":166,"line_end":166,"column_start":25,"column_end":31},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":50847,"byte_end":50853,"line_start":175,"line_end":175,"column_start":37,"column_end":43},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1948}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":50985,"byte_end":50991,"line_start":182,"line_end":182,"column_start":25,"column_end":31},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1920}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":51200,"byte_end":51206,"line_start":191,"line_end":191,"column_start":37,"column_end":43},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1952}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":51384,"byte_end":51390,"line_start":198,"line_end":198,"column_start":39,"column_end":45},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":469},"to":{"krate":4,"index":420}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":51687,"byte_end":51693,"line_start":209,"line_end":209,"column_start":48,"column_end":54},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":51915,"byte_end":51921,"line_start":219,"line_end":219,"column_start":28,"column_end":34},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":52150,"byte_end":52156,"line_start":229,"line_end":229,"column_start":56,"column_end":62},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1956}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":52305,"byte_end":52311,"line_start":237,"line_end":237,"column_start":28,"column_end":34},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":52540,"byte_end":52546,"line_start":247,"line_end":247,"column_start":56,"column_end":62},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1960}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":52724,"byte_end":52730,"line_start":255,"line_end":255,"column_start":52,"column_end":58},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":52982,"byte_end":52988,"line_start":265,"line_end":265,"column_start":52,"column_end":58},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":53200,"byte_end":53206,"line_start":275,"line_end":275,"column_start":25,"column_end":31},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1942}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":53380,"byte_end":53386,"line_start":285,"line_end":285,"column_start":37,"column_end":43},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":53511,"byte_end":53517,"line_start":291,"line_end":291,"column_start":39,"column_end":45},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1625}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":53656,"byte_end":53662,"line_start":297,"line_end":297,"column_start":23,"column_end":29},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":53697,"byte_end":53703,"line_start":299,"line_end":299,"column_start":25,"column_end":31},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":469},"to":{"krate":1,"index":1614}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":53822,"byte_end":53828,"line_start":305,"line_end":305,"column_start":27,"column_end":33},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":469},"to":{"krate":0,"index":426}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\length.rs","byte_start":53958,"byte_end":53964,"line_start":312,"line_end":312,"column_start":41,"column_end":47},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":469},"to":{"krate":0,"index":140}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":62269,"byte_end":62276,"line_start":38,"line_end":38,"column_start":27,"column_end":34},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":62315,"byte_end":62322,"line_start":40,"line_end":40,"column_start":29,"column_end":36},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":63145,"byte_end":63152,"line_start":73,"line_end":73,"column_start":19,"column_end":26},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":63200,"byte_end":63207,"line_start":75,"line_end":75,"column_start":26,"column_end":33},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":63356,"byte_end":63363,"line_start":83,"line_end":83,"column_start":21,"column_end":28},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":63578,"byte_end":63585,"line_start":94,"line_end":94,"column_start":39,"column_end":46},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":63808,"byte_end":63815,"line_start":103,"line_end":103,"column_start":43,"column_end":50},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":64125,"byte_end":64132,"line_start":113,"line_end":113,"column_start":33,"column_end":40},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1843}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":64250,"byte_end":64257,"line_start":120,"line_end":120,"column_start":12,"column_end":19},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":65154,"byte_end":65161,"line_start":162,"line_end":162,"column_start":18,"column_end":25},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":70270,"byte_end":70277,"line_start":365,"line_end":365,"column_start":24,"column_end":31},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":70879,"byte_end":70886,"line_start":389,"line_end":389,"column_start":28,"column_end":35},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73728,"byte_end":73735,"line_start":467,"line_end":467,"column_start":39,"column_end":46},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":640},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":73911,"byte_end":73918,"line_start":475,"line_end":475,"column_start":25,"column_end":32},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1942}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":74099,"byte_end":74106,"line_start":485,"line_end":485,"column_start":39,"column_end":46},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":74346,"byte_end":74353,"line_start":494,"line_end":494,"column_start":51,"column_end":58},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1948}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":74540,"byte_end":74547,"line_start":502,"line_end":502,"column_start":41,"column_end":48},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":74798,"byte_end":74805,"line_start":511,"line_end":511,"column_start":69,"column_end":76},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1948}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":74946,"byte_end":74953,"line_start":519,"line_end":519,"column_start":25,"column_end":32},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1920}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":75163,"byte_end":75170,"line_start":528,"line_end":528,"column_start":39,"column_end":46},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1920}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":75410,"byte_end":75417,"line_start":537,"line_end":537,"column_start":51,"column_end":58},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1952}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":75604,"byte_end":75611,"line_start":545,"line_end":545,"column_start":41,"column_end":48},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1920}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":75862,"byte_end":75869,"line_start":554,"line_end":554,"column_start":69,"column_end":76},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1952}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":76021,"byte_end":76028,"line_start":562,"line_end":562,"column_start":36,"column_end":43},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":76257,"byte_end":76264,"line_start":571,"line_end":571,"column_start":56,"column_end":63},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1956}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":76422,"byte_end":76429,"line_start":578,"line_end":578,"column_start":56,"column_end":63},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":76684,"byte_end":76691,"line_start":587,"line_end":587,"column_start":61,"column_end":68},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1956}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":76875,"byte_end":76882,"line_start":596,"line_end":596,"column_start":36,"column_end":43},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":77111,"byte_end":77118,"line_start":605,"line_end":605,"column_start":56,"column_end":63},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1960}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":77276,"byte_end":77283,"line_start":612,"line_end":612,"column_start":56,"column_end":63},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":77538,"byte_end":77545,"line_start":621,"line_end":621,"column_start":61,"column_end":68},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1960}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":77720,"byte_end":77727,"line_start":630,"line_end":630,"column_start":27,"column_end":34},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":640},"to":{"krate":0,"index":426}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":77834,"byte_end":77841,"line_start":637,"line_end":637,"column_start":29,"column_end":36},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":640},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":77998,"byte_end":78005,"line_start":645,"line_end":645,"column_start":27,"column_end":34},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":640},"to":{"krate":0,"index":440}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":78160,"byte_end":78167,"line_start":653,"line_end":653,"column_start":29,"column_end":36},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":640},"to":{"krate":0,"index":438}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":78350,"byte_end":78357,"line_start":661,"line_end":661,"column_start":53,"column_end":60},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":640},"to":{"krate":0,"index":140}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":78683,"byte_end":78690,"line_start":674,"line_end":674,"column_start":29,"column_end":36},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":78791,"byte_end":78798,"line_start":680,"line_end":680,"column_start":29,"column_end":36},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":78903,"byte_end":78910,"line_start":686,"line_end":686,"column_start":29,"column_end":36},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":79011,"byte_end":79018,"line_start":692,"line_end":692,"column_start":29,"column_end":36},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":640},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":79341,"byte_end":79348,"line_start":712,"line_end":712,"column_start":27,"column_end":34},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":79387,"byte_end":79394,"line_start":714,"line_end":714,"column_start":29,"column_end":36},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":80263,"byte_end":80270,"line_start":748,"line_end":748,"column_start":19,"column_end":26},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":80318,"byte_end":80325,"line_start":750,"line_end":750,"column_start":26,"column_end":33},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":80495,"byte_end":80502,"line_start":758,"line_end":758,"column_start":21,"column_end":28},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":80705,"byte_end":80712,"line_start":768,"line_end":768,"column_start":39,"column_end":46},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":80963,"byte_end":80970,"line_start":778,"line_end":778,"column_start":43,"column_end":50},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":81297,"byte_end":81304,"line_start":790,"line_end":790,"column_start":33,"column_end":40},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1843}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":81442,"byte_end":81449,"line_start":797,"line_end":797,"column_start":12,"column_end":19},"kind":{"Impl":{"id":173}},"from":{"krate":0,"index":850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":82408,"byte_end":82415,"line_start":840,"line_end":840,"column_start":18,"column_end":25},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88021,"byte_end":88028,"line_start":1055,"line_end":1055,"column_start":24,"column_end":31},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":88768,"byte_end":88775,"line_start":1087,"line_end":1087,"column_start":28,"column_end":35},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91703,"byte_end":91710,"line_start":1169,"line_end":1169,"column_start":39,"column_end":46},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":850},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":91908,"byte_end":91915,"line_start":1177,"line_end":1177,"column_start":25,"column_end":32},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1942}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":92105,"byte_end":92112,"line_start":1187,"line_end":1187,"column_start":39,"column_end":46},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":92374,"byte_end":92381,"line_start":1196,"line_end":1196,"column_start":51,"column_end":58},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1948}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":92599,"byte_end":92606,"line_start":1205,"line_end":1205,"column_start":41,"column_end":48},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":92875,"byte_end":92882,"line_start":1214,"line_end":1214,"column_start":69,"column_end":76},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1948}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":93023,"byte_end":93030,"line_start":1222,"line_end":1222,"column_start":25,"column_end":32},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1920}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":93258,"byte_end":93265,"line_start":1231,"line_end":1231,"column_start":39,"column_end":46},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1920}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":93527,"byte_end":93534,"line_start":1240,"line_end":1240,"column_start":51,"column_end":58},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1952}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":93752,"byte_end":93759,"line_start":1249,"line_end":1249,"column_start":41,"column_end":48},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1920}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":94028,"byte_end":94035,"line_start":1258,"line_end":1258,"column_start":69,"column_end":76},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1952}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":94187,"byte_end":94194,"line_start":1266,"line_end":1266,"column_start":36,"column_end":43},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":94485,"byte_end":94492,"line_start":1279,"line_end":1279,"column_start":48,"column_end":55},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1956}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":94711,"byte_end":94718,"line_start":1288,"line_end":1288,"column_start":56,"column_end":63},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":95045,"byte_end":95052,"line_start":1301,"line_end":1301,"column_start":61,"column_end":68},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1956}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":95200,"byte_end":95207,"line_start":1309,"line_end":1309,"column_start":36,"column_end":43},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":95498,"byte_end":95505,"line_start":1322,"line_end":1322,"column_start":48,"column_end":55},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1960}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":95724,"byte_end":95731,"line_start":1331,"line_end":1331,"column_start":56,"column_end":63},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":96058,"byte_end":96065,"line_start":1344,"line_end":1344,"column_start":61,"column_end":68},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1960}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":96204,"byte_end":96211,"line_start":1352,"line_end":1352,"column_start":27,"column_end":34},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":850},"to":{"krate":0,"index":426}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":96318,"byte_end":96325,"line_start":1359,"line_end":1359,"column_start":29,"column_end":36},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":850},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":96482,"byte_end":96489,"line_start":1367,"line_end":1367,"column_start":27,"column_end":34},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":850},"to":{"krate":0,"index":440}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":96644,"byte_end":96651,"line_start":1375,"line_end":1375,"column_start":29,"column_end":36},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":850},"to":{"krate":0,"index":438}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":96834,"byte_end":96841,"line_start":1383,"line_end":1383,"column_start":53,"column_end":60},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":850},"to":{"krate":0,"index":140}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":97289,"byte_end":97296,"line_start":1401,"line_end":1401,"column_start":29,"column_end":36},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":97405,"byte_end":97412,"line_start":1407,"line_end":1407,"column_start":29,"column_end":36},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":97526,"byte_end":97533,"line_start":1413,"line_end":1413,"column_start":32,"column_end":39},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\point.rs","byte_start":97648,"byte_end":97655,"line_start":1419,"line_end":1419,"column_start":32,"column_end":39},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":111675,"byte_end":111679,"line_start":41,"line_end":41,"column_start":27,"column_end":31},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":111822,"byte_end":111826,"line_start":48,"line_end":48,"column_start":27,"column_end":31},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":111865,"byte_end":111869,"line_start":50,"line_end":50,"column_start":29,"column_end":33},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":112023,"byte_end":112027,"line_start":56,"line_end":56,"column_start":49,"column_end":53},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":112175,"byte_end":112179,"line_start":62,"line_end":62,"column_start":23,"column_end":27},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":112228,"byte_end":112232,"line_start":64,"line_end":64,"column_start":39,"column_end":43},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":112515,"byte_end":112519,"line_start":74,"line_end":74,"column_start":43,"column_end":47},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":112796,"byte_end":112800,"line_start":84,"line_end":84,"column_start":33,"column_end":37},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":1843}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":112914,"byte_end":112918,"line_start":90,"line_end":90,"column_start":12,"column_end":16},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":113119,"byte_end":113123,"line_start":101,"line_end":101,"column_start":12,"column_end":16},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":113523,"byte_end":113527,"line_start":121,"line_end":121,"column_start":12,"column_end":16},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":116509,"byte_end":116513,"line_start":239,"line_end":239,"column_start":12,"column_end":16},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":119897,"byte_end":119901,"line_start":335,"line_end":335,"column_start":12,"column_end":16},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":120269,"byte_end":120273,"line_start":349,"line_end":349,"column_start":12,"column_end":16},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":120496,"byte_end":120500,"line_start":359,"line_end":359,"column_start":12,"column_end":16},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":121231,"byte_end":121235,"line_start":387,"line_end":387,"column_start":12,"column_end":16},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":121573,"byte_end":121577,"line_start":400,"line_end":400,"column_start":39,"column_end":43},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":121693,"byte_end":121697,"line_start":407,"line_end":407,"column_start":30,"column_end":34},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":121934,"byte_end":121938,"line_start":414,"line_end":414,"column_start":31,"column_end":35},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":122098,"byte_end":122102,"line_start":422,"line_end":422,"column_start":38,"column_end":42},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":122349,"byte_end":122353,"line_start":433,"line_end":433,"column_start":50,"column_end":54},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":122553,"byte_end":122557,"line_start":441,"line_end":441,"column_start":50,"column_end":54},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":122777,"byte_end":122781,"line_start":449,"line_end":449,"column_start":70,"column_end":74},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123031,"byte_end":123035,"line_start":457,"line_end":457,"column_start":70,"column_end":74},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123233,"byte_end":123237,"line_start":465,"line_end":465,"column_start":18,"column_end":22},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":123878,"byte_end":123882,"line_start":488,"line_end":488,"column_start":28,"column_end":32},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":125109,"byte_end":125113,"line_start":515,"line_end":515,"column_start":76,"column_end":80},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":126679,"byte_end":126683,"line_start":552,"line_end":552,"column_start":28,"column_end":32},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":1097},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rect.rs","byte_start":128833,"byte_end":128837,"line_start":616,"line_end":616,"column_start":35,"column_end":39},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":1097},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":138996,"byte_end":139012,"line_start":26,"line_end":26,"column_start":19,"column_end":35},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":3663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":139325,"byte_end":139341,"line_start":37,"line_end":37,"column_start":25,"column_end":41},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":3663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":139623,"byte_end":139639,"line_start":46,"line_end":46,"column_start":40,"column_end":56},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":3663},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":144541,"byte_end":144557,"line_start":204,"line_end":204,"column_start":9,"column_end":25},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":3663},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rigid.rs","byte_start":144737,"byte_end":144753,"line_start":212,"line_end":212,"column_start":9,"column_end":25},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":3663},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":148647,"byte_end":148657,"line_start":33,"line_end":33,"column_start":34,"column_end":44},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":1343},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":148710,"byte_end":148720,"line_start":35,"line_end":35,"column_start":36,"column_end":46},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":1343},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":148902,"byte_end":148912,"line_start":44,"line_end":44,"column_start":26,"column_end":36},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":1343},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":148974,"byte_end":148984,"line_start":46,"line_end":46,"column_start":33,"column_end":43},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":1343},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":149134,"byte_end":149144,"line_start":54,"line_end":54,"column_start":28,"column_end":38},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":1343},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":149290,"byte_end":149300,"line_start":62,"line_end":62,"column_start":19,"column_end":29},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":1343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":149798,"byte_end":149808,"line_start":86,"line_end":86,"column_start":25,"column_end":35},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":1343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":150029,"byte_end":150039,"line_start":96,"line_end":96,"column_start":19,"column_end":29},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":1343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":150246,"byte_end":150256,"line_start":106,"line_end":106,"column_start":19,"column_end":29},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":1343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":152623,"byte_end":152633,"line_start":184,"line_end":184,"column_start":19,"column_end":29},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":1343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":154141,"byte_end":154151,"line_start":228,"line_end":228,"column_start":34,"column_end":44},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":1411},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":154204,"byte_end":154214,"line_start":230,"line_end":230,"column_start":36,"column_end":46},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":1411},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":154481,"byte_end":154491,"line_start":242,"line_end":242,"column_start":26,"column_end":36},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":1411},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":154553,"byte_end":154563,"line_start":244,"line_end":244,"column_start":33,"column_end":43},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":1411},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":154804,"byte_end":154814,"line_start":255,"line_end":255,"column_start":28,"column_end":38},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":1411},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155028,"byte_end":155038,"line_start":266,"line_end":266,"column_start":19,"column_end":29},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":1411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":155649,"byte_end":155659,"line_start":286,"line_end":286,"column_start":19,"column_end":29},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":1411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":156140,"byte_end":156150,"line_start":308,"line_end":308,"column_start":19,"column_end":29},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":1411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":166764,"byte_end":166774,"line_start":660,"line_end":660,"column_start":46,"column_end":56},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":1411},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":167044,"byte_end":167054,"line_start":670,"line_end":670,"column_start":50,"column_end":60},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":1411},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\rotation.rs","byte_start":167301,"byte_end":167311,"line_start":680,"line_end":680,"column_start":35,"column_end":45},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":1411},"to":{"krate":0,"index":140}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":177882,"byte_end":177887,"line_start":47,"line_end":47,"column_start":19,"column_end":24},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":1525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181094,"byte_end":181099,"line_start":169,"line_end":169,"column_start":26,"column_end":31},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":1525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":181696,"byte_end":181701,"line_start":197,"line_end":197,"column_start":36,"column_end":41},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":1525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183518,"byte_end":183523,"line_start":254,"line_end":254,"column_start":16,"column_end":21},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":1525},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183771,"byte_end":183776,"line_start":262,"line_end":262,"column_start":47,"column_end":52},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":183999,"byte_end":184004,"line_start":272,"line_end":272,"column_start":32,"column_end":37},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":184239,"byte_end":184244,"line_start":282,"line_end":282,"column_start":32,"column_end":37},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":1920}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":184603,"byte_end":184608,"line_start":295,"line_end":295,"column_start":44,"column_end":49},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":184743,"byte_end":184748,"line_start":301,"line_end":301,"column_start":30,"column_end":35},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":184811,"byte_end":184816,"line_start":303,"line_end":303,"column_start":46,"column_end":51},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":1625}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":184971,"byte_end":184976,"line_start":309,"line_end":309,"column_start":32,"column_end":37},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":1614}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":185111,"byte_end":185116,"line_start":315,"line_end":315,"column_start":36,"column_end":41},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":185249,"byte_end":185254,"line_start":321,"line_end":321,"column_start":34,"column_end":39},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":185317,"byte_end":185322,"line_start":323,"line_end":323,"column_start":46,"column_end":51},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":185477,"byte_end":185482,"line_start":329,"line_end":329,"column_start":50,"column_end":55},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":185627,"byte_end":185632,"line_start":335,"line_end":335,"column_start":40,"column_end":45},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":1843}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":185749,"byte_end":185754,"line_start":341,"line_end":341,"column_start":34,"column_end":39},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":1525},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\scale.rs","byte_start":185884,"byte_end":185889,"line_start":347,"line_end":347,"column_start":32,"column_end":37},"kind":{"Impl":{"id":277}},"from":{"krate":0,"index":1525},"to":{"krate":0,"index":431}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":188348,"byte_end":188361,"line_start":38,"line_end":38,"column_start":27,"column_end":40},"kind":{"Impl":{"id":278}},"from":{"krate":0,"index":1648},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":188400,"byte_end":188413,"line_start":40,"line_end":40,"column_start":29,"column_end":42},"kind":{"Impl":{"id":279}},"from":{"krate":0,"index":1648},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":188697,"byte_end":188710,"line_start":52,"line_end":52,"column_start":19,"column_end":32},"kind":{"Impl":{"id":280}},"from":{"krate":0,"index":1648},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":188758,"byte_end":188771,"line_start":54,"line_end":54,"column_start":26,"column_end":39},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":1648},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":189026,"byte_end":189039,"line_start":65,"line_end":65,"column_start":21,"column_end":34},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":1648},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":189280,"byte_end":189293,"line_start":76,"line_end":76,"column_start":39,"column_end":52},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":1648},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":189537,"byte_end":189550,"line_start":86,"line_end":86,"column_start":33,"column_end":46},"kind":{"Impl":{"id":284}},"from":{"krate":0,"index":1648},"to":{"krate":1,"index":1843}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":189826,"byte_end":189839,"line_start":98,"line_end":98,"column_start":12,"column_end":25},"kind":{"Impl":{"id":285}},"from":{"krate":0,"index":1648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":191788,"byte_end":191801,"line_start":163,"line_end":163,"column_start":18,"column_end":31},"kind":{"Impl":{"id":286}},"from":{"krate":0,"index":1648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":192199,"byte_end":192212,"line_start":175,"line_end":175,"column_start":12,"column_end":25},"kind":{"Impl":{"id":287}},"from":{"krate":0,"index":1648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":192428,"byte_end":192441,"line_start":188,"line_end":188,"column_start":20,"column_end":33},"kind":{"Impl":{"id":288}},"from":{"krate":0,"index":1648},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\side_offsets.rs","byte_start":192759,"byte_end":192772,"line_start":203,"line_end":203,"column_start":18,"column_end":31},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":1648},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":194754,"byte_end":194760,"line_start":40,"line_end":40,"column_start":27,"column_end":33},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":194799,"byte_end":194805,"line_start":42,"line_end":42,"column_start":29,"column_end":35},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":195787,"byte_end":195793,"line_start":77,"line_end":77,"column_start":19,"column_end":25},"kind":{"Impl":{"id":292}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":195841,"byte_end":195847,"line_start":79,"line_end":79,"column_start":26,"column_end":32},"kind":{"Impl":{"id":293}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":196014,"byte_end":196020,"line_start":87,"line_end":87,"column_start":21,"column_end":27},"kind":{"Impl":{"id":294}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":196208,"byte_end":196214,"line_start":96,"line_end":96,"column_start":39,"column_end":45},"kind":{"Impl":{"id":295}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":196441,"byte_end":196447,"line_start":104,"line_end":104,"column_start":43,"column_end":49},"kind":{"Impl":{"id":296}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":196718,"byte_end":196724,"line_start":114,"line_end":114,"column_start":33,"column_end":39},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1843}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":196841,"byte_end":196847,"line_start":121,"line_end":121,"column_start":12,"column_end":18},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":1745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":197718,"byte_end":197724,"line_start":155,"line_end":155,"column_start":18,"column_end":24},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":1745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":201104,"byte_end":201110,"line_start":278,"line_end":278,"column_start":28,"column_end":34},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":1745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204287,"byte_end":204293,"line_start":366,"line_end":366,"column_start":20,"column_end":26},"kind":{"Impl":{"id":301}},"from":{"krate":0,"index":1745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":204888,"byte_end":204894,"line_start":382,"line_end":382,"column_start":24,"column_end":30},"kind":{"Impl":{"id":302}},"from":{"krate":0,"index":1745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":206540,"byte_end":206546,"line_start":439,"line_end":439,"column_start":23,"column_end":29},"kind":{"Impl":{"id":303}},"from":{"krate":0,"index":1745},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":207108,"byte_end":207114,"line_start":458,"line_end":458,"column_start":29,"column_end":35},"kind":{"Impl":{"id":304}},"from":{"krate":0,"index":1745},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":207273,"byte_end":207279,"line_start":466,"line_end":466,"column_start":27,"column_end":33},"kind":{"Impl":{"id":305}},"from":{"krate":0,"index":1745},"to":{"krate":0,"index":440}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":207436,"byte_end":207442,"line_start":474,"line_end":474,"column_start":29,"column_end":35},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":1745},"to":{"krate":0,"index":438}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":207601,"byte_end":207607,"line_start":482,"line_end":482,"column_start":27,"column_end":33},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":1745},"to":{"krate":0,"index":426}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":207736,"byte_end":207742,"line_start":490,"line_end":490,"column_start":25,"column_end":31},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1942}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":207922,"byte_end":207928,"line_start":500,"line_end":500,"column_start":25,"column_end":31},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":208159,"byte_end":208165,"line_start":509,"line_end":509,"column_start":37,"column_end":43},"kind":{"Impl":{"id":310}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1948}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":208339,"byte_end":208345,"line_start":518,"line_end":518,"column_start":25,"column_end":31},"kind":{"Impl":{"id":311}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1920}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":208576,"byte_end":208582,"line_start":527,"line_end":527,"column_start":37,"column_end":43},"kind":{"Impl":{"id":312}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1952}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":208767,"byte_end":208773,"line_start":536,"line_end":536,"column_start":36,"column_end":42},"kind":{"Impl":{"id":313}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":209007,"byte_end":209013,"line_start":545,"line_end":545,"column_start":48,"column_end":54},"kind":{"Impl":{"id":314}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1956}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":209209,"byte_end":209215,"line_start":553,"line_end":553,"column_start":56,"column_end":62},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":209483,"byte_end":209489,"line_start":562,"line_end":562,"column_start":61,"column_end":67},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1956}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":209637,"byte_end":209643,"line_start":570,"line_end":570,"column_start":36,"column_end":42},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":209877,"byte_end":209883,"line_start":579,"line_end":579,"column_start":48,"column_end":54},"kind":{"Impl":{"id":318}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1960}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":210079,"byte_end":210085,"line_start":587,"line_end":587,"column_start":56,"column_end":62},"kind":{"Impl":{"id":319}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":210353,"byte_end":210359,"line_start":596,"line_end":596,"column_start":61,"column_end":67},"kind":{"Impl":{"id":320}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1960}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":211118,"byte_end":211124,"line_start":632,"line_end":632,"column_start":37,"column_end":43},"kind":{"Impl":{"id":321}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":211249,"byte_end":211255,"line_start":639,"line_end":639,"column_start":29,"column_end":35},"kind":{"Impl":{"id":322}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":211379,"byte_end":211385,"line_start":646,"line_end":646,"column_start":29,"column_end":35},"kind":{"Impl":{"id":323}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":211503,"byte_end":211509,"line_start":653,"line_end":653,"column_start":29,"column_end":35},"kind":{"Impl":{"id":324}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":211633,"byte_end":211639,"line_start":660,"line_end":660,"column_start":29,"column_end":35},"kind":{"Impl":{"id":325}},"from":{"krate":0,"index":1745},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":217512,"byte_end":217518,"line_start":878,"line_end":878,"column_start":27,"column_end":33},"kind":{"Impl":{"id":326}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":217557,"byte_end":217563,"line_start":880,"line_end":880,"column_start":29,"column_end":35},"kind":{"Impl":{"id":327}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":218493,"byte_end":218499,"line_start":914,"line_end":914,"column_start":19,"column_end":25},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":218547,"byte_end":218553,"line_start":916,"line_end":916,"column_start":26,"column_end":32},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":218749,"byte_end":218755,"line_start":924,"line_end":924,"column_start":21,"column_end":27},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":218971,"byte_end":218977,"line_start":934,"line_end":934,"column_start":39,"column_end":45},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":219271,"byte_end":219277,"line_start":944,"line_end":944,"column_start":43,"column_end":49},"kind":{"Impl":{"id":332}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":219617,"byte_end":219623,"line_start":956,"line_end":956,"column_start":33,"column_end":39},"kind":{"Impl":{"id":333}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1843}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":219760,"byte_end":219766,"line_start":963,"line_end":963,"column_start":12,"column_end":18},"kind":{"Impl":{"id":334}},"from":{"krate":0,"index":1941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":220706,"byte_end":220712,"line_start":998,"line_end":998,"column_start":18,"column_end":24},"kind":{"Impl":{"id":335}},"from":{"krate":0,"index":1941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":224312,"byte_end":224318,"line_start":1121,"line_end":1121,"column_start":28,"column_end":34},"kind":{"Impl":{"id":336}},"from":{"krate":0,"index":1941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227179,"byte_end":227185,"line_start":1199,"line_end":1199,"column_start":20,"column_end":26},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":1941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":227825,"byte_end":227831,"line_start":1215,"line_end":1215,"column_start":24,"column_end":30},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":1941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":229667,"byte_end":229673,"line_start":1276,"line_end":1276,"column_start":23,"column_end":29},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":1941},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":230319,"byte_end":230325,"line_start":1297,"line_end":1297,"column_start":29,"column_end":35},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":1941},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":230484,"byte_end":230490,"line_start":1305,"line_end":1305,"column_start":27,"column_end":33},"kind":{"Impl":{"id":341}},"from":{"krate":0,"index":1941},"to":{"krate":0,"index":440}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":230647,"byte_end":230653,"line_start":1313,"line_end":1313,"column_start":29,"column_end":35},"kind":{"Impl":{"id":342}},"from":{"krate":0,"index":1941},"to":{"krate":0,"index":438}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":230812,"byte_end":230818,"line_start":1321,"line_end":1321,"column_start":27,"column_end":33},"kind":{"Impl":{"id":343}},"from":{"krate":0,"index":1941},"to":{"krate":0,"index":426}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":230961,"byte_end":230967,"line_start":1329,"line_end":1329,"column_start":25,"column_end":31},"kind":{"Impl":{"id":344}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1942}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":231160,"byte_end":231166,"line_start":1339,"line_end":1339,"column_start":25,"column_end":31},"kind":{"Impl":{"id":345}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":231423,"byte_end":231429,"line_start":1348,"line_end":1348,"column_start":37,"column_end":43},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1948}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":231639,"byte_end":231645,"line_start":1358,"line_end":1358,"column_start":25,"column_end":31},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1920}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":231902,"byte_end":231908,"line_start":1367,"line_end":1367,"column_start":37,"column_end":43},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1952}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":232129,"byte_end":232135,"line_start":1377,"line_end":1377,"column_start":36,"column_end":42},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":232445,"byte_end":232451,"line_start":1390,"line_end":1390,"column_start":48,"column_end":54},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1956}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":232685,"byte_end":232691,"line_start":1399,"line_end":1399,"column_start":56,"column_end":62},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":233037,"byte_end":233043,"line_start":1412,"line_end":1412,"column_start":61,"column_end":67},"kind":{"Impl":{"id":352}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1956}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":233191,"byte_end":233197,"line_start":1420,"line_end":1420,"column_start":36,"column_end":42},"kind":{"Impl":{"id":353}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":233507,"byte_end":233513,"line_start":1433,"line_end":1433,"column_start":48,"column_end":54},"kind":{"Impl":{"id":354}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1960}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":233747,"byte_end":233753,"line_start":1442,"line_end":1442,"column_start":56,"column_end":62},"kind":{"Impl":{"id":355}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":234099,"byte_end":234105,"line_start":1455,"line_end":1455,"column_start":61,"column_end":67},"kind":{"Impl":{"id":356}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1960}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":234683,"byte_end":234689,"line_start":1482,"line_end":1482,"column_start":37,"column_end":43},"kind":{"Impl":{"id":357}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":234819,"byte_end":234825,"line_start":1489,"line_end":1489,"column_start":29,"column_end":35},"kind":{"Impl":{"id":358}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":234961,"byte_end":234967,"line_start":1496,"line_end":1496,"column_start":29,"column_end":35},"kind":{"Impl":{"id":359}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":235094,"byte_end":235100,"line_start":1503,"line_end":1503,"column_start":32,"column_end":38},"kind":{"Impl":{"id":360}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\size.rs","byte_start":235242,"byte_end":235248,"line_start":1510,"line_end":1510,"column_start":32,"column_end":38},"kind":{"Impl":{"id":361}},"from":{"krate":0,"index":1941},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242929,"byte_end":242940,"line_start":55,"line_end":55,"column_start":34,"column_end":45},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":2168},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":242993,"byte_end":243004,"line_start":57,"line_end":57,"column_start":36,"column_end":47},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":2168},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":244279,"byte_end":244290,"line_start":107,"line_end":107,"column_start":26,"column_end":37},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":2168},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":244352,"byte_end":244363,"line_start":109,"line_end":109,"column_start":33,"column_end":44},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":2168},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":244694,"byte_end":244705,"line_start":122,"line_end":122,"column_start":28,"column_end":39},"kind":{"Impl":{"id":366}},"from":{"krate":0,"index":2168},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":244979,"byte_end":244990,"line_start":135,"line_end":135,"column_start":19,"column_end":30},"kind":{"Impl":{"id":367}},"from":{"krate":0,"index":2168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":247040,"byte_end":247051,"line_start":190,"line_end":190,"column_start":25,"column_end":36},"kind":{"Impl":{"id":368}},"from":{"krate":0,"index":2168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":250382,"byte_end":250393,"line_start":285,"line_end":285,"column_start":35,"column_end":46},"kind":{"Impl":{"id":369}},"from":{"krate":0,"index":2168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":251318,"byte_end":251329,"line_start":311,"line_end":311,"column_start":19,"column_end":30},"kind":{"Impl":{"id":370}},"from":{"krate":0,"index":2168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":251892,"byte_end":251903,"line_start":332,"line_end":332,"column_start":19,"column_end":30},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":2168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":257680,"byte_end":257691,"line_start":512,"line_end":512,"column_start":19,"column_end":30},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":2168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":258746,"byte_end":258757,"line_start":549,"line_end":549,"column_start":20,"column_end":31},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":2168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":259230,"byte_end":259241,"line_start":566,"line_end":566,"column_start":32,"column_end":43},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":2168},"to":{"krate":1,"index":1843}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":259408,"byte_end":259419,"line_start":574,"line_end":574,"column_start":48,"column_end":59},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":2168},"to":{"krate":0,"index":140}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform2d.rs","byte_start":260005,"byte_end":260016,"line_start":587,"line_end":587,"column_start":34,"column_end":45},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":2168},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":268223,"byte_end":268234,"line_start":58,"line_end":58,"column_start":34,"column_end":45},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":2331},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":268287,"byte_end":268298,"line_start":60,"line_end":60,"column_start":36,"column_end":47},"kind":{"Impl":{"id":378}},"from":{"krate":0,"index":2331},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":270169,"byte_end":270180,"line_start":123,"line_end":123,"column_start":26,"column_end":37},"kind":{"Impl":{"id":379}},"from":{"krate":0,"index":2331},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":270242,"byte_end":270253,"line_start":125,"line_end":125,"column_start":33,"column_end":44},"kind":{"Impl":{"id":380}},"from":{"krate":0,"index":2331},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":270954,"byte_end":270965,"line_start":148,"line_end":148,"column_start":28,"column_end":39},"kind":{"Impl":{"id":381}},"from":{"krate":0,"index":2331},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":271499,"byte_end":271510,"line_start":171,"line_end":171,"column_start":19,"column_end":30},"kind":{"Impl":{"id":382}},"from":{"krate":0,"index":2331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":273480,"byte_end":273491,"line_start":223,"line_end":223,"column_start":20,"column_end":31},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":2331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":274146,"byte_end":274157,"line_start":247,"line_end":247,"column_start":20,"column_end":31},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":2331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":297774,"byte_end":297785,"line_start":827,"line_end":827,"column_start":25,"column_end":36},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":2331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":301962,"byte_end":301973,"line_start":926,"line_end":926,"column_start":35,"column_end":46},"kind":{"Impl":{"id":386}},"from":{"krate":0,"index":2331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":303494,"byte_end":303505,"line_start":957,"line_end":957,"column_start":48,"column_end":59},"kind":{"Impl":{"id":387}},"from":{"krate":0,"index":2331},"to":{"krate":0,"index":140}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":304439,"byte_end":304450,"line_start":973,"line_end":973,"column_start":32,"column_end":43},"kind":{"Impl":{"id":388}},"from":{"krate":0,"index":2331},"to":{"krate":1,"index":1843}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\transform3d.rs","byte_start":304603,"byte_end":304614,"line_start":981,"line_end":981,"column_start":34,"column_end":45},"kind":{"Impl":{"id":389}},"from":{"krate":0,"index":2331},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":318497,"byte_end":318510,"line_start":53,"line_end":53,"column_start":34,"column_end":47},"kind":{"Impl":{"id":390}},"from":{"krate":0,"index":2507},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":318563,"byte_end":318576,"line_start":55,"line_end":55,"column_start":36,"column_end":49},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":2507},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":318784,"byte_end":318797,"line_start":65,"line_end":65,"column_start":26,"column_end":39},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":2507},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":318859,"byte_end":318872,"line_start":67,"line_end":67,"column_start":33,"column_end":46},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":2507},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319035,"byte_end":319048,"line_start":75,"line_end":75,"column_start":28,"column_end":41},"kind":{"Impl":{"id":394}},"from":{"krate":0,"index":2507},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319214,"byte_end":319227,"line_start":84,"line_end":84,"column_start":19,"column_end":32},"kind":{"Impl":{"id":395}},"from":{"krate":0,"index":2507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":319590,"byte_end":319603,"line_start":101,"line_end":101,"column_start":19,"column_end":32},"kind":{"Impl":{"id":396}},"from":{"krate":0,"index":2507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":320559,"byte_end":320572,"line_start":144,"line_end":144,"column_start":19,"column_end":32},"kind":{"Impl":{"id":397}},"from":{"krate":0,"index":2507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":320728,"byte_end":320741,"line_start":154,"line_end":154,"column_start":19,"column_end":32},"kind":{"Impl":{"id":398}},"from":{"krate":0,"index":2507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":320933,"byte_end":320946,"line_start":165,"line_end":165,"column_start":19,"column_end":32},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":2507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":321468,"byte_end":321481,"line_start":185,"line_end":185,"column_start":19,"column_end":32},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":2507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":321765,"byte_end":321778,"line_start":197,"line_end":197,"column_start":5,"column_end":18},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":2507},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":322139,"byte_end":322152,"line_start":212,"line_end":212,"column_start":9,"column_end":22},"kind":{"Impl":{"id":402}},"from":{"krate":0,"index":2507},"to":{"krate":1,"index":1920}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":322460,"byte_end":322473,"line_start":225,"line_end":225,"column_start":19,"column_end":32},"kind":{"Impl":{"id":403}},"from":{"krate":0,"index":2507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":322937,"byte_end":322950,"line_start":244,"line_end":244,"column_start":46,"column_end":59},"kind":{"Impl":{"id":404}},"from":{"krate":0,"index":2507},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":323100,"byte_end":323113,"line_start":251,"line_end":251,"column_start":46,"column_end":59},"kind":{"Impl":{"id":405}},"from":{"krate":0,"index":2507},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":323260,"byte_end":323273,"line_start":258,"line_end":258,"column_start":54,"column_end":67},"kind":{"Impl":{"id":406}},"from":{"krate":0,"index":2507},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":323605,"byte_end":323618,"line_start":275,"line_end":275,"column_start":32,"column_end":45},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":2507},"to":{"krate":1,"index":1843}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":323758,"byte_end":323771,"line_start":283,"line_end":283,"column_start":46,"column_end":59},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":2507},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":323964,"byte_end":323977,"line_start":289,"line_end":289,"column_start":50,"column_end":63},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":2507},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":324503,"byte_end":324516,"line_start":309,"line_end":309,"column_start":34,"column_end":47},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":2624},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":324569,"byte_end":324582,"line_start":311,"line_end":311,"column_start":36,"column_end":49},"kind":{"Impl":{"id":411}},"from":{"krate":0,"index":2624},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":325517,"byte_end":325530,"line_start":345,"line_end":345,"column_start":26,"column_end":39},"kind":{"Impl":{"id":412}},"from":{"krate":0,"index":2624},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":325592,"byte_end":325605,"line_start":347,"line_end":347,"column_start":33,"column_end":46},"kind":{"Impl":{"id":413}},"from":{"krate":0,"index":2624},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":325789,"byte_end":325802,"line_start":355,"line_end":355,"column_start":28,"column_end":41},"kind":{"Impl":{"id":414}},"from":{"krate":0,"index":2624},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":325992,"byte_end":326005,"line_start":365,"line_end":365,"column_start":19,"column_end":32},"kind":{"Impl":{"id":415}},"from":{"krate":0,"index":2624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":326388,"byte_end":326401,"line_start":383,"line_end":383,"column_start":19,"column_end":32},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":2624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":327432,"byte_end":327445,"line_start":428,"line_end":428,"column_start":19,"column_end":32},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":2624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":327612,"byte_end":327625,"line_start":438,"line_end":438,"column_start":19,"column_end":32},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":2624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":327833,"byte_end":327846,"line_start":449,"line_end":449,"column_start":19,"column_end":32},"kind":{"Impl":{"id":419}},"from":{"krate":0,"index":2624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":328575,"byte_end":328588,"line_start":475,"line_end":475,"column_start":19,"column_end":32},"kind":{"Impl":{"id":420}},"from":{"krate":0,"index":2624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":328881,"byte_end":328894,"line_start":487,"line_end":487,"column_start":5,"column_end":18},"kind":{"Impl":{"id":421}},"from":{"krate":0,"index":2624},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":329285,"byte_end":329298,"line_start":503,"line_end":503,"column_start":9,"column_end":22},"kind":{"Impl":{"id":422}},"from":{"krate":0,"index":2624},"to":{"krate":1,"index":1920}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":329636,"byte_end":329649,"line_start":517,"line_end":517,"column_start":19,"column_end":32},"kind":{"Impl":{"id":423}},"from":{"krate":0,"index":2624},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":330129,"byte_end":330142,"line_start":536,"line_end":536,"column_start":46,"column_end":59},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":2624},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":330297,"byte_end":330310,"line_start":543,"line_end":543,"column_start":46,"column_end":59},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":2624},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":330465,"byte_end":330478,"line_start":550,"line_end":550,"column_start":54,"column_end":67},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":2624},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":330818,"byte_end":330831,"line_start":567,"line_end":567,"column_start":32,"column_end":45},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":2624},"to":{"krate":1,"index":1843}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":330971,"byte_end":330984,"line_start":575,"line_end":575,"column_start":46,"column_end":59},"kind":{"Impl":{"id":428}},"from":{"krate":0,"index":2624},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\translation.rs","byte_start":331190,"byte_end":331203,"line_start":581,"line_end":581,"column_start":50,"column_end":63},"kind":{"Impl":{"id":429}},"from":{"krate":0,"index":2624},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":336401,"byte_end":336409,"line_start":46,"line_end":46,"column_start":27,"column_end":35},"kind":{"Impl":{"id":430}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":336448,"byte_end":336456,"line_start":48,"line_end":48,"column_start":29,"column_end":37},"kind":{"Impl":{"id":431}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":337287,"byte_end":337295,"line_start":81,"line_end":81,"column_start":23,"column_end":31},"kind":{"Impl":{"id":432}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":337342,"byte_end":337350,"line_start":83,"line_end":83,"column_start":37,"column_end":45},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":337482,"byte_end":337490,"line_start":89,"line_end":89,"column_start":27,"column_end":35},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":337639,"byte_end":337647,"line_start":96,"line_end":96,"column_start":27,"column_end":35},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":2796},"to":{"krate":0,"index":426}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":337844,"byte_end":337852,"line_start":104,"line_end":104,"column_start":39,"column_end":47},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":338075,"byte_end":338083,"line_start":113,"line_end":113,"column_start":43,"column_end":51},"kind":{"Impl":{"id":437}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":338363,"byte_end":338371,"line_start":125,"line_end":125,"column_start":33,"column_end":41},"kind":{"Impl":{"id":438}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1843}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":338489,"byte_end":338497,"line_start":131,"line_end":131,"column_start":12,"column_end":20},"kind":{"Impl":{"id":439}},"from":{"krate":0,"index":2796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":340368,"byte_end":340376,"line_start":209,"line_end":209,"column_start":18,"column_end":26},"kind":{"Impl":{"id":440}},"from":{"krate":0,"index":2796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":343681,"byte_end":343689,"line_start":343,"line_end":343,"column_start":12,"column_end":20},"kind":{"Impl":{"id":441}},"from":{"krate":0,"index":2796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":344104,"byte_end":344112,"line_start":362,"line_end":362,"column_start":12,"column_end":20},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":2796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":345001,"byte_end":345009,"line_start":395,"line_end":395,"column_start":19,"column_end":27},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":2796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":346592,"byte_end":346600,"line_start":452,"line_end":452,"column_start":12,"column_end":20},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":2796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":347718,"byte_end":347726,"line_start":487,"line_end":487,"column_start":24,"column_end":32},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":2796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":349031,"byte_end":349039,"line_start":531,"line_end":531,"column_start":23,"column_end":31},"kind":{"Impl":{"id":446}},"from":{"krate":0,"index":2796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":349591,"byte_end":349599,"line_start":551,"line_end":551,"column_start":28,"column_end":36},"kind":{"Impl":{"id":447}},"from":{"krate":0,"index":2796},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":352460,"byte_end":352468,"line_start":630,"line_end":630,"column_start":25,"column_end":33},"kind":{"Impl":{"id":448}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1942}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":352634,"byte_end":352642,"line_start":640,"line_end":640,"column_start":25,"column_end":33},"kind":{"Impl":{"id":449}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":352875,"byte_end":352883,"line_start":649,"line_end":649,"column_start":53,"column_end":61},"kind":{"Impl":{"id":450}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1948}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":353014,"byte_end":353022,"line_start":657,"line_end":657,"column_start":25,"column_end":33},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1920}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":353262,"byte_end":353270,"line_start":666,"line_end":666,"column_start":69,"column_end":77},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1952}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":353412,"byte_end":353420,"line_start":674,"line_end":674,"column_start":36,"column_end":44},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":353648,"byte_end":353656,"line_start":683,"line_end":683,"column_start":56,"column_end":64},"kind":{"Impl":{"id":454}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1956}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":353814,"byte_end":353822,"line_start":690,"line_end":690,"column_start":56,"column_end":64},"kind":{"Impl":{"id":455}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":354076,"byte_end":354084,"line_start":699,"line_end":699,"column_start":61,"column_end":69},"kind":{"Impl":{"id":456}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1956}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":354268,"byte_end":354276,"line_start":708,"line_end":708,"column_start":36,"column_end":44},"kind":{"Impl":{"id":457}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":354504,"byte_end":354512,"line_start":717,"line_end":717,"column_start":56,"column_end":64},"kind":{"Impl":{"id":458}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1960}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":354670,"byte_end":354678,"line_start":724,"line_end":724,"column_start":56,"column_end":64},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":354932,"byte_end":354940,"line_start":733,"line_end":733,"column_start":61,"column_end":69},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1960}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":355117,"byte_end":355125,"line_start":742,"line_end":742,"column_start":29,"column_end":37},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":2796},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":355285,"byte_end":355293,"line_start":750,"line_end":750,"column_start":27,"column_end":35},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":2796},"to":{"krate":0,"index":440}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":355451,"byte_end":355459,"line_start":758,"line_end":758,"column_start":29,"column_end":37},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":2796},"to":{"krate":0,"index":438}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":355646,"byte_end":355654,"line_start":766,"line_end":766,"column_start":54,"column_end":62},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":2796},"to":{"krate":0,"index":140}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":355978,"byte_end":355986,"line_start":779,"line_end":779,"column_start":29,"column_end":37},"kind":{"Impl":{"id":465}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356087,"byte_end":356095,"line_start":785,"line_end":785,"column_start":29,"column_end":37},"kind":{"Impl":{"id":466}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356198,"byte_end":356206,"line_start":791,"line_end":791,"column_start":29,"column_end":37},"kind":{"Impl":{"id":467}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356307,"byte_end":356315,"line_start":797,"line_end":797,"column_start":29,"column_end":37},"kind":{"Impl":{"id":468}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356435,"byte_end":356443,"line_start":803,"line_end":803,"column_start":35,"column_end":43},"kind":{"Impl":{"id":469}},"from":{"krate":0,"index":2796},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356941,"byte_end":356949,"line_start":826,"line_end":826,"column_start":27,"column_end":35},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":356988,"byte_end":356996,"line_start":828,"line_end":828,"column_start":29,"column_end":37},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":357873,"byte_end":357881,"line_start":862,"line_end":862,"column_start":23,"column_end":31},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":357928,"byte_end":357936,"line_start":864,"line_end":864,"column_start":37,"column_end":45},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":358089,"byte_end":358097,"line_start":870,"line_end":870,"column_start":27,"column_end":35},"kind":{"Impl":{"id":474}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":358270,"byte_end":358278,"line_start":878,"line_end":878,"column_start":27,"column_end":35},"kind":{"Impl":{"id":475}},"from":{"krate":0,"index":3017},"to":{"krate":0,"index":426}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":358480,"byte_end":358488,"line_start":886,"line_end":886,"column_start":39,"column_end":47},"kind":{"Impl":{"id":476}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":358739,"byte_end":358747,"line_start":896,"line_end":896,"column_start":43,"column_end":51},"kind":{"Impl":{"id":477}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":359074,"byte_end":359082,"line_start":908,"line_end":908,"column_start":33,"column_end":41},"kind":{"Impl":{"id":478}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1843}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":359220,"byte_end":359228,"line_start":914,"line_end":914,"column_start":12,"column_end":20},"kind":{"Impl":{"id":479}},"from":{"krate":0,"index":3017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":360978,"byte_end":360986,"line_start":985,"line_end":985,"column_start":18,"column_end":26},"kind":{"Impl":{"id":480}},"from":{"krate":0,"index":3017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":364639,"byte_end":364647,"line_start":1131,"line_end":1131,"column_start":12,"column_end":20},"kind":{"Impl":{"id":481}},"from":{"krate":0,"index":3017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":365095,"byte_end":365103,"line_start":1151,"line_end":1151,"column_start":12,"column_end":20},"kind":{"Impl":{"id":482}},"from":{"krate":0,"index":3017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":365690,"byte_end":365698,"line_start":1173,"line_end":1173,"column_start":19,"column_end":27},"kind":{"Impl":{"id":483}},"from":{"krate":0,"index":3017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":367589,"byte_end":367597,"line_start":1240,"line_end":1240,"column_start":12,"column_end":20},"kind":{"Impl":{"id":484}},"from":{"krate":0,"index":3017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":368757,"byte_end":368765,"line_start":1275,"line_end":1275,"column_start":24,"column_end":32},"kind":{"Impl":{"id":485}},"from":{"krate":0,"index":3017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":370274,"byte_end":370282,"line_start":1329,"line_end":1329,"column_start":23,"column_end":31},"kind":{"Impl":{"id":486}},"from":{"krate":0,"index":3017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":370902,"byte_end":370910,"line_start":1351,"line_end":1351,"column_start":28,"column_end":36},"kind":{"Impl":{"id":487}},"from":{"krate":0,"index":3017},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":373848,"byte_end":373856,"line_start":1434,"line_end":1434,"column_start":25,"column_end":33},"kind":{"Impl":{"id":488}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1942}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":374031,"byte_end":374039,"line_start":1444,"line_end":1444,"column_start":25,"column_end":33},"kind":{"Impl":{"id":489}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":374281,"byte_end":374289,"line_start":1453,"line_end":1453,"column_start":53,"column_end":61},"kind":{"Impl":{"id":490}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1948}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":374420,"byte_end":374428,"line_start":1461,"line_end":1461,"column_start":25,"column_end":33},"kind":{"Impl":{"id":491}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1920}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":374686,"byte_end":374694,"line_start":1470,"line_end":1470,"column_start":69,"column_end":77},"kind":{"Impl":{"id":492}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1952}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":374836,"byte_end":374844,"line_start":1478,"line_end":1478,"column_start":36,"column_end":44},"kind":{"Impl":{"id":493}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":375142,"byte_end":375150,"line_start":1491,"line_end":1491,"column_start":56,"column_end":64},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1956}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":375308,"byte_end":375316,"line_start":1498,"line_end":1498,"column_start":56,"column_end":64},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":375596,"byte_end":375604,"line_start":1507,"line_end":1507,"column_start":61,"column_end":69},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1956}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":375823,"byte_end":375831,"line_start":1517,"line_end":1517,"column_start":36,"column_end":44},"kind":{"Impl":{"id":497}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":376129,"byte_end":376137,"line_start":1530,"line_end":1530,"column_start":56,"column_end":64},"kind":{"Impl":{"id":498}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1960}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":376295,"byte_end":376303,"line_start":1537,"line_end":1537,"column_start":56,"column_end":64},"kind":{"Impl":{"id":499}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":376583,"byte_end":376591,"line_start":1546,"line_end":1546,"column_start":61,"column_end":69},"kind":{"Impl":{"id":500}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1960}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":376803,"byte_end":376811,"line_start":1556,"line_end":1556,"column_start":29,"column_end":37},"kind":{"Impl":{"id":501}},"from":{"krate":0,"index":3017},"to":{"krate":0,"index":436}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":376971,"byte_end":376979,"line_start":1564,"line_end":1564,"column_start":27,"column_end":35},"kind":{"Impl":{"id":502}},"from":{"krate":0,"index":3017},"to":{"krate":0,"index":440}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":377137,"byte_end":377145,"line_start":1572,"line_end":1572,"column_start":29,"column_end":37},"kind":{"Impl":{"id":503}},"from":{"krate":0,"index":3017},"to":{"krate":0,"index":438}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":377332,"byte_end":377340,"line_start":1580,"line_end":1580,"column_start":54,"column_end":62},"kind":{"Impl":{"id":504}},"from":{"krate":0,"index":3017},"to":{"krate":0,"index":140}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":377786,"byte_end":377794,"line_start":1598,"line_end":1598,"column_start":29,"column_end":37},"kind":{"Impl":{"id":505}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":377903,"byte_end":377911,"line_start":1604,"line_end":1604,"column_start":29,"column_end":37},"kind":{"Impl":{"id":506}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378023,"byte_end":378031,"line_start":1610,"line_end":1610,"column_start":32,"column_end":40},"kind":{"Impl":{"id":507}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1773}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378146,"byte_end":378154,"line_start":1616,"line_end":1616,"column_start":32,"column_end":40},"kind":{"Impl":{"id":508}},"from":{"krate":0,"index":3017},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":378649,"byte_end":378661,"line_start":1638,"line_end":1638,"column_start":6,"column_end":18},"kind":{"Impl":{"id":509}},"from":{"krate":0,"index":3724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\vector.rs","byte_start":381102,"byte_end":381114,"line_start":1715,"line_end":1715,"column_start":6,"column_end":18},"kind":{"Impl":{"id":510}},"from":{"krate":0,"index":3742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":400858,"byte_end":400863,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"kind":{"Impl":{"id":511}},"from":{"krate":0,"index":3305},"to":{"krate":1,"index":6114}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":401002,"byte_end":401007,"line_start":46,"line_end":46,"column_start":27,"column_end":32},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":3305},"to":{"krate":1,"index":1862}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":401046,"byte_end":401051,"line_start":48,"line_end":48,"column_start":29,"column_end":34},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":3305},"to":{"krate":1,"index":1562}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":401202,"byte_end":401207,"line_start":54,"line_end":54,"column_start":50,"column_end":55},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":3305},"to":{"krate":1,"index":1588}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":401347,"byte_end":401352,"line_start":60,"line_end":60,"column_start":23,"column_end":28},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":3305},"to":{"krate":1,"index":1593}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":401401,"byte_end":401406,"line_start":62,"line_end":62,"column_start":39,"column_end":44},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":3305},"to":{"krate":1,"index":5923}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":401638,"byte_end":401643,"line_start":71,"line_end":71,"column_start":43,"column_end":48},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":3305},"to":{"krate":1,"index":5928}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":401894,"byte_end":401899,"line_start":81,"line_end":81,"column_start":12,"column_end":17},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":402094,"byte_end":402099,"line_start":92,"line_end":92,"column_start":12,"column_end":17},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":402419,"byte_end":402424,"line_start":105,"line_end":105,"column_start":12,"column_end":17},"kind":{"Impl":{"id":520}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":404385,"byte_end":404390,"line_start":156,"line_end":156,"column_start":12,"column_end":17},"kind":{"Impl":{"id":521}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":405369,"byte_end":405374,"line_start":198,"line_end":198,"column_start":12,"column_end":17},"kind":{"Impl":{"id":522}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":405677,"byte_end":405682,"line_start":213,"line_end":213,"column_start":12,"column_end":17},"kind":{"Impl":{"id":523}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":406200,"byte_end":406205,"line_start":242,"line_end":242,"column_start":12,"column_end":17},"kind":{"Impl":{"id":524}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":406683,"byte_end":406688,"line_start":257,"line_end":257,"column_start":12,"column_end":17},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":407899,"byte_end":407904,"line_start":304,"line_end":304,"column_start":12,"column_end":17},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":408256,"byte_end":408261,"line_start":318,"line_end":318,"column_start":12,"column_end":17},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":408482,"byte_end":408487,"line_start":328,"line_end":328,"column_start":12,"column_end":17},"kind":{"Impl":{"id":528}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":409047,"byte_end":409052,"line_start":349,"line_end":349,"column_start":12,"column_end":17},"kind":{"Impl":{"id":529}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":409397,"byte_end":409402,"line_start":365,"line_end":365,"column_start":12,"column_end":17},"kind":{"Impl":{"id":530}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":409972,"byte_end":409977,"line_start":394,"line_end":394,"column_start":12,"column_end":17},"kind":{"Impl":{"id":531}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":410154,"byte_end":410159,"line_start":404,"line_end":404,"column_start":12,"column_end":17},"kind":{"Impl":{"id":532}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":410407,"byte_end":410412,"line_start":415,"line_end":415,"column_start":23,"column_end":28},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":3305},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":410622,"byte_end":410627,"line_start":426,"line_end":426,"column_start":23,"column_end":28},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":3305},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":410857,"byte_end":410862,"line_start":437,"line_end":437,"column_start":43,"column_end":48},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":3305},"to":{"krate":1,"index":1925}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":411124,"byte_end":411129,"line_start":448,"line_end":448,"column_start":43,"column_end":48},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":3305},"to":{"krate":1,"index":1930}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":411360,"byte_end":411365,"line_start":459,"line_end":459,"column_start":12,"column_end":17},"kind":{"Impl":{"id":537}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":412052,"byte_end":412057,"line_start":488,"line_end":488,"column_start":12,"column_end":17},"kind":{"Impl":{"id":538}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":413229,"byte_end":413234,"line_start":518,"line_end":518,"column_start":12,"column_end":17},"kind":{"Impl":{"id":539}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":413913,"byte_end":413918,"line_start":537,"line_end":537,"column_start":12,"column_end":17},"kind":{"Impl":{"id":540}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":414621,"byte_end":414626,"line_start":563,"line_end":563,"column_start":28,"column_end":33},"kind":{"Impl":{"id":541}},"from":{"krate":0,"index":3305},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\box3d.rs","byte_start":416375,"byte_end":416380,"line_start":617,"line_end":617,"column_start":35,"column_end":40},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":3305},"to":{"krate":1,"index":1776}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":425337,"byte_end":425345,"line_start":13,"line_end":13,"column_start":19,"column_end":27},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":3761},"to":{"krate":1,"index":2023}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":425433,"byte_end":425441,"line_start":20,"line_end":20,"column_start":9,"column_end":17},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":3761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":425527,"byte_end":425535,"line_start":27,"line_end":27,"column_start":12,"column_end":20},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":3761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":426538,"byte_end":426546,"line_start":64,"line_end":64,"column_start":12,"column_end":20},"kind":{"Impl":{"id":546}},"from":{"krate":0,"index":3761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":427316,"byte_end":427324,"line_start":92,"line_end":92,"column_start":12,"column_end":20},"kind":{"Impl":{"id":547}},"from":{"krate":0,"index":3761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":427511,"byte_end":427519,"line_start":102,"line_end":102,"column_start":12,"column_end":20},"kind":{"Impl":{"id":548}},"from":{"krate":0,"index":3761},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\erumn\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\euclid-0.20.10\\src\\nonempty.rs","byte_start":428463,"byte_end":428471,"line_start":134,"line_end":134,"column_start":12,"column_end":20},"kind":{"Impl":{"id":549}},"from":{"krate":0,"index":3761},"to":{"krate":4294967295,"index":4294967295}}]}